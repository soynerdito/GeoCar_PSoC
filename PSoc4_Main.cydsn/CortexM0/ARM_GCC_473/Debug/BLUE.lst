ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"BLUE.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	BLUE_initVar
  18              		.bss
  19              		.type	BLUE_initVar, %object
  20              		.size	BLUE_initVar, 1
  21              	BLUE_initVar:
  22 0000 00       		.space	1
  23              		.comm	BLUE_txBuffer,50,4
  24              		.global	BLUE_txBufferRead
  25              		.type	BLUE_txBufferRead, %object
  26              		.size	BLUE_txBufferRead, 1
  27              	BLUE_txBufferRead:
  28 0001 00       		.space	1
  29              		.global	BLUE_txBufferWrite
  30              		.type	BLUE_txBufferWrite, %object
  31              		.size	BLUE_txBufferWrite, 1
  32              	BLUE_txBufferWrite:
  33 0002 00       		.space	1
  34              		.section	.text.BLUE_Start,"ax",%progbits
  35              		.align	2
  36              		.global	BLUE_Start
  37              		.code	16
  38              		.thumb_func
  39              		.type	BLUE_Start, %function
  40              	BLUE_Start:
  41              	.LFB0:
  42              		.file 1 ".\\Generated_Source\\PSoC4\\BLUE.c"
   1:.\Generated_Source\PSoC4/BLUE.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/BLUE.c **** * File Name: BLUE.c
   3:.\Generated_Source\PSoC4/BLUE.c **** * Version 2.30
   4:.\Generated_Source\PSoC4/BLUE.c **** *
   5:.\Generated_Source\PSoC4/BLUE.c **** * Description:
   6:.\Generated_Source\PSoC4/BLUE.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC4/BLUE.c **** *
   8:.\Generated_Source\PSoC4/BLUE.c **** * Note:
   9:.\Generated_Source\PSoC4/BLUE.c **** *
  10:.\Generated_Source\PSoC4/BLUE.c **** ********************************************************************************
  11:.\Generated_Source\PSoC4/BLUE.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC4/BLUE.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC4/BLUE.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC4/BLUE.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC4/BLUE.c **** *******************************************************************************/
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 2


  16:.\Generated_Source\PSoC4/BLUE.c **** 
  17:.\Generated_Source\PSoC4/BLUE.c **** #include "BLUE.h"
  18:.\Generated_Source\PSoC4/BLUE.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC4/BLUE.c **** #if(BLUE_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC4/BLUE.c ****     #include "BLUE_IntClock.h"
  21:.\Generated_Source\PSoC4/BLUE.c **** #endif /* End BLUE_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC4/BLUE.c **** 
  23:.\Generated_Source\PSoC4/BLUE.c **** 
  24:.\Generated_Source\PSoC4/BLUE.c **** /***************************************
  25:.\Generated_Source\PSoC4/BLUE.c **** * Global data allocation
  26:.\Generated_Source\PSoC4/BLUE.c **** ***************************************/
  27:.\Generated_Source\PSoC4/BLUE.c **** 
  28:.\Generated_Source\PSoC4/BLUE.c **** uint8 BLUE_initVar = 0u;
  29:.\Generated_Source\PSoC4/BLUE.c **** #if( BLUE_TX_ENABLED && (BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH))
  30:.\Generated_Source\PSoC4/BLUE.c ****     volatile uint8 BLUE_txBuffer[BLUE_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC4/BLUE.c ****     volatile uint8 BLUE_txBufferRead = 0u;
  32:.\Generated_Source\PSoC4/BLUE.c ****     uint8 BLUE_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC4/BLUE.c **** #endif /* End BLUE_TX_ENABLED */
  34:.\Generated_Source\PSoC4/BLUE.c **** #if( ( BLUE_RX_ENABLED || BLUE_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC4/BLUE.c ****      (BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC4/BLUE.c ****     volatile uint8 BLUE_rxBuffer[BLUE_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC4/BLUE.c ****     volatile uint8 BLUE_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC4/BLUE.c ****     volatile uint8 BLUE_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC4/BLUE.c ****     volatile uint8 BLUE_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC4/BLUE.c ****     volatile uint8 BLUE_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC4/BLUE.c ****     #if (BLUE_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC4/BLUE.c ****         volatile uint8 BLUE_rxAddressMode = BLUE_RXADDRESSMODE;
  43:.\Generated_Source\PSoC4/BLUE.c ****         volatile uint8 BLUE_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC4/BLUE.c **** #endif /* End BLUE_RX_ENABLED */
  46:.\Generated_Source\PSoC4/BLUE.c **** 
  47:.\Generated_Source\PSoC4/BLUE.c **** 
  48:.\Generated_Source\PSoC4/BLUE.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC4/BLUE.c **** * Function Name: BLUE_Start
  50:.\Generated_Source\PSoC4/BLUE.c **** ********************************************************************************
  51:.\Generated_Source\PSoC4/BLUE.c **** *
  52:.\Generated_Source\PSoC4/BLUE.c **** * Summary:
  53:.\Generated_Source\PSoC4/BLUE.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC4/BLUE.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC4/BLUE.c **** *
  56:.\Generated_Source\PSoC4/BLUE.c **** * Parameters:
  57:.\Generated_Source\PSoC4/BLUE.c **** *  None.
  58:.\Generated_Source\PSoC4/BLUE.c **** *
  59:.\Generated_Source\PSoC4/BLUE.c **** * Return:
  60:.\Generated_Source\PSoC4/BLUE.c **** *  None.
  61:.\Generated_Source\PSoC4/BLUE.c **** *
  62:.\Generated_Source\PSoC4/BLUE.c **** * Global variables:
  63:.\Generated_Source\PSoC4/BLUE.c **** *  The BLUE_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC4/BLUE.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC4/BLUE.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC4/BLUE.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC4/BLUE.c **** *  to the BLUE_Start() routine.
  68:.\Generated_Source\PSoC4/BLUE.c **** *
  69:.\Generated_Source\PSoC4/BLUE.c **** * Reentrant:
  70:.\Generated_Source\PSoC4/BLUE.c **** *  No.
  71:.\Generated_Source\PSoC4/BLUE.c **** *
  72:.\Generated_Source\PSoC4/BLUE.c **** *******************************************************************************/
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 3


  73:.\Generated_Source\PSoC4/BLUE.c **** void BLUE_Start(void) 
  74:.\Generated_Source\PSoC4/BLUE.c **** {
  43              		.loc 1 74 0
  44              		.cfi_startproc
  45 0000 80B5     		push	{r7, lr}
  46              	.LCFI0:
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
  51              	.LCFI1:
  52              		.cfi_def_cfa_register 7
  75:.\Generated_Source\PSoC4/BLUE.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC4/BLUE.c ****     if(BLUE_initVar == 0u)
  53              		.loc 1 76 0
  54 0004 064B     		ldr	r3, .L3
  55 0006 1B78     		ldrb	r3, [r3]
  56 0008 002B     		cmp	r3, #0
  57 000a 04D1     		bne	.L2
  77:.\Generated_Source\PSoC4/BLUE.c ****     {
  78:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_Init();
  58              		.loc 1 78 0
  59 000c FFF7FEFF 		bl	BLUE_Init
  79:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_initVar = 1u;
  60              		.loc 1 79 0
  61 0010 034B     		ldr	r3, .L3
  62 0012 0122     		mov	r2, #1
  63 0014 1A70     		strb	r2, [r3]
  64              	.L2:
  80:.\Generated_Source\PSoC4/BLUE.c ****     }
  81:.\Generated_Source\PSoC4/BLUE.c ****     BLUE_Enable();
  65              		.loc 1 81 0
  66 0016 FFF7FEFF 		bl	BLUE_Enable
  82:.\Generated_Source\PSoC4/BLUE.c **** }
  67              		.loc 1 82 0
  68 001a BD46     		mov	sp, r7
  69              		@ sp needed for prologue
  70 001c 80BD     		pop	{r7, pc}
  71              	.L4:
  72 001e C046     		.align	2
  73              	.L3:
  74 0020 00000000 		.word	BLUE_initVar
  75              		.cfi_endproc
  76              	.LFE0:
  77              		.size	BLUE_Start, .-BLUE_Start
  78              		.section	.text.BLUE_Init,"ax",%progbits
  79              		.align	2
  80              		.global	BLUE_Init
  81              		.code	16
  82              		.thumb_func
  83              		.type	BLUE_Init, %function
  84              	BLUE_Init:
  85              	.LFB1:
  83:.\Generated_Source\PSoC4/BLUE.c **** 
  84:.\Generated_Source\PSoC4/BLUE.c **** 
  85:.\Generated_Source\PSoC4/BLUE.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC4/BLUE.c **** * Function Name: BLUE_Init
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 4


  87:.\Generated_Source\PSoC4/BLUE.c **** ********************************************************************************
  88:.\Generated_Source\PSoC4/BLUE.c **** *
  89:.\Generated_Source\PSoC4/BLUE.c **** * Summary:
  90:.\Generated_Source\PSoC4/BLUE.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC4/BLUE.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC4/BLUE.c **** *  BLUE_Start().
  93:.\Generated_Source\PSoC4/BLUE.c **** *
  94:.\Generated_Source\PSoC4/BLUE.c **** * Parameters:
  95:.\Generated_Source\PSoC4/BLUE.c **** *  None.
  96:.\Generated_Source\PSoC4/BLUE.c **** *
  97:.\Generated_Source\PSoC4/BLUE.c **** * Return:
  98:.\Generated_Source\PSoC4/BLUE.c **** *  None.
  99:.\Generated_Source\PSoC4/BLUE.c **** *
 100:.\Generated_Source\PSoC4/BLUE.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC4/BLUE.c **** void BLUE_Init(void) 
 102:.\Generated_Source\PSoC4/BLUE.c **** {
  86              		.loc 1 102 0
  87              		.cfi_startproc
  88 0000 80B5     		push	{r7, lr}
  89              	.LCFI2:
  90              		.cfi_def_cfa_offset 8
  91              		.cfi_offset 7, -8
  92              		.cfi_offset 14, -4
  93 0002 00AF     		add	r7, sp, #0
  94              	.LCFI3:
  95              		.cfi_def_cfa_register 7
 103:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_RX_ENABLED || BLUE_HD_ENABLED)
 104:.\Generated_Source\PSoC4/BLUE.c **** 
 105:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RX_INTERRUPT_ENABLED && (BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH))
 106:.\Generated_Source\PSoC4/BLUE.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC4/BLUE.c ****             (void)CyIntSetVector(BLUE_RX_VECT_NUM, &BLUE_RXISR);
 108:.\Generated_Source\PSoC4/BLUE.c ****             CyIntSetPriority(BLUE_RX_VECT_NUM, BLUE_RX_PRIOR_NUM);
 109:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC4/BLUE.c **** 
 111:.\Generated_Source\PSoC4/BLUE.c ****         #if (BLUE_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_SetRxAddressMode(BLUE_RXAddressMode);
 113:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_SetRxAddress1(BLUE_RXHWADDRESS1);
 114:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_SetRxAddress2(BLUE_RXHWADDRESS2);
 115:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC4/BLUE.c **** 
 117:.\Generated_Source\PSoC4/BLUE.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXBITCTR_PERIOD_REG = BLUE_RXBITCTR_INIT;
  96              		.loc 1 118 0
  97 0004 0C4B     		ldr	r3, .L6
  98 0006 7222     		mov	r2, #114
  99 0008 1A70     		strb	r2, [r3]
 119:.\Generated_Source\PSoC4/BLUE.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXSTATUS_MASK_REG  = BLUE_INIT_RX_INTERRUPTS_MASK;
 100              		.loc 1 120 0
 101 000a 0C4B     		ldr	r3, .L6+4
 102 000c 2022     		mov	r2, #32
 103 000e 1A70     		strb	r2, [r3]
 121:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_RX_ENABLED || BLUE_HD_ENABLED*/
 122:.\Generated_Source\PSoC4/BLUE.c **** 
 123:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_TX_ENABLED)
 124:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_TX_INTERRUPT_ENABLED && (BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH))
 125:.\Generated_Source\PSoC4/BLUE.c ****             /* Set the TX Interrupt. */
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 5


 126:.\Generated_Source\PSoC4/BLUE.c ****             (void)CyIntSetVector(BLUE_TX_VECT_NUM, &BLUE_TXISR);
 104              		.loc 1 126 0
 105 0010 0B4B     		ldr	r3, .L6+8
 106 0012 0020     		mov	r0, #0
 107 0014 191C     		mov	r1, r3
 108 0016 FFF7FEFF 		bl	CyIntSetVector
 127:.\Generated_Source\PSoC4/BLUE.c ****             CyIntSetPriority(BLUE_TX_VECT_NUM, BLUE_TX_PRIOR_NUM);
 109              		.loc 1 127 0
 110 001a 0020     		mov	r0, #0
 111 001c 0321     		mov	r1, #3
 112 001e FFF7FEFF 		bl	CyIntSetPriority
 128:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC4/BLUE.c **** 
 130:.\Generated_Source\PSoC4/BLUE.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_TXBITCLKGEN_CTR_REG = BLUE_BIT_CENTER;
 113              		.loc 1 132 0
 114 0022 084B     		ldr	r3, .L6+12
 115 0024 0722     		mov	r2, #7
 116 0026 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_TXBITCLKTX_COMPLETE_REG = (BLUE_NUMBER_OF_DATA_BITS +
 117              		.loc 1 133 0
 118 0028 074B     		ldr	r3, .L6+16
 119 002a 4822     		mov	r2, #72
 120 002c 1A70     		strb	r2, [r3]
 134:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_NUMBER_OF_START_BIT) * BLUE_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC4/BLUE.c ****         #else
 136:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_TXBITCTR_PERIOD_REG = ((BLUE_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_NUMBER_OF_START_BIT) * BLUE_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC4/BLUE.c **** 
 140:.\Generated_Source\PSoC4/BLUE.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_TX_INTERRUPT_ENABLED && (BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH))
 142:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_TXSTATUS_MASK_REG = BLUE_TX_STS_FIFO_EMPTY;
 121              		.loc 1 142 0
 122 002e 074B     		ldr	r3, .L6+20
 123 0030 0222     		mov	r2, #2
 124 0032 1A70     		strb	r2, [r3]
 143:.\Generated_Source\PSoC4/BLUE.c ****         #else
 144:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_TXSTATUS_MASK_REG = BLUE_INIT_TX_INTERRUPTS_MASK;
 145:.\Generated_Source\PSoC4/BLUE.c ****         #endif /*End BLUE_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC4/BLUE.c **** 
 147:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_TX_ENABLED */
 148:.\Generated_Source\PSoC4/BLUE.c **** 
 149:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_WriteControlRegister( \
 151:.\Generated_Source\PSoC4/BLUE.c ****             (BLUE_ReadControlRegister() & (uint8)~BLUE_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC4/BLUE.c ****             (uint8)(BLUE_PARITY_TYPE << BLUE_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC4/BLUE.c **** }
 125              		.loc 1 154 0
 126 0034 BD46     		mov	sp, r7
 127              		@ sp needed for prologue
 128 0036 80BD     		pop	{r7, pc}
 129              	.L7:
 130              		.align	2
 131              	.L6:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 6


 132 0038 80000F40 		.word	1074724992
 133 003c 81000F40 		.word	1074724993
 134 0040 00000000 		.word	BLUE_TXISR
 135 0044 23000F40 		.word	1074724899
 136 0048 33000F40 		.word	1074724915
 137 004c 82000F40 		.word	1074724994
 138              		.cfi_endproc
 139              	.LFE1:
 140              		.size	BLUE_Init, .-BLUE_Init
 141              		.section	.text.BLUE_Enable,"ax",%progbits
 142              		.align	2
 143              		.global	BLUE_Enable
 144              		.code	16
 145              		.thumb_func
 146              		.type	BLUE_Enable, %function
 147              	BLUE_Enable:
 148              	.LFB2:
 155:.\Generated_Source\PSoC4/BLUE.c **** 
 156:.\Generated_Source\PSoC4/BLUE.c **** 
 157:.\Generated_Source\PSoC4/BLUE.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC4/BLUE.c **** * Function Name: BLUE_Enable
 159:.\Generated_Source\PSoC4/BLUE.c **** ********************************************************************************
 160:.\Generated_Source\PSoC4/BLUE.c **** *
 161:.\Generated_Source\PSoC4/BLUE.c **** * Summary:
 162:.\Generated_Source\PSoC4/BLUE.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC4/BLUE.c **** *
 164:.\Generated_Source\PSoC4/BLUE.c **** * Parameters:
 165:.\Generated_Source\PSoC4/BLUE.c **** *  None.
 166:.\Generated_Source\PSoC4/BLUE.c **** *
 167:.\Generated_Source\PSoC4/BLUE.c **** * Return:
 168:.\Generated_Source\PSoC4/BLUE.c **** *  None.
 169:.\Generated_Source\PSoC4/BLUE.c **** *
 170:.\Generated_Source\PSoC4/BLUE.c **** * Global Variables:
 171:.\Generated_Source\PSoC4/BLUE.c **** *  BLUE_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC4/BLUE.c **** *
 173:.\Generated_Source\PSoC4/BLUE.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC4/BLUE.c **** void BLUE_Enable(void) 
 175:.\Generated_Source\PSoC4/BLUE.c **** {
 149              		.loc 1 175 0
 150              		.cfi_startproc
 151 0000 90B5     		push	{r4, r7, lr}
 152              	.LCFI4:
 153              		.cfi_def_cfa_offset 12
 154              		.cfi_offset 4, -12
 155              		.cfi_offset 7, -8
 156              		.cfi_offset 14, -4
 157 0002 83B0     		sub	sp, sp, #12
 158              	.LCFI5:
 159              		.cfi_def_cfa_offset 24
 160 0004 00AF     		add	r7, sp, #0
 161              	.LCFI6:
 162              		.cfi_def_cfa_register 7
 176:.\Generated_Source\PSoC4/BLUE.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC4/BLUE.c ****     enableInterrupts = CyEnterCriticalSection();
 163              		.loc 1 177 0
 164 0006 FC1D     		add	r4, r7, #7
 165 0008 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 7


 166 000c 031C     		mov	r3, r0
 167 000e 2370     		strb	r3, [r4]
 178:.\Generated_Source\PSoC4/BLUE.c **** 
 179:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_RX_ENABLED || BLUE_HD_ENABLED)
 180:.\Generated_Source\PSoC4/BLUE.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXBITCTR_CONTROL_REG |= BLUE_CNTR_ENABLE;
 168              		.loc 1 181 0
 169 0010 124B     		ldr	r3, .L9
 170 0012 124A     		ldr	r2, .L9
 171 0014 1278     		ldrb	r2, [r2]
 172 0016 D2B2     		uxtb	r2, r2
 173 0018 2021     		mov	r1, #32
 174 001a 0A43     		orr	r2, r1
 175 001c D2B2     		uxtb	r2, r2
 176 001e 1A70     		strb	r2, [r3]
 182:.\Generated_Source\PSoC4/BLUE.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXSTATUS_ACTL_REG  |= BLUE_INT_ENABLE;
 177              		.loc 1 183 0
 178 0020 0F4B     		ldr	r3, .L9+4
 179 0022 0F4A     		ldr	r2, .L9+4
 180 0024 1278     		ldrb	r2, [r2]
 181 0026 D2B2     		uxtb	r2, r2
 182 0028 1021     		mov	r1, #16
 183 002a 0A43     		orr	r2, r1
 184 002c D2B2     		uxtb	r2, r2
 185 002e 1A70     		strb	r2, [r3]
 184:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RX_INTERRUPT_ENABLED && (BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH))
 185:.\Generated_Source\PSoC4/BLUE.c ****             CyIntEnable(BLUE_RX_VECT_NUM);
 186:.\Generated_Source\PSoC4/BLUE.c ****             #if (BLUE_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_RX_ENABLED || BLUE_HD_ENABLED*/
 191:.\Generated_Source\PSoC4/BLUE.c **** 
 192:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_TX_ENABLED)
 193:.\Generated_Source\PSoC4/BLUE.c ****         /*TX Counter (DP/Count7) Enable */
 194:.\Generated_Source\PSoC4/BLUE.c ****         #if(!BLUE_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_TXBITCTR_CONTROL_REG |= BLUE_CNTR_ENABLE;
 196:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC4/BLUE.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_TXSTATUS_ACTL_REG |= BLUE_INT_ENABLE;
 186              		.loc 1 198 0
 187 0030 0C4B     		ldr	r3, .L9+8
 188 0032 0C4A     		ldr	r2, .L9+8
 189 0034 1278     		ldrb	r2, [r2]
 190 0036 D2B2     		uxtb	r2, r2
 191 0038 1021     		mov	r1, #16
 192 003a 0A43     		orr	r2, r1
 193 003c D2B2     		uxtb	r2, r2
 194 003e 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_TX_INTERRUPT_ENABLED && (BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH))
 200:.\Generated_Source\PSoC4/BLUE.c ****             CyIntEnable(BLUE_TX_VECT_NUM);
 195              		.loc 1 200 0
 196 0040 0020     		mov	r0, #0
 197 0042 FFF7FEFF 		bl	CyIntEnable
 201:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC4/BLUE.c ****      #endif /* End BLUE_TX_ENABLED */
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 8


 203:.\Generated_Source\PSoC4/BLUE.c **** 
 204:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC4/BLUE.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_IntClock_Start();
 198              		.loc 1 206 0
 199 0046 FFF7FEFF 		bl	BLUE_IntClock_Start
 207:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC4/BLUE.c **** 
 209:.\Generated_Source\PSoC4/BLUE.c ****     CyExitCriticalSection(enableInterrupts);
 200              		.loc 1 209 0
 201 004a FB1D     		add	r3, r7, #7
 202 004c 1B78     		ldrb	r3, [r3]
 203 004e 181C     		mov	r0, r3
 204 0050 FFF7FEFF 		bl	CyExitCriticalSection
 210:.\Generated_Source\PSoC4/BLUE.c **** }
 205              		.loc 1 210 0
 206 0054 BD46     		mov	sp, r7
 207 0056 03B0     		add	sp, sp, #12
 208              		@ sp needed for prologue
 209 0058 90BD     		pop	{r4, r7, pc}
 210              	.L10:
 211 005a C046     		.align	2
 212              	.L9:
 213 005c 90000F40 		.word	1074725008
 214 0060 91000F40 		.word	1074725009
 215 0064 92000F40 		.word	1074725010
 216              		.cfi_endproc
 217              	.LFE2:
 218              		.size	BLUE_Enable, .-BLUE_Enable
 219              		.section	.text.BLUE_Stop,"ax",%progbits
 220              		.align	2
 221              		.global	BLUE_Stop
 222              		.code	16
 223              		.thumb_func
 224              		.type	BLUE_Stop, %function
 225              	BLUE_Stop:
 226              	.LFB3:
 211:.\Generated_Source\PSoC4/BLUE.c **** 
 212:.\Generated_Source\PSoC4/BLUE.c **** 
 213:.\Generated_Source\PSoC4/BLUE.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC4/BLUE.c **** * Function Name: BLUE_Stop
 215:.\Generated_Source\PSoC4/BLUE.c **** ********************************************************************************
 216:.\Generated_Source\PSoC4/BLUE.c **** *
 217:.\Generated_Source\PSoC4/BLUE.c **** * Summary:
 218:.\Generated_Source\PSoC4/BLUE.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC4/BLUE.c **** *
 220:.\Generated_Source\PSoC4/BLUE.c **** * Parameters:
 221:.\Generated_Source\PSoC4/BLUE.c **** *  None.
 222:.\Generated_Source\PSoC4/BLUE.c **** *
 223:.\Generated_Source\PSoC4/BLUE.c **** * Return:
 224:.\Generated_Source\PSoC4/BLUE.c **** *  None.
 225:.\Generated_Source\PSoC4/BLUE.c **** *
 226:.\Generated_Source\PSoC4/BLUE.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC4/BLUE.c **** void BLUE_Stop(void) 
 228:.\Generated_Source\PSoC4/BLUE.c **** {
 227              		.loc 1 228 0
 228              		.cfi_startproc
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 9


 229 0000 90B5     		push	{r4, r7, lr}
 230              	.LCFI7:
 231              		.cfi_def_cfa_offset 12
 232              		.cfi_offset 4, -12
 233              		.cfi_offset 7, -8
 234              		.cfi_offset 14, -4
 235 0002 83B0     		sub	sp, sp, #12
 236              	.LCFI8:
 237              		.cfi_def_cfa_offset 24
 238 0004 00AF     		add	r7, sp, #0
 239              	.LCFI9:
 240              		.cfi_def_cfa_register 7
 229:.\Generated_Source\PSoC4/BLUE.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC4/BLUE.c ****     enableInterrupts = CyEnterCriticalSection();
 241              		.loc 1 230 0
 242 0006 FC1D     		add	r4, r7, #7
 243 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 244 000c 031C     		mov	r3, r0
 245 000e 2370     		strb	r3, [r4]
 231:.\Generated_Source\PSoC4/BLUE.c **** 
 232:.\Generated_Source\PSoC4/BLUE.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_RX_ENABLED || BLUE_HD_ENABLED)
 234:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXBITCTR_CONTROL_REG &= (uint8)~BLUE_CNTR_ENABLE;
 246              		.loc 1 234 0
 247 0010 114B     		ldr	r3, .L12
 248 0012 114A     		ldr	r2, .L12
 249 0014 1278     		ldrb	r2, [r2]
 250 0016 D2B2     		uxtb	r2, r2
 251 0018 2021     		mov	r1, #32
 252 001a 8A43     		bic	r2, r1
 253 001c D2B2     		uxtb	r2, r2
 254 001e 1A70     		strb	r2, [r3]
 235:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_RX_ENABLED */
 236:.\Generated_Source\PSoC4/BLUE.c **** 
 237:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_TX_ENABLED)
 238:.\Generated_Source\PSoC4/BLUE.c ****         #if(!BLUE_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_TXBITCTR_CONTROL_REG &= (uint8)~BLUE_CNTR_ENABLE;
 240:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* BLUE_TX_ENABLED */
 242:.\Generated_Source\PSoC4/BLUE.c **** 
 243:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC4/BLUE.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_IntClock_Stop();
 255              		.loc 1 245 0
 256 0020 FFF7FEFF 		bl	BLUE_IntClock_Stop
 246:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC4/BLUE.c **** 
 248:.\Generated_Source\PSoC4/BLUE.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_RX_ENABLED || BLUE_HD_ENABLED)
 250:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXSTATUS_ACTL_REG  &= (uint8)~BLUE_INT_ENABLE;
 257              		.loc 1 250 0
 258 0024 0D4B     		ldr	r3, .L12+4
 259 0026 0D4A     		ldr	r2, .L12+4
 260 0028 1278     		ldrb	r2, [r2]
 261 002a D2B2     		uxtb	r2, r2
 262 002c 1021     		mov	r1, #16
 263 002e 8A43     		bic	r2, r1
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 10


 264 0030 D2B2     		uxtb	r2, r2
 265 0032 1A70     		strb	r2, [r3]
 251:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RX_INTERRUPT_ENABLED && (BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH))
 252:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_DisableRxInt();
 253:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_RX_ENABLED */
 255:.\Generated_Source\PSoC4/BLUE.c **** 
 256:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_TX_ENABLED)
 257:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_TXSTATUS_ACTL_REG &= (uint8)~BLUE_INT_ENABLE;
 266              		.loc 1 257 0
 267 0034 0A4B     		ldr	r3, .L12+8
 268 0036 0A4A     		ldr	r2, .L12+8
 269 0038 1278     		ldrb	r2, [r2]
 270 003a D2B2     		uxtb	r2, r2
 271 003c 1021     		mov	r1, #16
 272 003e 8A43     		bic	r2, r1
 273 0040 D2B2     		uxtb	r2, r2
 274 0042 1A70     		strb	r2, [r3]
 258:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_TX_INTERRUPT_ENABLED && (BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH))
 259:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_DisableTxInt();
 275              		.loc 1 259 0
 276 0044 FFF7FEFF 		bl	BLUE_DisableTxInt
 260:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_TX_ENABLED */
 262:.\Generated_Source\PSoC4/BLUE.c **** 
 263:.\Generated_Source\PSoC4/BLUE.c ****     CyExitCriticalSection(enableInterrupts);
 277              		.loc 1 263 0
 278 0048 FB1D     		add	r3, r7, #7
 279 004a 1B78     		ldrb	r3, [r3]
 280 004c 181C     		mov	r0, r3
 281 004e FFF7FEFF 		bl	CyExitCriticalSection
 264:.\Generated_Source\PSoC4/BLUE.c **** }
 282              		.loc 1 264 0
 283 0052 BD46     		mov	sp, r7
 284 0054 03B0     		add	sp, sp, #12
 285              		@ sp needed for prologue
 286 0056 90BD     		pop	{r4, r7, pc}
 287              	.L13:
 288              		.align	2
 289              	.L12:
 290 0058 90000F40 		.word	1074725008
 291 005c 91000F40 		.word	1074725009
 292 0060 92000F40 		.word	1074725010
 293              		.cfi_endproc
 294              	.LFE3:
 295              		.size	BLUE_Stop, .-BLUE_Stop
 296              		.section	.text.BLUE_ReadControlRegister,"ax",%progbits
 297              		.align	2
 298              		.global	BLUE_ReadControlRegister
 299              		.code	16
 300              		.thumb_func
 301              		.type	BLUE_ReadControlRegister, %function
 302              	BLUE_ReadControlRegister:
 303              	.LFB4:
 265:.\Generated_Source\PSoC4/BLUE.c **** 
 266:.\Generated_Source\PSoC4/BLUE.c **** 
 267:.\Generated_Source\PSoC4/BLUE.c **** /*******************************************************************************
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 11


 268:.\Generated_Source\PSoC4/BLUE.c **** * Function Name: BLUE_ReadControlRegister
 269:.\Generated_Source\PSoC4/BLUE.c **** ********************************************************************************
 270:.\Generated_Source\PSoC4/BLUE.c **** *
 271:.\Generated_Source\PSoC4/BLUE.c **** * Summary:
 272:.\Generated_Source\PSoC4/BLUE.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC4/BLUE.c **** *
 274:.\Generated_Source\PSoC4/BLUE.c **** * Parameters:
 275:.\Generated_Source\PSoC4/BLUE.c **** *  None.
 276:.\Generated_Source\PSoC4/BLUE.c **** *
 277:.\Generated_Source\PSoC4/BLUE.c **** * Return:
 278:.\Generated_Source\PSoC4/BLUE.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC4/BLUE.c **** *
 280:.\Generated_Source\PSoC4/BLUE.c **** *******************************************************************************/
 281:.\Generated_Source\PSoC4/BLUE.c **** uint8 BLUE_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC4/BLUE.c **** {
 304              		.loc 1 282 0
 305              		.cfi_startproc
 306 0000 80B5     		push	{r7, lr}
 307              	.LCFI10:
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 00AF     		add	r7, sp, #0
 312              	.LCFI11:
 313              		.cfi_def_cfa_register 7
 283:.\Generated_Source\PSoC4/BLUE.c ****     #if( BLUE_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC4/BLUE.c ****         return(0u);
 314              		.loc 1 284 0
 315 0004 0023     		mov	r3, #0
 285:.\Generated_Source\PSoC4/BLUE.c ****     #else
 286:.\Generated_Source\PSoC4/BLUE.c ****         return(BLUE_CONTROL_REG);
 287:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC4/BLUE.c **** }
 316              		.loc 1 288 0
 317 0006 181C     		mov	r0, r3
 318 0008 BD46     		mov	sp, r7
 319              		@ sp needed for prologue
 320 000a 80BD     		pop	{r7, pc}
 321              		.cfi_endproc
 322              	.LFE4:
 323              		.size	BLUE_ReadControlRegister, .-BLUE_ReadControlRegister
 324              		.section	.text.BLUE_WriteControlRegister,"ax",%progbits
 325              		.align	2
 326              		.global	BLUE_WriteControlRegister
 327              		.code	16
 328              		.thumb_func
 329              		.type	BLUE_WriteControlRegister, %function
 330              	BLUE_WriteControlRegister:
 331              	.LFB5:
 289:.\Generated_Source\PSoC4/BLUE.c **** 
 290:.\Generated_Source\PSoC4/BLUE.c **** 
 291:.\Generated_Source\PSoC4/BLUE.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC4/BLUE.c **** * Function Name: BLUE_WriteControlRegister
 293:.\Generated_Source\PSoC4/BLUE.c **** ********************************************************************************
 294:.\Generated_Source\PSoC4/BLUE.c **** *
 295:.\Generated_Source\PSoC4/BLUE.c **** * Summary:
 296:.\Generated_Source\PSoC4/BLUE.c **** *  Writes an 8-bit value into the control register
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 12


 297:.\Generated_Source\PSoC4/BLUE.c **** *
 298:.\Generated_Source\PSoC4/BLUE.c **** * Parameters:
 299:.\Generated_Source\PSoC4/BLUE.c **** *  control:  control register value
 300:.\Generated_Source\PSoC4/BLUE.c **** *
 301:.\Generated_Source\PSoC4/BLUE.c **** * Return:
 302:.\Generated_Source\PSoC4/BLUE.c **** *  None.
 303:.\Generated_Source\PSoC4/BLUE.c **** *
 304:.\Generated_Source\PSoC4/BLUE.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC4/BLUE.c **** void  BLUE_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC4/BLUE.c **** {
 332              		.loc 1 306 0
 333              		.cfi_startproc
 334 0000 80B5     		push	{r7, lr}
 335              	.LCFI12:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 7, -8
 338              		.cfi_offset 14, -4
 339 0002 82B0     		sub	sp, sp, #8
 340              	.LCFI13:
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              	.LCFI14:
 344              		.cfi_def_cfa_register 7
 345 0006 021C     		mov	r2, r0
 346 0008 FB1D     		add	r3, r7, #7
 347 000a 1A70     		strb	r2, [r3]
 307:.\Generated_Source\PSoC4/BLUE.c ****     #if( BLUE_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC4/BLUE.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC4/BLUE.c ****     #else
 310:.\Generated_Source\PSoC4/BLUE.c ****        BLUE_CONTROL_REG = control;
 311:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* End BLUE_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC4/BLUE.c **** }
 348              		.loc 1 312 0
 349 000c BD46     		mov	sp, r7
 350 000e 02B0     		add	sp, sp, #8
 351              		@ sp needed for prologue
 352 0010 80BD     		pop	{r7, pc}
 353              		.cfi_endproc
 354              	.LFE5:
 355              		.size	BLUE_WriteControlRegister, .-BLUE_WriteControlRegister
 356 0012 C046     		.section	.text.BLUE_SetRxInterruptMode,"ax",%progbits
 357              		.align	2
 358              		.global	BLUE_SetRxInterruptMode
 359              		.code	16
 360              		.thumb_func
 361              		.type	BLUE_SetRxInterruptMode, %function
 362              	BLUE_SetRxInterruptMode:
 363              	.LFB6:
 313:.\Generated_Source\PSoC4/BLUE.c **** 
 314:.\Generated_Source\PSoC4/BLUE.c **** 
 315:.\Generated_Source\PSoC4/BLUE.c **** #if(BLUE_RX_ENABLED || BLUE_HD_ENABLED)
 316:.\Generated_Source\PSoC4/BLUE.c **** 
 317:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC4/BLUE.c **** 
 319:.\Generated_Source\PSoC4/BLUE.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC4/BLUE.c ****         * Function Name: BLUE_EnableRxInt
 321:.\Generated_Source\PSoC4/BLUE.c ****         ********************************************************************************
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 13


 322:.\Generated_Source\PSoC4/BLUE.c ****         *
 323:.\Generated_Source\PSoC4/BLUE.c ****         * Summary:
 324:.\Generated_Source\PSoC4/BLUE.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC4/BLUE.c ****         *
 326:.\Generated_Source\PSoC4/BLUE.c ****         * Parameters:
 327:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 328:.\Generated_Source\PSoC4/BLUE.c ****         *
 329:.\Generated_Source\PSoC4/BLUE.c ****         * Return:
 330:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 331:.\Generated_Source\PSoC4/BLUE.c ****         *
 332:.\Generated_Source\PSoC4/BLUE.c ****         * Theory:
 333:.\Generated_Source\PSoC4/BLUE.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC4/BLUE.c ****         *
 335:.\Generated_Source\PSoC4/BLUE.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC4/BLUE.c ****         void BLUE_EnableRxInt(void) 
 337:.\Generated_Source\PSoC4/BLUE.c ****         {
 338:.\Generated_Source\PSoC4/BLUE.c ****             CyIntEnable(BLUE_RX_VECT_NUM);
 339:.\Generated_Source\PSoC4/BLUE.c ****         }
 340:.\Generated_Source\PSoC4/BLUE.c **** 
 341:.\Generated_Source\PSoC4/BLUE.c **** 
 342:.\Generated_Source\PSoC4/BLUE.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC4/BLUE.c ****         * Function Name: BLUE_DisableRxInt
 344:.\Generated_Source\PSoC4/BLUE.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC4/BLUE.c ****         *
 346:.\Generated_Source\PSoC4/BLUE.c ****         * Summary:
 347:.\Generated_Source\PSoC4/BLUE.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC4/BLUE.c ****         *
 349:.\Generated_Source\PSoC4/BLUE.c ****         * Parameters:
 350:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 351:.\Generated_Source\PSoC4/BLUE.c ****         *
 352:.\Generated_Source\PSoC4/BLUE.c ****         * Return:
 353:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 354:.\Generated_Source\PSoC4/BLUE.c ****         *
 355:.\Generated_Source\PSoC4/BLUE.c ****         * Theory:
 356:.\Generated_Source\PSoC4/BLUE.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC4/BLUE.c ****         *
 358:.\Generated_Source\PSoC4/BLUE.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC4/BLUE.c ****         void BLUE_DisableRxInt(void) 
 360:.\Generated_Source\PSoC4/BLUE.c ****         {
 361:.\Generated_Source\PSoC4/BLUE.c ****             CyIntDisable(BLUE_RX_VECT_NUM);
 362:.\Generated_Source\PSoC4/BLUE.c ****         }
 363:.\Generated_Source\PSoC4/BLUE.c **** 
 364:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* BLUE_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC4/BLUE.c **** 
 366:.\Generated_Source\PSoC4/BLUE.c **** 
 367:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_SetRxInterruptMode
 369:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC4/BLUE.c ****     *
 371:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 372:.\Generated_Source\PSoC4/BLUE.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC4/BLUE.c ****     *
 374:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 375:.\Generated_Source\PSoC4/BLUE.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC4/BLUE.c ****     *           the header file)
 377:.\Generated_Source\PSoC4/BLUE.c ****     *
 378:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 14


 379:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 380:.\Generated_Source\PSoC4/BLUE.c ****     *
 381:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
 382:.\Generated_Source\PSoC4/BLUE.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC4/BLUE.c ****     *
 384:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC4/BLUE.c ****     {
 364              		.loc 1 386 0
 365              		.cfi_startproc
 366 0000 80B5     		push	{r7, lr}
 367              	.LCFI15:
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 82B0     		sub	sp, sp, #8
 372              	.LCFI16:
 373              		.cfi_def_cfa_offset 16
 374 0004 00AF     		add	r7, sp, #0
 375              	.LCFI17:
 376              		.cfi_def_cfa_register 7
 377 0006 021C     		mov	r2, r0
 378 0008 FB1D     		add	r3, r7, #7
 379 000a 1A70     		strb	r2, [r3]
 387:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXSTATUS_MASK_REG  = intSrc;
 380              		.loc 1 387 0
 381 000c 034B     		ldr	r3, .L18
 382 000e FA1D     		add	r2, r7, #7
 383 0010 1278     		ldrb	r2, [r2]
 384 0012 1A70     		strb	r2, [r3]
 388:.\Generated_Source\PSoC4/BLUE.c ****     }
 385              		.loc 1 388 0
 386 0014 BD46     		mov	sp, r7
 387 0016 02B0     		add	sp, sp, #8
 388              		@ sp needed for prologue
 389 0018 80BD     		pop	{r7, pc}
 390              	.L19:
 391 001a C046     		.align	2
 392              	.L18:
 393 001c 81000F40 		.word	1074724993
 394              		.cfi_endproc
 395              	.LFE6:
 396              		.size	BLUE_SetRxInterruptMode, .-BLUE_SetRxInterruptMode
 397              		.section	.text.BLUE_ReadRxData,"ax",%progbits
 398              		.align	2
 399              		.global	BLUE_ReadRxData
 400              		.code	16
 401              		.thumb_func
 402              		.type	BLUE_ReadRxData, %function
 403              	BLUE_ReadRxData:
 404              	.LFB7:
 389:.\Generated_Source\PSoC4/BLUE.c **** 
 390:.\Generated_Source\PSoC4/BLUE.c **** 
 391:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_ReadRxData
 393:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 394:.\Generated_Source\PSoC4/BLUE.c ****     *
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 15


 395:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 396:.\Generated_Source\PSoC4/BLUE.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC4/BLUE.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC4/BLUE.c ****     *
 399:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 400:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 401:.\Generated_Source\PSoC4/BLUE.c ****     *
 402:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 403:.\Generated_Source\PSoC4/BLUE.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC4/BLUE.c ****     *
 405:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
 406:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBuffer - RAM buffer pointer for save received data.
 407:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC4/BLUE.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC4/BLUE.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC4/BLUE.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC4/BLUE.c ****     *
 414:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
 415:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
 416:.\Generated_Source\PSoC4/BLUE.c ****     *
 417:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC4/BLUE.c ****     uint8 BLUE_ReadRxData(void) 
 419:.\Generated_Source\PSoC4/BLUE.c ****     {
 405              		.loc 1 419 0
 406              		.cfi_startproc
 407 0000 80B5     		push	{r7, lr}
 408              	.LCFI18:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 7, -8
 411              		.cfi_offset 14, -4
 412 0002 82B0     		sub	sp, sp, #8
 413              	.LCFI19:
 414              		.cfi_def_cfa_offset 16
 415 0004 00AF     		add	r7, sp, #0
 416              	.LCFI20:
 417              		.cfi_def_cfa_register 7
 420:.\Generated_Source\PSoC4/BLUE.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC4/BLUE.c **** 
 422:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH)
 423:.\Generated_Source\PSoC4/BLUE.c ****             uint8 loc_rxBufferRead;
 424:.\Generated_Source\PSoC4/BLUE.c ****             uint8 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC4/BLUE.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC4/BLUE.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_DisableRxInt();
 429:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* BLUE_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC4/BLUE.c ****             loc_rxBufferRead = BLUE_rxBufferRead;
 431:.\Generated_Source\PSoC4/BLUE.c ****             loc_rxBufferWrite = BLUE_rxBufferWrite;
 432:.\Generated_Source\PSoC4/BLUE.c **** 
 433:.\Generated_Source\PSoC4/BLUE.c ****             if( (BLUE_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 434:.\Generated_Source\PSoC4/BLUE.c ****             {
 435:.\Generated_Source\PSoC4/BLUE.c ****                 rxData = BLUE_rxBuffer[loc_rxBufferRead];
 436:.\Generated_Source\PSoC4/BLUE.c ****                 loc_rxBufferRead++;
 437:.\Generated_Source\PSoC4/BLUE.c **** 
 438:.\Generated_Source\PSoC4/BLUE.c ****                 if(loc_rxBufferRead >= BLUE_RXBUFFERSIZE)
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 16


 439:.\Generated_Source\PSoC4/BLUE.c ****                 {
 440:.\Generated_Source\PSoC4/BLUE.c ****                     loc_rxBufferRead = 0u;
 441:.\Generated_Source\PSoC4/BLUE.c ****                 }
 442:.\Generated_Source\PSoC4/BLUE.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_rxBufferRead = loc_rxBufferRead;
 444:.\Generated_Source\PSoC4/BLUE.c **** 
 445:.\Generated_Source\PSoC4/BLUE.c ****                 if(BLUE_rxBufferLoopDetect != 0u )
 446:.\Generated_Source\PSoC4/BLUE.c ****                 {
 447:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_rxBufferLoopDetect = 0u;
 448:.\Generated_Source\PSoC4/BLUE.c ****                     #if( (BLUE_RX_INTERRUPT_ENABLED) && (BLUE_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC4/BLUE.c ****                          (BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC4/BLUE.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC4/BLUE.c ****                         #if( BLUE_HD_ENABLED )
 452:.\Generated_Source\PSoC4/BLUE.c ****                             if((BLUE_CONTROL_REG & BLUE_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC4/BLUE.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC4/BLUE.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC4/BLUE.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC4/BLUE.c ****                                 */
 457:.\Generated_Source\PSoC4/BLUE.c ****                                 BLUE_RXSTATUS_MASK_REG  |= BLUE_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC4/BLUE.c ****                             }
 459:.\Generated_Source\PSoC4/BLUE.c ****                         #else
 460:.\Generated_Source\PSoC4/BLUE.c ****                             BLUE_RXSTATUS_MASK_REG  |= BLUE_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC4/BLUE.c ****                         #endif /* end BLUE_HD_ENABLED */
 462:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* BLUE_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC4/BLUE.c ****                 }
 464:.\Generated_Source\PSoC4/BLUE.c ****             }
 465:.\Generated_Source\PSoC4/BLUE.c ****             else
 466:.\Generated_Source\PSoC4/BLUE.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC4/BLUE.c ****                 rxData = BLUE_RXDATA_REG;
 468:.\Generated_Source\PSoC4/BLUE.c ****             }
 469:.\Generated_Source\PSoC4/BLUE.c **** 
 470:.\Generated_Source\PSoC4/BLUE.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_EnableRxInt();
 473:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC4/BLUE.c **** 
 475:.\Generated_Source\PSoC4/BLUE.c ****         #else /* BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH */
 476:.\Generated_Source\PSoC4/BLUE.c **** 
 477:.\Generated_Source\PSoC4/BLUE.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC4/BLUE.c ****             rxData = BLUE_RXDATA_REG;
 418              		.loc 1 478 0
 419 0006 054A     		ldr	r2, .L22
 420 0008 FB1D     		add	r3, r7, #7
 421 000a 1278     		ldrb	r2, [r2]
 422 000c 1A70     		strb	r2, [r3]
 479:.\Generated_Source\PSoC4/BLUE.c **** 
 480:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH */
 481:.\Generated_Source\PSoC4/BLUE.c **** 
 482:.\Generated_Source\PSoC4/BLUE.c ****         return(rxData);
 423              		.loc 1 482 0
 424 000e FB1D     		add	r3, r7, #7
 425 0010 1B78     		ldrb	r3, [r3]
 483:.\Generated_Source\PSoC4/BLUE.c ****     }
 426              		.loc 1 483 0
 427 0012 181C     		mov	r0, r3
 428 0014 BD46     		mov	sp, r7
 429 0016 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 17


 430              		@ sp needed for prologue
 431 0018 80BD     		pop	{r7, pc}
 432              	.L23:
 433 001a C046     		.align	2
 434              	.L22:
 435 001c 40000F40 		.word	1074724928
 436              		.cfi_endproc
 437              	.LFE7:
 438              		.size	BLUE_ReadRxData, .-BLUE_ReadRxData
 439              		.section	.text.BLUE_ReadRxStatus,"ax",%progbits
 440              		.align	2
 441              		.global	BLUE_ReadRxStatus
 442              		.code	16
 443              		.thumb_func
 444              		.type	BLUE_ReadRxStatus, %function
 445              	BLUE_ReadRxStatus:
 446              	.LFB8:
 484:.\Generated_Source\PSoC4/BLUE.c **** 
 485:.\Generated_Source\PSoC4/BLUE.c **** 
 486:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_ReadRxStatus
 488:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC4/BLUE.c ****     *
 490:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 491:.\Generated_Source\PSoC4/BLUE.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC4/BLUE.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC4/BLUE.c ****     *
 494:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 495:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 496:.\Generated_Source\PSoC4/BLUE.c ****     *
 497:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 498:.\Generated_Source\PSoC4/BLUE.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC4/BLUE.c ****     *
 500:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
 501:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC4/BLUE.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC4/BLUE.c ****     *   BLUE_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC4/BLUE.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC4/BLUE.c ****     *   BLUE_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC4/BLUE.c ****     *   bits.
 507:.\Generated_Source\PSoC4/BLUE.c ****     *
 508:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC4/BLUE.c ****     uint8 BLUE_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC4/BLUE.c ****     {
 447              		.loc 1 510 0
 448              		.cfi_startproc
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI21:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 82B0     		sub	sp, sp, #8
 455              	.LCFI22:
 456              		.cfi_def_cfa_offset 16
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI23:
 459              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 18


 511:.\Generated_Source\PSoC4/BLUE.c ****         uint8 status;
 512:.\Generated_Source\PSoC4/BLUE.c **** 
 513:.\Generated_Source\PSoC4/BLUE.c ****         status = BLUE_RXSTATUS_REG & BLUE_RX_HW_MASK;
 460              		.loc 1 513 0
 461 0006 064B     		ldr	r3, .L26
 462 0008 1B78     		ldrb	r3, [r3]
 463 000a D9B2     		uxtb	r1, r3
 464 000c FB1D     		add	r3, r7, #7
 465 000e 7F22     		mov	r2, #127
 466 0010 0A40     		and	r2, r1
 467 0012 1A70     		strb	r2, [r3]
 514:.\Generated_Source\PSoC4/BLUE.c **** 
 515:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH)
 516:.\Generated_Source\PSoC4/BLUE.c ****             if( BLUE_rxBufferOverflow != 0u )
 517:.\Generated_Source\PSoC4/BLUE.c ****             {
 518:.\Generated_Source\PSoC4/BLUE.c ****                 status |= BLUE_RX_STS_SOFT_BUFF_OVER;
 519:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_rxBufferOverflow = 0u;
 520:.\Generated_Source\PSoC4/BLUE.c ****             }
 521:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* BLUE_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC4/BLUE.c **** 
 523:.\Generated_Source\PSoC4/BLUE.c ****         return(status);
 468              		.loc 1 523 0
 469 0014 FB1D     		add	r3, r7, #7
 470 0016 1B78     		ldrb	r3, [r3]
 524:.\Generated_Source\PSoC4/BLUE.c ****     }
 471              		.loc 1 524 0
 472 0018 181C     		mov	r0, r3
 473 001a BD46     		mov	sp, r7
 474 001c 02B0     		add	sp, sp, #8
 475              		@ sp needed for prologue
 476 001e 80BD     		pop	{r7, pc}
 477              	.L27:
 478              		.align	2
 479              	.L26:
 480 0020 61000F40 		.word	1074724961
 481              		.cfi_endproc
 482              	.LFE8:
 483              		.size	BLUE_ReadRxStatus, .-BLUE_ReadRxStatus
 484              		.section	.text.BLUE_GetChar,"ax",%progbits
 485              		.align	2
 486              		.global	BLUE_GetChar
 487              		.code	16
 488              		.thumb_func
 489              		.type	BLUE_GetChar, %function
 490              	BLUE_GetChar:
 491              	.LFB9:
 525:.\Generated_Source\PSoC4/BLUE.c **** 
 526:.\Generated_Source\PSoC4/BLUE.c **** 
 527:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_GetChar
 529:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC4/BLUE.c ****     *
 531:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 532:.\Generated_Source\PSoC4/BLUE.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC4/BLUE.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC4/BLUE.c ****     *  returned.
 535:.\Generated_Source\PSoC4/BLUE.c ****     *
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 19


 536:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 537:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 538:.\Generated_Source\PSoC4/BLUE.c ****     *
 539:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 540:.\Generated_Source\PSoC4/BLUE.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC4/BLUE.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC4/BLUE.c ****     *
 543:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
 544:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferWrite - cyclic index for write to rxBuffer,
 546:.\Generated_Source\PSoC4/BLUE.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC4/BLUE.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC4/BLUE.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC4/BLUE.c ****     *
 552:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
 553:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
 554:.\Generated_Source\PSoC4/BLUE.c ****     *
 555:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC4/BLUE.c ****     uint8 BLUE_GetChar(void) 
 557:.\Generated_Source\PSoC4/BLUE.c ****     {
 492              		.loc 1 557 0
 493              		.cfi_startproc
 494 0000 80B5     		push	{r7, lr}
 495              	.LCFI24:
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 82B0     		sub	sp, sp, #8
 500              	.LCFI25:
 501              		.cfi_def_cfa_offset 16
 502 0004 00AF     		add	r7, sp, #0
 503              	.LCFI26:
 504              		.cfi_def_cfa_register 7
 558:.\Generated_Source\PSoC4/BLUE.c ****         uint8 rxData = 0u;
 505              		.loc 1 558 0
 506 0006 FB1D     		add	r3, r7, #7
 507 0008 0022     		mov	r2, #0
 508 000a 1A70     		strb	r2, [r3]
 559:.\Generated_Source\PSoC4/BLUE.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC4/BLUE.c **** 
 561:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH)
 562:.\Generated_Source\PSoC4/BLUE.c ****             uint8 loc_rxBufferRead;
 563:.\Generated_Source\PSoC4/BLUE.c ****             uint8 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC4/BLUE.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC4/BLUE.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_DisableRxInt();
 568:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* BLUE_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC4/BLUE.c ****             loc_rxBufferRead = BLUE_rxBufferRead;
 570:.\Generated_Source\PSoC4/BLUE.c ****             loc_rxBufferWrite = BLUE_rxBufferWrite;
 571:.\Generated_Source\PSoC4/BLUE.c **** 
 572:.\Generated_Source\PSoC4/BLUE.c ****             if( (BLUE_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 573:.\Generated_Source\PSoC4/BLUE.c ****             {
 574:.\Generated_Source\PSoC4/BLUE.c ****                 rxData = BLUE_rxBuffer[loc_rxBufferRead];
 575:.\Generated_Source\PSoC4/BLUE.c ****                 loc_rxBufferRead++;
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 20


 576:.\Generated_Source\PSoC4/BLUE.c ****                 if(loc_rxBufferRead >= BLUE_RXBUFFERSIZE)
 577:.\Generated_Source\PSoC4/BLUE.c ****                 {
 578:.\Generated_Source\PSoC4/BLUE.c ****                     loc_rxBufferRead = 0u;
 579:.\Generated_Source\PSoC4/BLUE.c ****                 }
 580:.\Generated_Source\PSoC4/BLUE.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_rxBufferRead = loc_rxBufferRead;
 582:.\Generated_Source\PSoC4/BLUE.c **** 
 583:.\Generated_Source\PSoC4/BLUE.c ****                 if(BLUE_rxBufferLoopDetect > 0u )
 584:.\Generated_Source\PSoC4/BLUE.c ****                 {
 585:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_rxBufferLoopDetect = 0u;
 586:.\Generated_Source\PSoC4/BLUE.c ****                     #if( (BLUE_RX_INTERRUPT_ENABLED) && (BLUE_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC4/BLUE.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC4/BLUE.c ****                         #if( BLUE_HD_ENABLED )
 589:.\Generated_Source\PSoC4/BLUE.c ****                             if((BLUE_CONTROL_REG & BLUE_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC4/BLUE.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC4/BLUE.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC4/BLUE.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC4/BLUE.c ****                                 */
 594:.\Generated_Source\PSoC4/BLUE.c ****                                 BLUE_RXSTATUS_MASK_REG  |= BLUE_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC4/BLUE.c ****                             }
 596:.\Generated_Source\PSoC4/BLUE.c ****                         #else
 597:.\Generated_Source\PSoC4/BLUE.c ****                             BLUE_RXSTATUS_MASK_REG  |= BLUE_RX_STS_FIFO_NOTEMPTY;
 598:.\Generated_Source\PSoC4/BLUE.c ****                         #endif /* end BLUE_HD_ENABLED */
 599:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* BLUE_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC4/BLUE.c ****                 }
 601:.\Generated_Source\PSoC4/BLUE.c **** 
 602:.\Generated_Source\PSoC4/BLUE.c ****             }
 603:.\Generated_Source\PSoC4/BLUE.c ****             else
 604:.\Generated_Source\PSoC4/BLUE.c ****             {   rxStatus = BLUE_RXSTATUS_REG;
 605:.\Generated_Source\PSoC4/BLUE.c ****                 if((rxStatus & BLUE_RX_STS_FIFO_NOTEMPTY) != 0u)
 606:.\Generated_Source\PSoC4/BLUE.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC4/BLUE.c ****                     rxData = BLUE_RXDATA_REG;
 608:.\Generated_Source\PSoC4/BLUE.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC4/BLUE.c ****                     if((rxStatus & (BLUE_RX_STS_BREAK | BLUE_RX_STS_PAR_ERROR |
 610:.\Generated_Source\PSoC4/BLUE.c ****                                    BLUE_RX_STS_STOP_ERROR | BLUE_RX_STS_OVERRUN)) != 0u)
 611:.\Generated_Source\PSoC4/BLUE.c ****                     {
 612:.\Generated_Source\PSoC4/BLUE.c ****                         rxData = 0u;
 613:.\Generated_Source\PSoC4/BLUE.c ****                     }
 614:.\Generated_Source\PSoC4/BLUE.c ****                 }
 615:.\Generated_Source\PSoC4/BLUE.c ****             }
 616:.\Generated_Source\PSoC4/BLUE.c **** 
 617:.\Generated_Source\PSoC4/BLUE.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_EnableRxInt();
 620:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* BLUE_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC4/BLUE.c **** 
 622:.\Generated_Source\PSoC4/BLUE.c ****         #else /* BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH */
 623:.\Generated_Source\PSoC4/BLUE.c **** 
 624:.\Generated_Source\PSoC4/BLUE.c ****             rxStatus =BLUE_RXSTATUS_REG;
 509              		.loc 1 624 0
 510 000c 0D4A     		ldr	r2, .L31
 511 000e BB1D     		add	r3, r7, #6
 512 0010 1278     		ldrb	r2, [r2]
 513 0012 1A70     		strb	r2, [r3]
 625:.\Generated_Source\PSoC4/BLUE.c ****             if((rxStatus & BLUE_RX_STS_FIFO_NOTEMPTY) != 0u)
 514              		.loc 1 625 0
 515 0014 BB1D     		add	r3, r7, #6
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 21


 516 0016 1A78     		ldrb	r2, [r3]
 517 0018 2023     		mov	r3, #32
 518 001a 1340     		and	r3, r2
 519 001c 0BD0     		beq	.L29
 626:.\Generated_Source\PSoC4/BLUE.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC4/BLUE.c ****                 rxData = BLUE_RXDATA_REG;
 520              		.loc 1 627 0
 521 001e 0A4A     		ldr	r2, .L31+4
 522 0020 FB1D     		add	r3, r7, #7
 523 0022 1278     		ldrb	r2, [r2]
 524 0024 1A70     		strb	r2, [r3]
 628:.\Generated_Source\PSoC4/BLUE.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC4/BLUE.c ****                 if((rxStatus & (BLUE_RX_STS_BREAK | BLUE_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC4/BLUE.c ****                                BLUE_RX_STS_STOP_ERROR | BLUE_RX_STS_OVERRUN)) != 0u)
 525              		.loc 1 630 0
 526 0026 BB1D     		add	r3, r7, #6
 527 0028 1A78     		ldrb	r2, [r3]
 528 002a 1E23     		mov	r3, #30
 529 002c 1340     		and	r3, r2
 629:.\Generated_Source\PSoC4/BLUE.c ****                 if((rxStatus & (BLUE_RX_STS_BREAK | BLUE_RX_STS_PAR_ERROR |
 530              		.loc 1 629 0
 531 002e 02D0     		beq	.L29
 631:.\Generated_Source\PSoC4/BLUE.c ****                 {
 632:.\Generated_Source\PSoC4/BLUE.c ****                     rxData = 0u;
 532              		.loc 1 632 0
 533 0030 FB1D     		add	r3, r7, #7
 534 0032 0022     		mov	r2, #0
 535 0034 1A70     		strb	r2, [r3]
 536              	.L29:
 633:.\Generated_Source\PSoC4/BLUE.c ****                 }
 634:.\Generated_Source\PSoC4/BLUE.c ****             }
 635:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH */
 636:.\Generated_Source\PSoC4/BLUE.c **** 
 637:.\Generated_Source\PSoC4/BLUE.c ****         return(rxData);
 537              		.loc 1 637 0
 538 0036 FB1D     		add	r3, r7, #7
 539 0038 1B78     		ldrb	r3, [r3]
 638:.\Generated_Source\PSoC4/BLUE.c ****     }
 540              		.loc 1 638 0
 541 003a 181C     		mov	r0, r3
 542 003c BD46     		mov	sp, r7
 543 003e 02B0     		add	sp, sp, #8
 544              		@ sp needed for prologue
 545 0040 80BD     		pop	{r7, pc}
 546              	.L32:
 547 0042 C046     		.align	2
 548              	.L31:
 549 0044 61000F40 		.word	1074724961
 550 0048 40000F40 		.word	1074724928
 551              		.cfi_endproc
 552              	.LFE9:
 553              		.size	BLUE_GetChar, .-BLUE_GetChar
 554              		.section	.text.BLUE_GetByte,"ax",%progbits
 555              		.align	2
 556              		.global	BLUE_GetByte
 557              		.code	16
 558              		.thumb_func
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 22


 559              		.type	BLUE_GetByte, %function
 560              	BLUE_GetByte:
 561              	.LFB10:
 639:.\Generated_Source\PSoC4/BLUE.c **** 
 640:.\Generated_Source\PSoC4/BLUE.c **** 
 641:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_GetByte
 643:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC4/BLUE.c ****     *
 645:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 646:.\Generated_Source\PSoC4/BLUE.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC4/BLUE.c ****     *
 648:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 649:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 650:.\Generated_Source\PSoC4/BLUE.c ****     *
 651:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 652:.\Generated_Source\PSoC4/BLUE.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC4/BLUE.c ****     *
 654:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
 655:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
 656:.\Generated_Source\PSoC4/BLUE.c ****     *
 657:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC4/BLUE.c ****     uint16 BLUE_GetByte(void) 
 659:.\Generated_Source\PSoC4/BLUE.c ****     {
 562              		.loc 1 659 0
 563              		.cfi_startproc
 564 0000 98B5     		push	{r3, r4, r7, lr}
 565              	.LCFI27:
 566              		.cfi_def_cfa_offset 16
 567              		.cfi_offset 3, -16
 568              		.cfi_offset 4, -12
 569              		.cfi_offset 7, -8
 570              		.cfi_offset 14, -4
 571 0002 00AF     		add	r7, sp, #0
 572              	.LCFI28:
 573              		.cfi_def_cfa_register 7
 660:.\Generated_Source\PSoC4/BLUE.c ****         return ( ((uint16)BLUE_ReadRxStatus() << 8u) | BLUE_ReadRxData() );
 574              		.loc 1 660 0
 575 0004 FFF7FEFF 		bl	BLUE_ReadRxStatus
 576 0008 031C     		mov	r3, r0
 577 000a 1B02     		lsl	r3, r3, #8
 578 000c 9CB2     		uxth	r4, r3
 579 000e FFF7FEFF 		bl	BLUE_ReadRxData
 580 0012 031C     		mov	r3, r0
 581 0014 221C     		add	r2, r4, #0
 582 0016 1343     		orr	r3, r2
 583 0018 9BB2     		uxth	r3, r3
 584 001a 9BB2     		uxth	r3, r3
 661:.\Generated_Source\PSoC4/BLUE.c ****     }
 585              		.loc 1 661 0
 586 001c 181C     		mov	r0, r3
 587 001e BD46     		mov	sp, r7
 588              		@ sp needed for prologue
 589 0020 98BD     		pop	{r3, r4, r7, pc}
 590              		.cfi_endproc
 591              	.LFE10:
 592              		.size	BLUE_GetByte, .-BLUE_GetByte
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 23


 593 0022 C046     		.section	.text.BLUE_GetRxBufferSize,"ax",%progbits
 594              		.align	2
 595              		.global	BLUE_GetRxBufferSize
 596              		.code	16
 597              		.thumb_func
 598              		.type	BLUE_GetRxBufferSize, %function
 599              	BLUE_GetRxBufferSize:
 600              	.LFB11:
 662:.\Generated_Source\PSoC4/BLUE.c **** 
 663:.\Generated_Source\PSoC4/BLUE.c **** 
 664:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_GetRxBufferSize
 666:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC4/BLUE.c ****     *
 668:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 669:.\Generated_Source\PSoC4/BLUE.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC4/BLUE.c ****     *  bytes
 671:.\Generated_Source\PSoC4/BLUE.c ****     *
 672:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 673:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 674:.\Generated_Source\PSoC4/BLUE.c ****     *
 675:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 676:.\Generated_Source\PSoC4/BLUE.c ****     *  uint8: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC4/BLUE.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC4/BLUE.c ****     *
 679:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
 680:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC4/BLUE.c ****     *
 684:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
 685:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
 686:.\Generated_Source\PSoC4/BLUE.c ****     *
 687:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
 688:.\Generated_Source\PSoC4/BLUE.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC4/BLUE.c ****     *
 690:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/BLUE.c ****     uint8 BLUE_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC4/BLUE.c ****                                                             
 693:.\Generated_Source\PSoC4/BLUE.c ****     {
 601              		.loc 1 693 0
 602              		.cfi_startproc
 603 0000 80B5     		push	{r7, lr}
 604              	.LCFI29:
 605              		.cfi_def_cfa_offset 8
 606              		.cfi_offset 7, -8
 607              		.cfi_offset 14, -4
 608 0002 82B0     		sub	sp, sp, #8
 609              	.LCFI30:
 610              		.cfi_def_cfa_offset 16
 611 0004 00AF     		add	r7, sp, #0
 612              	.LCFI31:
 613              		.cfi_def_cfa_register 7
 694:.\Generated_Source\PSoC4/BLUE.c ****         uint8 size;
 695:.\Generated_Source\PSoC4/BLUE.c **** 
 696:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH)
 697:.\Generated_Source\PSoC4/BLUE.c **** 
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 24


 698:.\Generated_Source\PSoC4/BLUE.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC4/BLUE.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_DisableRxInt();
 702:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* BLUE_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC4/BLUE.c **** 
 704:.\Generated_Source\PSoC4/BLUE.c ****             if(BLUE_rxBufferRead == BLUE_rxBufferWrite)
 705:.\Generated_Source\PSoC4/BLUE.c ****             {
 706:.\Generated_Source\PSoC4/BLUE.c ****                 if(BLUE_rxBufferLoopDetect > 0u)
 707:.\Generated_Source\PSoC4/BLUE.c ****                 {
 708:.\Generated_Source\PSoC4/BLUE.c ****                     size = BLUE_RXBUFFERSIZE;
 709:.\Generated_Source\PSoC4/BLUE.c ****                 }
 710:.\Generated_Source\PSoC4/BLUE.c ****                 else
 711:.\Generated_Source\PSoC4/BLUE.c ****                 {
 712:.\Generated_Source\PSoC4/BLUE.c ****                     size = 0u;
 713:.\Generated_Source\PSoC4/BLUE.c ****                 }
 714:.\Generated_Source\PSoC4/BLUE.c ****             }
 715:.\Generated_Source\PSoC4/BLUE.c ****             else if(BLUE_rxBufferRead < BLUE_rxBufferWrite)
 716:.\Generated_Source\PSoC4/BLUE.c ****             {
 717:.\Generated_Source\PSoC4/BLUE.c ****                 size = (BLUE_rxBufferWrite - BLUE_rxBufferRead);
 718:.\Generated_Source\PSoC4/BLUE.c ****             }
 719:.\Generated_Source\PSoC4/BLUE.c ****             else
 720:.\Generated_Source\PSoC4/BLUE.c ****             {
 721:.\Generated_Source\PSoC4/BLUE.c ****                 size = (BLUE_RXBUFFERSIZE - BLUE_rxBufferRead) + BLUE_rxBufferWrite;
 722:.\Generated_Source\PSoC4/BLUE.c ****             }
 723:.\Generated_Source\PSoC4/BLUE.c **** 
 724:.\Generated_Source\PSoC4/BLUE.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_EnableRxInt();
 727:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC4/BLUE.c **** 
 729:.\Generated_Source\PSoC4/BLUE.c ****         #else /* BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH */
 730:.\Generated_Source\PSoC4/BLUE.c **** 
 731:.\Generated_Source\PSoC4/BLUE.c ****             /* We can only know if there is data in the fifo. */
 732:.\Generated_Source\PSoC4/BLUE.c ****             size = ((BLUE_RXSTATUS_REG & BLUE_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 614              		.loc 1 732 0
 615 0006 094B     		ldr	r3, .L39
 616 0008 1B78     		ldrb	r3, [r3]
 617 000a DBB2     		uxtb	r3, r3
 618 000c 1A1C     		mov	r2, r3
 619 000e 2023     		mov	r3, #32
 620 0010 1340     		and	r3, r2
 621 0012 01D0     		beq	.L36
 622              		.loc 1 732 0 is_stmt 0 discriminator 1
 623 0014 0123     		mov	r3, #1
 624 0016 00E0     		b	.L37
 625              	.L36:
 626              		.loc 1 732 0 discriminator 2
 627 0018 0023     		mov	r3, #0
 628              	.L37:
 629              		.loc 1 732 0 discriminator 3
 630 001a FA1D     		add	r2, r7, #7
 631 001c 1370     		strb	r3, [r2]
 733:.\Generated_Source\PSoC4/BLUE.c **** 
 734:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH */
 735:.\Generated_Source\PSoC4/BLUE.c **** 
 736:.\Generated_Source\PSoC4/BLUE.c ****         return(size);
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 25


 632              		.loc 1 736 0 is_stmt 1 discriminator 3
 633 001e FB1D     		add	r3, r7, #7
 634 0020 1B78     		ldrb	r3, [r3]
 737:.\Generated_Source\PSoC4/BLUE.c ****     }
 635              		.loc 1 737 0 discriminator 3
 636 0022 181C     		mov	r0, r3
 637 0024 BD46     		mov	sp, r7
 638 0026 02B0     		add	sp, sp, #8
 639              		@ sp needed for prologue
 640 0028 80BD     		pop	{r7, pc}
 641              	.L40:
 642 002a C046     		.align	2
 643              	.L39:
 644 002c 61000F40 		.word	1074724961
 645              		.cfi_endproc
 646              	.LFE11:
 647              		.size	BLUE_GetRxBufferSize, .-BLUE_GetRxBufferSize
 648              		.section	.text.BLUE_ClearRxBuffer,"ax",%progbits
 649              		.align	2
 650              		.global	BLUE_ClearRxBuffer
 651              		.code	16
 652              		.thumb_func
 653              		.type	BLUE_ClearRxBuffer, %function
 654              	BLUE_ClearRxBuffer:
 655              	.LFB12:
 738:.\Generated_Source\PSoC4/BLUE.c **** 
 739:.\Generated_Source\PSoC4/BLUE.c **** 
 740:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_ClearRxBuffer
 742:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC4/BLUE.c ****     *
 744:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 745:.\Generated_Source\PSoC4/BLUE.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC4/BLUE.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC4/BLUE.c ****     *
 748:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 749:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 750:.\Generated_Source\PSoC4/BLUE.c ****     *
 751:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 752:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 753:.\Generated_Source\PSoC4/BLUE.c ****     *
 754:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
 755:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC4/BLUE.c ****     *
 760:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
 761:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
 762:.\Generated_Source\PSoC4/BLUE.c ****     *
 763:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
 764:.\Generated_Source\PSoC4/BLUE.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC4/BLUE.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC4/BLUE.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC4/BLUE.c ****     *
 768:.\Generated_Source\PSoC4/BLUE.c ****     * Side Effects:
 769:.\Generated_Source\PSoC4/BLUE.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 26


 770:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC4/BLUE.c ****     {
 656              		.loc 1 772 0
 657              		.cfi_startproc
 658 0000 90B5     		push	{r4, r7, lr}
 659              	.LCFI32:
 660              		.cfi_def_cfa_offset 12
 661              		.cfi_offset 4, -12
 662              		.cfi_offset 7, -8
 663              		.cfi_offset 14, -4
 664 0002 83B0     		sub	sp, sp, #12
 665              	.LCFI33:
 666              		.cfi_def_cfa_offset 24
 667 0004 00AF     		add	r7, sp, #0
 668              	.LCFI34:
 669              		.cfi_def_cfa_register 7
 773:.\Generated_Source\PSoC4/BLUE.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC4/BLUE.c **** 
 775:.\Generated_Source\PSoC4/BLUE.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC4/BLUE.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC4/BLUE.c ****         enableInterrupts = CyEnterCriticalSection();
 670              		.loc 1 777 0
 671 0006 FC1D     		add	r4, r7, #7
 672 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 673 000c 031C     		mov	r3, r0
 674 000e 2370     		strb	r3, [r4]
 778:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXDATA_AUX_CTL_REG |=  BLUE_RX_FIFO_CLR;
 675              		.loc 1 778 0
 676 0010 0B4B     		ldr	r3, .L42
 677 0012 0B4A     		ldr	r2, .L42
 678 0014 1278     		ldrb	r2, [r2]
 679 0016 D2B2     		uxtb	r2, r2
 680 0018 0121     		mov	r1, #1
 681 001a 0A43     		orr	r2, r1
 682 001c D2B2     		uxtb	r2, r2
 683 001e 1A70     		strb	r2, [r3]
 779:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXDATA_AUX_CTL_REG &= (uint8)~BLUE_RX_FIFO_CLR;
 684              		.loc 1 779 0
 685 0020 074B     		ldr	r3, .L42
 686 0022 074A     		ldr	r2, .L42
 687 0024 1278     		ldrb	r2, [r2]
 688 0026 D2B2     		uxtb	r2, r2
 689 0028 0121     		mov	r1, #1
 690 002a 8A43     		bic	r2, r1
 691 002c D2B2     		uxtb	r2, r2
 692 002e 1A70     		strb	r2, [r3]
 780:.\Generated_Source\PSoC4/BLUE.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC4/BLUE.c ****         CyExitCriticalSection(enableInterrupts);
 693              		.loc 1 781 0
 694 0030 FB1D     		add	r3, r7, #7
 695 0032 1B78     		ldrb	r3, [r3]
 696 0034 181C     		mov	r0, r3
 697 0036 FFF7FEFF 		bl	CyExitCriticalSection
 782:.\Generated_Source\PSoC4/BLUE.c **** 
 783:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH)
 784:.\Generated_Source\PSoC4/BLUE.c ****             /* Disable Rx interrupt. */
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 27


 785:.\Generated_Source\PSoC4/BLUE.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_DisableRxInt();
 788:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC4/BLUE.c **** 
 790:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_rxBufferRead = 0u;
 791:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_rxBufferWrite = 0u;
 792:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_rxBufferLoopDetect = 0u;
 793:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_rxBufferOverflow = 0u;
 794:.\Generated_Source\PSoC4/BLUE.c **** 
 795:.\Generated_Source\PSoC4/BLUE.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_EnableRxInt();
 798:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH */
 800:.\Generated_Source\PSoC4/BLUE.c **** 
 801:.\Generated_Source\PSoC4/BLUE.c ****     }
 698              		.loc 1 801 0
 699 003a BD46     		mov	sp, r7
 700 003c 03B0     		add	sp, sp, #12
 701              		@ sp needed for prologue
 702 003e 90BD     		pop	{r4, r7, pc}
 703              	.L43:
 704              		.align	2
 705              	.L42:
 706 0040 90000F40 		.word	1074725008
 707              		.cfi_endproc
 708              	.LFE12:
 709              		.size	BLUE_ClearRxBuffer, .-BLUE_ClearRxBuffer
 710              		.section	.text.BLUE_SetRxAddressMode,"ax",%progbits
 711              		.align	2
 712              		.global	BLUE_SetRxAddressMode
 713              		.code	16
 714              		.thumb_func
 715              		.type	BLUE_SetRxAddressMode, %function
 716              	BLUE_SetRxAddressMode:
 717              	.LFB13:
 802:.\Generated_Source\PSoC4/BLUE.c **** 
 803:.\Generated_Source\PSoC4/BLUE.c **** 
 804:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_SetRxAddressMode
 806:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC4/BLUE.c ****     *
 808:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 809:.\Generated_Source\PSoC4/BLUE.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC4/BLUE.c ****     *
 811:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 812:.\Generated_Source\PSoC4/BLUE.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC4/BLUE.c ****     *                                               detection
 815:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC4/BLUE.c ****     *                                               address detection
 817:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC4/BLUE.c ****     *                                               detection
 819:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC4/BLUE.c ****     *                                               address detection
 821:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE__B_UART__AM_NONE - No address detection
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 28


 822:.\Generated_Source\PSoC4/BLUE.c ****     *
 823:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 824:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 825:.\Generated_Source\PSoC4/BLUE.c ****     *
 826:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
 827:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxAddressMode - the parameter stored in this variable for
 828:.\Generated_Source\PSoC4/BLUE.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC4/BLUE.c ****     *
 831:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC4/BLUE.c ****                                                         
 834:.\Generated_Source\PSoC4/BLUE.c ****     {
 718              		.loc 1 834 0
 719              		.cfi_startproc
 720 0000 80B5     		push	{r7, lr}
 721              	.LCFI35:
 722              		.cfi_def_cfa_offset 8
 723              		.cfi_offset 7, -8
 724              		.cfi_offset 14, -4
 725 0002 82B0     		sub	sp, sp, #8
 726              	.LCFI36:
 727              		.cfi_def_cfa_offset 16
 728 0004 00AF     		add	r7, sp, #0
 729              	.LCFI37:
 730              		.cfi_def_cfa_register 7
 731 0006 021C     		mov	r2, r0
 732 0008 FB1D     		add	r3, r7, #7
 733 000a 1A70     		strb	r2, [r3]
 835:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC4/BLUE.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC4/BLUE.c ****             #else /* BLUE_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC4/BLUE.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC4/BLUE.c ****                 tmpCtrl = BLUE_CONTROL_REG & (uint8)~BLUE_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC4/BLUE.c ****                 tmpCtrl |= (uint8)(addressMode << BLUE_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC4/BLUE.c ****                 #if(BLUE_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC4/BLUE.c ****                    (BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC4/BLUE.c ****                 #endif /* End BLUE_RXBUFFERSIZE > BLUE_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC4/BLUE.c ****         #else /* BLUE_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC4/BLUE.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC4/BLUE.c ****     }
 734              		.loc 1 852 0
 735 000c BD46     		mov	sp, r7
 736 000e 02B0     		add	sp, sp, #8
 737              		@ sp needed for prologue
 738 0010 80BD     		pop	{r7, pc}
 739              		.cfi_endproc
 740              	.LFE13:
 741              		.size	BLUE_SetRxAddressMode, .-BLUE_SetRxAddressMode
 742 0012 C046     		.section	.text.BLUE_SetRxAddress1,"ax",%progbits
 743              		.align	2
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 29


 744              		.global	BLUE_SetRxAddress1
 745              		.code	16
 746              		.thumb_func
 747              		.type	BLUE_SetRxAddress1, %function
 748              	BLUE_SetRxAddress1:
 749              	.LFB14:
 853:.\Generated_Source\PSoC4/BLUE.c **** 
 854:.\Generated_Source\PSoC4/BLUE.c **** 
 855:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_SetRxAddress1
 857:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC4/BLUE.c ****     *
 859:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 860:.\Generated_Source\PSoC4/BLUE.c ****     *  Set the first hardware address compare value
 861:.\Generated_Source\PSoC4/BLUE.c ****     *
 862:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 863:.\Generated_Source\PSoC4/BLUE.c ****     *  address
 864:.\Generated_Source\PSoC4/BLUE.c ****     *
 865:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 866:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 867:.\Generated_Source\PSoC4/BLUE.c ****     *
 868:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC4/BLUE.c **** 
 871:.\Generated_Source\PSoC4/BLUE.c ****     {
 750              		.loc 1 871 0
 751              		.cfi_startproc
 752 0000 80B5     		push	{r7, lr}
 753              	.LCFI38:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 82B0     		sub	sp, sp, #8
 758              	.LCFI39:
 759              		.cfi_def_cfa_offset 16
 760 0004 00AF     		add	r7, sp, #0
 761              	.LCFI40:
 762              		.cfi_def_cfa_register 7
 763 0006 021C     		mov	r2, r0
 764 0008 FB1D     		add	r3, r7, #7
 765 000a 1A70     		strb	r2, [r3]
 872:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXADDRESS1_REG = address;
 766              		.loc 1 872 0
 767 000c 034B     		ldr	r3, .L46
 768 000e FA1D     		add	r2, r7, #7
 769 0010 1278     		ldrb	r2, [r2]
 770 0012 1A70     		strb	r2, [r3]
 873:.\Generated_Source\PSoC4/BLUE.c ****     }
 771              		.loc 1 873 0
 772 0014 BD46     		mov	sp, r7
 773 0016 02B0     		add	sp, sp, #8
 774              		@ sp needed for prologue
 775 0018 80BD     		pop	{r7, pc}
 776              	.L47:
 777 001a C046     		.align	2
 778              	.L46:
 779 001c 20000F40 		.word	1074724896
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 30


 780              		.cfi_endproc
 781              	.LFE14:
 782              		.size	BLUE_SetRxAddress1, .-BLUE_SetRxAddress1
 783              		.section	.text.BLUE_SetRxAddress2,"ax",%progbits
 784              		.align	2
 785              		.global	BLUE_SetRxAddress2
 786              		.code	16
 787              		.thumb_func
 788              		.type	BLUE_SetRxAddress2, %function
 789              	BLUE_SetRxAddress2:
 790              	.LFB15:
 874:.\Generated_Source\PSoC4/BLUE.c **** 
 875:.\Generated_Source\PSoC4/BLUE.c **** 
 876:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_SetRxAddress2
 878:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC4/BLUE.c ****     *
 880:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 881:.\Generated_Source\PSoC4/BLUE.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC4/BLUE.c ****     *
 883:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 884:.\Generated_Source\PSoC4/BLUE.c ****     *  address
 885:.\Generated_Source\PSoC4/BLUE.c ****     *
 886:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 887:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 888:.\Generated_Source\PSoC4/BLUE.c ****     *
 889:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC4/BLUE.c ****     {
 791              		.loc 1 891 0
 792              		.cfi_startproc
 793 0000 80B5     		push	{r7, lr}
 794              	.LCFI41:
 795              		.cfi_def_cfa_offset 8
 796              		.cfi_offset 7, -8
 797              		.cfi_offset 14, -4
 798 0002 82B0     		sub	sp, sp, #8
 799              	.LCFI42:
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              	.LCFI43:
 803              		.cfi_def_cfa_register 7
 804 0006 021C     		mov	r2, r0
 805 0008 FB1D     		add	r3, r7, #7
 806 000a 1A70     		strb	r2, [r3]
 892:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_RXADDRESS2_REG = address;
 807              		.loc 1 892 0
 808 000c 034B     		ldr	r3, .L49
 809 000e FA1D     		add	r2, r7, #7
 810 0010 1278     		ldrb	r2, [r2]
 811 0012 1A70     		strb	r2, [r3]
 893:.\Generated_Source\PSoC4/BLUE.c ****     }
 812              		.loc 1 893 0
 813 0014 BD46     		mov	sp, r7
 814 0016 02B0     		add	sp, sp, #8
 815              		@ sp needed for prologue
 816 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 31


 817              	.L50:
 818 001a C046     		.align	2
 819              	.L49:
 820 001c 30000F40 		.word	1074724912
 821              		.cfi_endproc
 822              	.LFE15:
 823              		.size	BLUE_SetRxAddress2, .-BLUE_SetRxAddress2
 824              		.section	.text.BLUE_EnableTxInt,"ax",%progbits
 825              		.align	2
 826              		.global	BLUE_EnableTxInt
 827              		.code	16
 828              		.thumb_func
 829              		.type	BLUE_EnableTxInt, %function
 830              	BLUE_EnableTxInt:
 831              	.LFB16:
 894:.\Generated_Source\PSoC4/BLUE.c **** 
 895:.\Generated_Source\PSoC4/BLUE.c **** #endif  /* BLUE_RX_ENABLED || BLUE_HD_ENABLED*/
 896:.\Generated_Source\PSoC4/BLUE.c **** 
 897:.\Generated_Source\PSoC4/BLUE.c **** 
 898:.\Generated_Source\PSoC4/BLUE.c **** #if( (BLUE_TX_ENABLED) || (BLUE_HD_ENABLED) )
 899:.\Generated_Source\PSoC4/BLUE.c **** 
 900:.\Generated_Source\PSoC4/BLUE.c ****     #if(BLUE_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC4/BLUE.c **** 
 902:.\Generated_Source\PSoC4/BLUE.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC4/BLUE.c ****         * Function Name: BLUE_EnableTxInt
 904:.\Generated_Source\PSoC4/BLUE.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC4/BLUE.c ****         *
 906:.\Generated_Source\PSoC4/BLUE.c ****         * Summary:
 907:.\Generated_Source\PSoC4/BLUE.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC4/BLUE.c ****         *
 909:.\Generated_Source\PSoC4/BLUE.c ****         * Parameters:
 910:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 911:.\Generated_Source\PSoC4/BLUE.c ****         *
 912:.\Generated_Source\PSoC4/BLUE.c ****         * Return:
 913:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 914:.\Generated_Source\PSoC4/BLUE.c ****         *
 915:.\Generated_Source\PSoC4/BLUE.c ****         * Theory:
 916:.\Generated_Source\PSoC4/BLUE.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC4/BLUE.c ****         *
 918:.\Generated_Source\PSoC4/BLUE.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC4/BLUE.c ****         void BLUE_EnableTxInt(void) 
 920:.\Generated_Source\PSoC4/BLUE.c ****         {
 832              		.loc 1 920 0
 833              		.cfi_startproc
 834 0000 80B5     		push	{r7, lr}
 835              	.LCFI44:
 836              		.cfi_def_cfa_offset 8
 837              		.cfi_offset 7, -8
 838              		.cfi_offset 14, -4
 839 0002 00AF     		add	r7, sp, #0
 840              	.LCFI45:
 841              		.cfi_def_cfa_register 7
 921:.\Generated_Source\PSoC4/BLUE.c ****             CyIntEnable(BLUE_TX_VECT_NUM);
 842              		.loc 1 921 0
 843 0004 0020     		mov	r0, #0
 844 0006 FFF7FEFF 		bl	CyIntEnable
 922:.\Generated_Source\PSoC4/BLUE.c ****         }
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 32


 845              		.loc 1 922 0
 846 000a BD46     		mov	sp, r7
 847              		@ sp needed for prologue
 848 000c 80BD     		pop	{r7, pc}
 849              		.cfi_endproc
 850              	.LFE16:
 851              		.size	BLUE_EnableTxInt, .-BLUE_EnableTxInt
 852 000e C046     		.section	.text.BLUE_DisableTxInt,"ax",%progbits
 853              		.align	2
 854              		.global	BLUE_DisableTxInt
 855              		.code	16
 856              		.thumb_func
 857              		.type	BLUE_DisableTxInt, %function
 858              	BLUE_DisableTxInt:
 859              	.LFB17:
 923:.\Generated_Source\PSoC4/BLUE.c **** 
 924:.\Generated_Source\PSoC4/BLUE.c **** 
 925:.\Generated_Source\PSoC4/BLUE.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC4/BLUE.c ****         * Function Name: BLUE_DisableTxInt
 927:.\Generated_Source\PSoC4/BLUE.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC4/BLUE.c ****         *
 929:.\Generated_Source\PSoC4/BLUE.c ****         * Summary:
 930:.\Generated_Source\PSoC4/BLUE.c ****         *  Disable TX interrupt generation
 931:.\Generated_Source\PSoC4/BLUE.c ****         *
 932:.\Generated_Source\PSoC4/BLUE.c ****         * Parameters:
 933:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 934:.\Generated_Source\PSoC4/BLUE.c ****         *
 935:.\Generated_Source\PSoC4/BLUE.c ****         * Return:
 936:.\Generated_Source\PSoC4/BLUE.c ****         *  None.
 937:.\Generated_Source\PSoC4/BLUE.c ****         *
 938:.\Generated_Source\PSoC4/BLUE.c ****         * Theory:
 939:.\Generated_Source\PSoC4/BLUE.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC4/BLUE.c ****         *
 941:.\Generated_Source\PSoC4/BLUE.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC4/BLUE.c ****         void BLUE_DisableTxInt(void) 
 943:.\Generated_Source\PSoC4/BLUE.c ****         {
 860              		.loc 1 943 0
 861              		.cfi_startproc
 862 0000 80B5     		push	{r7, lr}
 863              	.LCFI46:
 864              		.cfi_def_cfa_offset 8
 865              		.cfi_offset 7, -8
 866              		.cfi_offset 14, -4
 867 0002 00AF     		add	r7, sp, #0
 868              	.LCFI47:
 869              		.cfi_def_cfa_register 7
 944:.\Generated_Source\PSoC4/BLUE.c ****             CyIntDisable(BLUE_TX_VECT_NUM);
 870              		.loc 1 944 0
 871 0004 0020     		mov	r0, #0
 872 0006 FFF7FEFF 		bl	CyIntDisable
 945:.\Generated_Source\PSoC4/BLUE.c ****         }
 873              		.loc 1 945 0
 874 000a BD46     		mov	sp, r7
 875              		@ sp needed for prologue
 876 000c 80BD     		pop	{r7, pc}
 877              		.cfi_endproc
 878              	.LFE17:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 33


 879              		.size	BLUE_DisableTxInt, .-BLUE_DisableTxInt
 880 000e C046     		.section	.text.BLUE_SetTxInterruptMode,"ax",%progbits
 881              		.align	2
 882              		.global	BLUE_SetTxInterruptMode
 883              		.code	16
 884              		.thumb_func
 885              		.type	BLUE_SetTxInterruptMode, %function
 886              	BLUE_SetTxInterruptMode:
 887              	.LFB18:
 946:.\Generated_Source\PSoC4/BLUE.c **** 
 947:.\Generated_Source\PSoC4/BLUE.c ****     #endif /* BLUE_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC4/BLUE.c **** 
 949:.\Generated_Source\PSoC4/BLUE.c **** 
 950:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_SetTxInterruptMode
 952:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC4/BLUE.c ****     *
 954:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 955:.\Generated_Source\PSoC4/BLUE.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC4/BLUE.c ****     *
 957:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 958:.\Generated_Source\PSoC4/BLUE.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC4/BLUE.c ****     *          the header file)
 960:.\Generated_Source\PSoC4/BLUE.c ****     *
 961:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 962:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
 963:.\Generated_Source\PSoC4/BLUE.c ****     *
 964:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
 965:.\Generated_Source\PSoC4/BLUE.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC4/BLUE.c ****     *
 967:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC4/BLUE.c ****     {
 888              		.loc 1 969 0
 889              		.cfi_startproc
 890 0000 80B5     		push	{r7, lr}
 891              	.LCFI48:
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 82B0     		sub	sp, sp, #8
 896              	.LCFI49:
 897              		.cfi_def_cfa_offset 16
 898 0004 00AF     		add	r7, sp, #0
 899              	.LCFI50:
 900              		.cfi_def_cfa_register 7
 901 0006 021C     		mov	r2, r0
 902 0008 FB1D     		add	r3, r7, #7
 903 000a 1A70     		strb	r2, [r3]
 970:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_TXSTATUS_MASK_REG = intSrc;
 904              		.loc 1 970 0
 905 000c 034B     		ldr	r3, .L54
 906 000e FA1D     		add	r2, r7, #7
 907 0010 1278     		ldrb	r2, [r2]
 908 0012 1A70     		strb	r2, [r3]
 971:.\Generated_Source\PSoC4/BLUE.c ****     }
 909              		.loc 1 971 0
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 34


 910 0014 BD46     		mov	sp, r7
 911 0016 02B0     		add	sp, sp, #8
 912              		@ sp needed for prologue
 913 0018 80BD     		pop	{r7, pc}
 914              	.L55:
 915 001a C046     		.align	2
 916              	.L54:
 917 001c 82000F40 		.word	1074724994
 918              		.cfi_endproc
 919              	.LFE18:
 920              		.size	BLUE_SetTxInterruptMode, .-BLUE_SetTxInterruptMode
 921              		.section	.text.BLUE_WriteTxData,"ax",%progbits
 922              		.align	2
 923              		.global	BLUE_WriteTxData
 924              		.code	16
 925              		.thumb_func
 926              		.type	BLUE_WriteTxData, %function
 927              	BLUE_WriteTxData:
 928              	.LFB19:
 972:.\Generated_Source\PSoC4/BLUE.c **** 
 973:.\Generated_Source\PSoC4/BLUE.c **** 
 974:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_WriteTxData
 976:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC4/BLUE.c ****     *
 978:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
 979:.\Generated_Source\PSoC4/BLUE.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC4/BLUE.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC4/BLUE.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC4/BLUE.c ****     *
 983:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
 984:.\Generated_Source\PSoC4/BLUE.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC4/BLUE.c ****     *
 986:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
 987:.\Generated_Source\PSoC4/BLUE.c ****     * void
 988:.\Generated_Source\PSoC4/BLUE.c ****     *
 989:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
 990:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC4/BLUE.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC4/BLUE.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC4/BLUE.c ****     *    initialized.
 997:.\Generated_Source\PSoC4/BLUE.c ****     *
 998:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
 999:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1000:.\Generated_Source\PSoC4/BLUE.c ****     *
1001:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC4/BLUE.c ****     {
 929              		.loc 1 1003 0
 930              		.cfi_startproc
 931 0000 80B5     		push	{r7, lr}
 932              	.LCFI51:
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 7, -8
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 35


 935              		.cfi_offset 14, -4
 936 0002 82B0     		sub	sp, sp, #8
 937              	.LCFI52:
 938              		.cfi_def_cfa_offset 16
 939 0004 00AF     		add	r7, sp, #0
 940              	.LCFI53:
 941              		.cfi_def_cfa_register 7
 942 0006 021C     		mov	r2, r0
 943 0008 FB1D     		add	r3, r7, #7
 944 000a 1A70     		strb	r2, [r3]
1004:.\Generated_Source\PSoC4/BLUE.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC4/BLUE.c ****         if(BLUE_initVar != 0u)
 945              		.loc 1 1005 0
 946 000c 184B     		ldr	r3, .L61
 947 000e 1B78     		ldrb	r3, [r3]
 948 0010 002B     		cmp	r3, #0
 949 0012 29D0     		beq	.L56
1006:.\Generated_Source\PSoC4/BLUE.c ****         {
1007:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH)
1008:.\Generated_Source\PSoC4/BLUE.c **** 
1009:.\Generated_Source\PSoC4/BLUE.c ****                 /* Disable Tx interrupt. */
1010:.\Generated_Source\PSoC4/BLUE.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC4/BLUE.c ****                 #if(BLUE_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_DisableTxInt();
 950              		.loc 1 1012 0
 951 0014 FFF7FEFF 		bl	BLUE_DisableTxInt
1013:.\Generated_Source\PSoC4/BLUE.c ****                 #endif /* End BLUE_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC4/BLUE.c **** 
1015:.\Generated_Source\PSoC4/BLUE.c ****                 if( (BLUE_txBufferRead == BLUE_txBufferWrite) &&
 952              		.loc 1 1015 0
 953 0018 164B     		ldr	r3, .L61+4
 954 001a 1B78     		ldrb	r3, [r3]
 955 001c DAB2     		uxtb	r2, r3
 956 001e 164B     		ldr	r3, .L61+8
 957 0020 1B78     		ldrb	r3, [r3]
 958 0022 9A42     		cmp	r2, r3
 959 0024 0BD1     		bne	.L58
1016:.\Generated_Source\PSoC4/BLUE.c ****                     ((BLUE_TXSTATUS_REG & BLUE_TX_STS_FIFO_FULL) == 0u) )
 960              		.loc 1 1016 0 discriminator 1
 961 0026 154B     		ldr	r3, .L61+12
 962 0028 1B78     		ldrb	r3, [r3]
 963 002a DBB2     		uxtb	r3, r3
 964 002c 1A1C     		mov	r2, r3
 965 002e 0423     		mov	r3, #4
 966 0030 1340     		and	r3, r2
1015:.\Generated_Source\PSoC4/BLUE.c ****                 if( (BLUE_txBufferRead == BLUE_txBufferWrite) &&
 967              		.loc 1 1015 0 discriminator 1
 968 0032 04D1     		bne	.L58
1017:.\Generated_Source\PSoC4/BLUE.c ****                 {
1018:.\Generated_Source\PSoC4/BLUE.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_TXDATA_REG = txDataByte;
 969              		.loc 1 1019 0
 970 0034 124B     		ldr	r3, .L61+16
 971 0036 FA1D     		add	r2, r7, #7
 972 0038 1278     		ldrb	r2, [r2]
 973 003a 1A70     		strb	r2, [r3]
 974 003c 12E0     		b	.L59
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 36


 975              	.L58:
1020:.\Generated_Source\PSoC4/BLUE.c ****                 }
1021:.\Generated_Source\PSoC4/BLUE.c ****                 else
1022:.\Generated_Source\PSoC4/BLUE.c ****                 {
1023:.\Generated_Source\PSoC4/BLUE.c ****                     if(BLUE_txBufferWrite >= BLUE_TXBUFFERSIZE)
 976              		.loc 1 1023 0
 977 003e 0E4B     		ldr	r3, .L61+8
 978 0040 1B78     		ldrb	r3, [r3]
 979 0042 312B     		cmp	r3, #49
 980 0044 02D9     		bls	.L60
1024:.\Generated_Source\PSoC4/BLUE.c ****                     {
1025:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_txBufferWrite = 0u;
 981              		.loc 1 1025 0
 982 0046 0C4B     		ldr	r3, .L61+8
 983 0048 0022     		mov	r2, #0
 984 004a 1A70     		strb	r2, [r3]
 985              	.L60:
1026:.\Generated_Source\PSoC4/BLUE.c ****                     }
1027:.\Generated_Source\PSoC4/BLUE.c **** 
1028:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_txBuffer[BLUE_txBufferWrite] = txDataByte;
 986              		.loc 1 1028 0
 987 004c 0A4B     		ldr	r3, .L61+8
 988 004e 1B78     		ldrb	r3, [r3]
 989 0050 0C4A     		ldr	r2, .L61+20
 990 0052 F91D     		add	r1, r7, #7
 991 0054 0978     		ldrb	r1, [r1]
 992 0056 D154     		strb	r1, [r2, r3]
1029:.\Generated_Source\PSoC4/BLUE.c **** 
1030:.\Generated_Source\PSoC4/BLUE.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_txBufferWrite++;
 993              		.loc 1 1031 0
 994 0058 074B     		ldr	r3, .L61+8
 995 005a 1B78     		ldrb	r3, [r3]
 996 005c 0133     		add	r3, r3, #1
 997 005e DAB2     		uxtb	r2, r3
 998 0060 054B     		ldr	r3, .L61+8
 999 0062 1A70     		strb	r2, [r3]
 1000              	.L59:
1032:.\Generated_Source\PSoC4/BLUE.c **** 
1033:.\Generated_Source\PSoC4/BLUE.c ****                 }
1034:.\Generated_Source\PSoC4/BLUE.c **** 
1035:.\Generated_Source\PSoC4/BLUE.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC4/BLUE.c ****                 #if(BLUE_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_EnableTxInt();
 1001              		.loc 1 1037 0
 1002 0064 FFF7FEFF 		bl	BLUE_EnableTxInt
 1003              	.L56:
1038:.\Generated_Source\PSoC4/BLUE.c ****                 #endif /* End BLUE_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC4/BLUE.c **** 
1040:.\Generated_Source\PSoC4/BLUE.c ****             #else /* BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH */
1041:.\Generated_Source\PSoC4/BLUE.c **** 
1042:.\Generated_Source\PSoC4/BLUE.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_TXDATA_REG = txDataByte;
1044:.\Generated_Source\PSoC4/BLUE.c **** 
1045:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH */
1046:.\Generated_Source\PSoC4/BLUE.c ****         }
1047:.\Generated_Source\PSoC4/BLUE.c ****     }
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 37


 1004              		.loc 1 1047 0
 1005 0068 BD46     		mov	sp, r7
 1006 006a 02B0     		add	sp, sp, #8
 1007              		@ sp needed for prologue
 1008 006c 80BD     		pop	{r7, pc}
 1009              	.L62:
 1010 006e C046     		.align	2
 1011              	.L61:
 1012 0070 00000000 		.word	BLUE_initVar
 1013 0074 00000000 		.word	BLUE_txBufferRead
 1014 0078 00000000 		.word	BLUE_txBufferWrite
 1015 007c 62000F40 		.word	1074724962
 1016 0080 42000F40 		.word	1074724930
 1017 0084 00000000 		.word	BLUE_txBuffer
 1018              		.cfi_endproc
 1019              	.LFE19:
 1020              		.size	BLUE_WriteTxData, .-BLUE_WriteTxData
 1021              		.section	.text.BLUE_ReadTxStatus,"ax",%progbits
 1022              		.align	2
 1023              		.global	BLUE_ReadTxStatus
 1024              		.code	16
 1025              		.thumb_func
 1026              		.type	BLUE_ReadTxStatus, %function
 1027              	BLUE_ReadTxStatus:
 1028              	.LFB20:
1048:.\Generated_Source\PSoC4/BLUE.c **** 
1049:.\Generated_Source\PSoC4/BLUE.c **** 
1050:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_ReadTxStatus
1052:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC4/BLUE.c ****     *
1054:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1055:.\Generated_Source\PSoC4/BLUE.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC4/BLUE.c ****     *
1057:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1058:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1059:.\Generated_Source\PSoC4/BLUE.c ****     *
1060:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1061:.\Generated_Source\PSoC4/BLUE.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC4/BLUE.c ****     *
1063:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
1064:.\Generated_Source\PSoC4/BLUE.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC4/BLUE.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC4/BLUE.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC4/BLUE.c ****     *  accordingly.
1068:.\Generated_Source\PSoC4/BLUE.c ****     *
1069:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC4/BLUE.c ****     uint8 BLUE_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC4/BLUE.c ****     {
 1029              		.loc 1 1071 0
 1030              		.cfi_startproc
 1031 0000 80B5     		push	{r7, lr}
 1032              	.LCFI54:
 1033              		.cfi_def_cfa_offset 8
 1034              		.cfi_offset 7, -8
 1035              		.cfi_offset 14, -4
 1036 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 38


 1037              	.LCFI55:
 1038              		.cfi_def_cfa_register 7
1072:.\Generated_Source\PSoC4/BLUE.c ****         return(BLUE_TXSTATUS_REG);
 1039              		.loc 1 1072 0
 1040 0004 024B     		ldr	r3, .L65
 1041 0006 1B78     		ldrb	r3, [r3]
 1042 0008 DBB2     		uxtb	r3, r3
1073:.\Generated_Source\PSoC4/BLUE.c ****     }
 1043              		.loc 1 1073 0
 1044 000a 181C     		mov	r0, r3
 1045 000c BD46     		mov	sp, r7
 1046              		@ sp needed for prologue
 1047 000e 80BD     		pop	{r7, pc}
 1048              	.L66:
 1049              		.align	2
 1050              	.L65:
 1051 0010 62000F40 		.word	1074724962
 1052              		.cfi_endproc
 1053              	.LFE20:
 1054              		.size	BLUE_ReadTxStatus, .-BLUE_ReadTxStatus
 1055              		.section	.text.BLUE_PutChar,"ax",%progbits
 1056              		.align	2
 1057              		.global	BLUE_PutChar
 1058              		.code	16
 1059              		.thumb_func
 1060              		.type	BLUE_PutChar, %function
 1061              	BLUE_PutChar:
 1062              	.LFB21:
1074:.\Generated_Source\PSoC4/BLUE.c **** 
1075:.\Generated_Source\PSoC4/BLUE.c **** 
1076:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_PutChar
1078:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC4/BLUE.c ****     *
1080:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1081:.\Generated_Source\PSoC4/BLUE.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC4/BLUE.c ****     *
1083:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1084:.\Generated_Source\PSoC4/BLUE.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC4/BLUE.c ****     *
1086:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1087:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1088:.\Generated_Source\PSoC4/BLUE.c ****     *
1089:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
1090:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC4/BLUE.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC4/BLUE.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC4/BLUE.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC4/BLUE.c ****     *     initialized.
1098:.\Generated_Source\PSoC4/BLUE.c ****     *
1099:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
1100:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1101:.\Generated_Source\PSoC4/BLUE.c ****     *
1102:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 39


1103:.\Generated_Source\PSoC4/BLUE.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC4/BLUE.c ****     *
1105:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC4/BLUE.c ****     {
 1063              		.loc 1 1107 0
 1064              		.cfi_startproc
 1065 0000 80B5     		push	{r7, lr}
 1066              	.LCFI56:
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 7, -8
 1069              		.cfi_offset 14, -4
 1070 0002 84B0     		sub	sp, sp, #16
 1071              	.LCFI57:
 1072              		.cfi_def_cfa_offset 24
 1073 0004 00AF     		add	r7, sp, #0
 1074              	.LCFI58:
 1075              		.cfi_def_cfa_register 7
 1076 0006 021C     		mov	r2, r0
 1077 0008 FB1D     		add	r3, r7, #7
 1078 000a 1A70     		strb	r2, [r3]
 1079              	.L70:
1108:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH)
1109:.\Generated_Source\PSoC4/BLUE.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC4/BLUE.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC4/BLUE.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC4/BLUE.c ****                 */
1113:.\Generated_Source\PSoC4/BLUE.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC4/BLUE.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC4/BLUE.c **** 
1116:.\Generated_Source\PSoC4/BLUE.c ****                 do{
1117:.\Generated_Source\PSoC4/BLUE.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC4/BLUE.c ****                     #if ((BLUE_TXBUFFERSIZE > BLUE_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC4/BLUE.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC4/BLUE.c ****                         CyIntDisable(BLUE_TX_VECT_NUM);
1121:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC4/BLUE.c ****                     loc_txBufferWrite = BLUE_txBufferWrite;
 1080              		.loc 1 1122 0
 1081 000c 3B1C     		mov	r3, r7
 1082 000e 0F33     		add	r3, r3, #15
 1083 0010 2D4A     		ldr	r2, .L74
 1084 0012 1278     		ldrb	r2, [r2]
 1085 0014 1A70     		strb	r2, [r3]
1123:.\Generated_Source\PSoC4/BLUE.c ****                     loc_txBufferRead = BLUE_txBufferRead;
 1086              		.loc 1 1123 0
 1087 0016 3B1C     		mov	r3, r7
 1088 0018 0E33     		add	r3, r3, #14
 1089 001a 2C4A     		ldr	r2, .L74+4
 1090 001c 1278     		ldrb	r2, [r2]
 1091 001e 1A70     		strb	r2, [r3]
1124:.\Generated_Source\PSoC4/BLUE.c ****                     #if ((BLUE_TXBUFFERSIZE > BLUE_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC4/BLUE.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC4/BLUE.c ****                         CyIntEnable(BLUE_TX_VECT_NUM);
1127:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1128:.\Generated_Source\PSoC4/BLUE.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
 1092              		.loc 1 1128 0
 1093 0020 3A1C     		mov	r2, r7
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 40


 1094 0022 0F32     		add	r2, r2, #15
 1095 0024 3B1C     		mov	r3, r7
 1096 0026 0E33     		add	r3, r3, #14
 1097 0028 1278     		ldrb	r2, [r2]
 1098 002a 1B78     		ldrb	r3, [r3]
 1099 002c 9A42     		cmp	r2, r3
 1100 002e 0BD2     		bcs	.L68
 1101              		.loc 1 1128 0 is_stmt 0 discriminator 1
 1102 0030 3B1C     		mov	r3, r7
 1103 0032 0F33     		add	r3, r3, #15
 1104 0034 1A78     		ldrb	r2, [r3]
 1105 0036 3B1C     		mov	r3, r7
 1106 0038 0E33     		add	r3, r3, #14
 1107 003a 1B78     		ldrb	r3, [r3]
 1108 003c 013B     		sub	r3, r3, #1
 1109 003e D31A     		sub	r3, r2, r3
 1110 0040 5A42     		neg	r2, r3
 1111 0042 5341     		adc	r3, r3, r2
 1112 0044 DBB2     		uxtb	r3, r3
 1113 0046 0AE0     		b	.L69
 1114              	.L68:
1129:.\Generated_Source\PSoC4/BLUE.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
 1115              		.loc 1 1129 0 is_stmt 1 discriminator 2
 1116 0048 3B1C     		mov	r3, r7
 1117 004a 0F33     		add	r3, r3, #15
 1118 004c 1A78     		ldrb	r2, [r3]
 1119 004e 3B1C     		mov	r3, r7
 1120 0050 0E33     		add	r3, r3, #14
 1121 0052 1B78     		ldrb	r3, [r3]
 1122 0054 D31A     		sub	r3, r2, r3
1128:.\Generated_Source\PSoC4/BLUE.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
 1123              		.loc 1 1128 0 discriminator 2
 1124 0056 313B     		sub	r3, r3, #49
 1125 0058 5A42     		neg	r2, r3
 1126 005a 5341     		adc	r3, r3, r2
 1127 005c DBB2     		uxtb	r3, r3
 1128              	.L69:
1130:.\Generated_Source\PSoC4/BLUE.c ****                                         (uint8)(BLUE_TXBUFFERSIZE - 1u)) );
 1129              		.loc 1 1130 0
 1130 005e 002B     		cmp	r3, #0
 1131 0060 D4D1     		bne	.L70
1131:.\Generated_Source\PSoC4/BLUE.c **** 
1132:.\Generated_Source\PSoC4/BLUE.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
 1132              		.loc 1 1132 0
 1133 0062 3A1C     		mov	r2, r7
 1134 0064 0E32     		add	r2, r2, #14
 1135 0066 3B1C     		mov	r3, r7
 1136 0068 0F33     		add	r3, r3, #15
 1137 006a 1278     		ldrb	r2, [r2]
 1138 006c 1B78     		ldrb	r3, [r3]
 1139 006e 9A42     		cmp	r2, r3
 1140 0070 0BD1     		bne	.L71
1133:.\Generated_Source\PSoC4/BLUE.c ****                     ((BLUE_TXSTATUS_REG & BLUE_TX_STS_FIFO_FULL) == 0u) )
 1141              		.loc 1 1133 0 discriminator 1
 1142 0072 174B     		ldr	r3, .L74+8
 1143 0074 1B78     		ldrb	r3, [r3]
 1144 0076 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 41


 1145 0078 1A1C     		mov	r2, r3
 1146 007a 0423     		mov	r3, #4
 1147 007c 1340     		and	r3, r2
1132:.\Generated_Source\PSoC4/BLUE.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
 1148              		.loc 1 1132 0 discriminator 1
 1149 007e 04D1     		bne	.L71
1134:.\Generated_Source\PSoC4/BLUE.c ****                 {
1135:.\Generated_Source\PSoC4/BLUE.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_TXDATA_REG = txDataByte;
 1150              		.loc 1 1136 0
 1151 0080 144B     		ldr	r3, .L74+12
 1152 0082 FA1D     		add	r2, r7, #7
 1153 0084 1278     		ldrb	r2, [r2]
 1154 0086 1A70     		strb	r2, [r3]
 1155 0088 1BE0     		b	.L67
 1156              	.L71:
1137:.\Generated_Source\PSoC4/BLUE.c ****                 }
1138:.\Generated_Source\PSoC4/BLUE.c ****                 else
1139:.\Generated_Source\PSoC4/BLUE.c ****                 {
1140:.\Generated_Source\PSoC4/BLUE.c ****                     if(loc_txBufferWrite >= BLUE_TXBUFFERSIZE)
 1157              		.loc 1 1140 0
 1158 008a 3B1C     		mov	r3, r7
 1159 008c 0F33     		add	r3, r3, #15
 1160 008e 1B78     		ldrb	r3, [r3]
 1161 0090 312B     		cmp	r3, #49
 1162 0092 03D9     		bls	.L73
1141:.\Generated_Source\PSoC4/BLUE.c ****                     {
1142:.\Generated_Source\PSoC4/BLUE.c ****                         loc_txBufferWrite = 0u;
 1163              		.loc 1 1142 0
 1164 0094 3B1C     		mov	r3, r7
 1165 0096 0F33     		add	r3, r3, #15
 1166 0098 0022     		mov	r2, #0
 1167 009a 1A70     		strb	r2, [r3]
 1168              	.L73:
1143:.\Generated_Source\PSoC4/BLUE.c ****                     }
1144:.\Generated_Source\PSoC4/BLUE.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_txBuffer[loc_txBufferWrite] = txDataByte;
 1169              		.loc 1 1145 0
 1170 009c 3B1C     		mov	r3, r7
 1171 009e 0F33     		add	r3, r3, #15
 1172 00a0 1B78     		ldrb	r3, [r3]
 1173 00a2 0D4A     		ldr	r2, .L74+16
 1174 00a4 F91D     		add	r1, r7, #7
 1175 00a6 0978     		ldrb	r1, [r1]
 1176 00a8 D154     		strb	r1, [r2, r3]
1146:.\Generated_Source\PSoC4/BLUE.c ****                     loc_txBufferWrite++;
 1177              		.loc 1 1146 0
 1178 00aa 3B1C     		mov	r3, r7
 1179 00ac 0F33     		add	r3, r3, #15
 1180 00ae 3A1C     		mov	r2, r7
 1181 00b0 0F32     		add	r2, r2, #15
 1182 00b2 1278     		ldrb	r2, [r2]
 1183 00b4 0132     		add	r2, r2, #1
 1184 00b6 1A70     		strb	r2, [r3]
1147:.\Generated_Source\PSoC4/BLUE.c **** 
1148:.\Generated_Source\PSoC4/BLUE.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC4/BLUE.c ****                     #if ((BLUE_TXBUFFERSIZE > BLUE_MAX_BYTE_VALUE) && (CY_PSOC3))
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 42


1150:.\Generated_Source\PSoC4/BLUE.c ****                         CyIntDisable(BLUE_TX_VECT_NUM);
1151:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_txBufferWrite = loc_txBufferWrite;
 1185              		.loc 1 1152 0
 1186 00b8 034B     		ldr	r3, .L74
 1187 00ba 3A1C     		mov	r2, r7
 1188 00bc 0F32     		add	r2, r2, #15
 1189 00be 1278     		ldrb	r2, [r2]
 1190 00c0 1A70     		strb	r2, [r3]
 1191              	.L67:
1153:.\Generated_Source\PSoC4/BLUE.c ****                     #if ((BLUE_TXBUFFERSIZE > BLUE_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC4/BLUE.c ****                         CyIntEnable(BLUE_TX_VECT_NUM);
1155:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC4/BLUE.c ****                 }
1157:.\Generated_Source\PSoC4/BLUE.c **** 
1158:.\Generated_Source\PSoC4/BLUE.c ****             #else /* BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH */
1159:.\Generated_Source\PSoC4/BLUE.c **** 
1160:.\Generated_Source\PSoC4/BLUE.c ****                 while((BLUE_TXSTATUS_REG & BLUE_TX_STS_FIFO_FULL) != 0u)
1161:.\Generated_Source\PSoC4/BLUE.c ****                 {
1162:.\Generated_Source\PSoC4/BLUE.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC4/BLUE.c ****                 }
1164:.\Generated_Source\PSoC4/BLUE.c **** 
1165:.\Generated_Source\PSoC4/BLUE.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_TXDATA_REG = txDataByte;
1167:.\Generated_Source\PSoC4/BLUE.c **** 
1168:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH */
1169:.\Generated_Source\PSoC4/BLUE.c ****     }
 1192              		.loc 1 1169 0
 1193 00c2 BD46     		mov	sp, r7
 1194 00c4 04B0     		add	sp, sp, #16
 1195              		@ sp needed for prologue
 1196 00c6 80BD     		pop	{r7, pc}
 1197              	.L75:
 1198              		.align	2
 1199              	.L74:
 1200 00c8 00000000 		.word	BLUE_txBufferWrite
 1201 00cc 00000000 		.word	BLUE_txBufferRead
 1202 00d0 62000F40 		.word	1074724962
 1203 00d4 42000F40 		.word	1074724930
 1204 00d8 00000000 		.word	BLUE_txBuffer
 1205              		.cfi_endproc
 1206              	.LFE21:
 1207              		.size	BLUE_PutChar, .-BLUE_PutChar
 1208              		.section	.text.BLUE_PutString,"ax",%progbits
 1209              		.align	2
 1210              		.global	BLUE_PutString
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	BLUE_PutString, %function
 1214              	BLUE_PutString:
 1215              	.LFB22:
1170:.\Generated_Source\PSoC4/BLUE.c **** 
1171:.\Generated_Source\PSoC4/BLUE.c **** 
1172:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_PutString
1174:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC4/BLUE.c ****     *
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 43


1176:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1177:.\Generated_Source\PSoC4/BLUE.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC4/BLUE.c ****     *
1179:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1180:.\Generated_Source\PSoC4/BLUE.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC4/BLUE.c ****     *
1182:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1183:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1184:.\Generated_Source\PSoC4/BLUE.c ****     *
1185:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
1186:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC4/BLUE.c ****     *     initialized.
1188:.\Generated_Source\PSoC4/BLUE.c ****     *
1189:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
1190:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1191:.\Generated_Source\PSoC4/BLUE.c ****     *
1192:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
1193:.\Generated_Source\PSoC4/BLUE.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC4/BLUE.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC4/BLUE.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC4/BLUE.c ****     *
1197:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC4/BLUE.c ****     {
 1216              		.loc 1 1199 0
 1217              		.cfi_startproc
 1218 0000 80B5     		push	{r7, lr}
 1219              	.LCFI59:
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 7, -8
 1222              		.cfi_offset 14, -4
 1223 0002 84B0     		sub	sp, sp, #16
 1224              	.LCFI60:
 1225              		.cfi_def_cfa_offset 24
 1226 0004 00AF     		add	r7, sp, #0
 1227              	.LCFI61:
 1228              		.cfi_def_cfa_register 7
 1229 0006 7860     		str	r0, [r7, #4]
1200:.\Generated_Source\PSoC4/BLUE.c ****         uint16 buf_index = 0u;
 1230              		.loc 1 1200 0
 1231 0008 3B1C     		mov	r3, r7
 1232 000a 0E33     		add	r3, r3, #14
 1233 000c 0022     		mov	r2, #0
 1234 000e 1A80     		strh	r2, [r3]
1201:.\Generated_Source\PSoC4/BLUE.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC4/BLUE.c ****         if(BLUE_initVar != 0u)
 1235              		.loc 1 1202 0
 1236 0010 0F4B     		ldr	r3, .L80
 1237 0012 1B78     		ldrb	r3, [r3]
 1238 0014 002B     		cmp	r3, #0
 1239 0016 18D0     		beq	.L76
1203:.\Generated_Source\PSoC4/BLUE.c ****         {
1204:.\Generated_Source\PSoC4/BLUE.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC4/BLUE.c ****             while(string[buf_index] != (char8)0)
 1240              		.loc 1 1205 0
 1241 0018 0FE0     		b	.L78
 1242              	.L79:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 44


1206:.\Generated_Source\PSoC4/BLUE.c ****             {
1207:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_PutChar((uint8)string[buf_index]);
 1243              		.loc 1 1207 0
 1244 001a 3B1C     		mov	r3, r7
 1245 001c 0E33     		add	r3, r3, #14
 1246 001e 1B88     		ldrh	r3, [r3]
 1247 0020 7A68     		ldr	r2, [r7, #4]
 1248 0022 D318     		add	r3, r2, r3
 1249 0024 1B78     		ldrb	r3, [r3]
 1250 0026 181C     		mov	r0, r3
 1251 0028 FFF7FEFF 		bl	BLUE_PutChar
1208:.\Generated_Source\PSoC4/BLUE.c ****                 buf_index++;
 1252              		.loc 1 1208 0
 1253 002c 3B1C     		mov	r3, r7
 1254 002e 0E33     		add	r3, r3, #14
 1255 0030 3A1C     		mov	r2, r7
 1256 0032 0E32     		add	r2, r2, #14
 1257 0034 1288     		ldrh	r2, [r2]
 1258 0036 0132     		add	r2, r2, #1
 1259 0038 1A80     		strh	r2, [r3]
 1260              	.L78:
1205:.\Generated_Source\PSoC4/BLUE.c ****             while(string[buf_index] != (char8)0)
 1261              		.loc 1 1205 0 discriminator 1
 1262 003a 3B1C     		mov	r3, r7
 1263 003c 0E33     		add	r3, r3, #14
 1264 003e 1B88     		ldrh	r3, [r3]
 1265 0040 7A68     		ldr	r2, [r7, #4]
 1266 0042 D318     		add	r3, r2, r3
 1267 0044 1B78     		ldrb	r3, [r3]
 1268 0046 002B     		cmp	r3, #0
 1269 0048 E7D1     		bne	.L79
 1270              	.L76:
1209:.\Generated_Source\PSoC4/BLUE.c ****             }
1210:.\Generated_Source\PSoC4/BLUE.c ****         }
1211:.\Generated_Source\PSoC4/BLUE.c ****     }
 1271              		.loc 1 1211 0
 1272 004a BD46     		mov	sp, r7
 1273 004c 04B0     		add	sp, sp, #16
 1274              		@ sp needed for prologue
 1275 004e 80BD     		pop	{r7, pc}
 1276              	.L81:
 1277              		.align	2
 1278              	.L80:
 1279 0050 00000000 		.word	BLUE_initVar
 1280              		.cfi_endproc
 1281              	.LFE22:
 1282              		.size	BLUE_PutString, .-BLUE_PutString
 1283              		.section	.text.BLUE_PutArray,"ax",%progbits
 1284              		.align	2
 1285              		.global	BLUE_PutArray
 1286              		.code	16
 1287              		.thumb_func
 1288              		.type	BLUE_PutArray, %function
 1289              	BLUE_PutArray:
 1290              	.LFB23:
1212:.\Generated_Source\PSoC4/BLUE.c **** 
1213:.\Generated_Source\PSoC4/BLUE.c **** 
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 45


1214:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_PutArray
1216:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC4/BLUE.c ****     *
1218:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1219:.\Generated_Source\PSoC4/BLUE.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC4/BLUE.c ****     *
1221:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1222:.\Generated_Source\PSoC4/BLUE.c ****     *  string: Address of the memory array residing in RAM or ROM.
1223:.\Generated_Source\PSoC4/BLUE.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC4/BLUE.c ****     *
1225:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1226:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1227:.\Generated_Source\PSoC4/BLUE.c ****     *
1228:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
1229:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC4/BLUE.c ****     *     initialized.
1231:.\Generated_Source\PSoC4/BLUE.c ****     *
1232:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
1233:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1234:.\Generated_Source\PSoC4/BLUE.c ****     *
1235:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC4/BLUE.c ****                                                                     
1238:.\Generated_Source\PSoC4/BLUE.c ****     {
 1291              		.loc 1 1238 0
 1292              		.cfi_startproc
 1293 0000 80B5     		push	{r7, lr}
 1294              	.LCFI62:
 1295              		.cfi_def_cfa_offset 8
 1296              		.cfi_offset 7, -8
 1297              		.cfi_offset 14, -4
 1298 0002 84B0     		sub	sp, sp, #16
 1299              	.LCFI63:
 1300              		.cfi_def_cfa_offset 24
 1301 0004 00AF     		add	r7, sp, #0
 1302              	.LCFI64:
 1303              		.cfi_def_cfa_register 7
 1304 0006 7860     		str	r0, [r7, #4]
 1305 0008 0A1C     		mov	r2, r1
 1306 000a FB1C     		add	r3, r7, #3
 1307 000c 1A70     		strb	r2, [r3]
1239:.\Generated_Source\PSoC4/BLUE.c ****         uint8 buf_index = 0u;
 1308              		.loc 1 1239 0
 1309 000e 3B1C     		mov	r3, r7
 1310 0010 0F33     		add	r3, r3, #15
 1311 0012 0022     		mov	r2, #0
 1312 0014 1A70     		strb	r2, [r3]
1240:.\Generated_Source\PSoC4/BLUE.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC4/BLUE.c ****         if(BLUE_initVar != 0u)
 1313              		.loc 1 1241 0
 1314 0016 0F4B     		ldr	r3, .L85
 1315 0018 1B78     		ldrb	r3, [r3]
 1316 001a 002B     		cmp	r3, #0
 1317 001c 16D0     		beq	.L82
 1318              	.L84:
1242:.\Generated_Source\PSoC4/BLUE.c ****         {
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 46


1243:.\Generated_Source\PSoC4/BLUE.c ****             do
1244:.\Generated_Source\PSoC4/BLUE.c ****             {
1245:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_PutChar(string[buf_index]);
 1319              		.loc 1 1245 0 discriminator 1
 1320 001e 3B1C     		mov	r3, r7
 1321 0020 0F33     		add	r3, r3, #15
 1322 0022 1B78     		ldrb	r3, [r3]
 1323 0024 7A68     		ldr	r2, [r7, #4]
 1324 0026 D318     		add	r3, r2, r3
 1325 0028 1B78     		ldrb	r3, [r3]
 1326 002a 181C     		mov	r0, r3
 1327 002c FFF7FEFF 		bl	BLUE_PutChar
1246:.\Generated_Source\PSoC4/BLUE.c ****                 buf_index++;
 1328              		.loc 1 1246 0 discriminator 1
 1329 0030 3B1C     		mov	r3, r7
 1330 0032 0F33     		add	r3, r3, #15
 1331 0034 3A1C     		mov	r2, r7
 1332 0036 0F32     		add	r2, r2, #15
 1333 0038 1278     		ldrb	r2, [r2]
 1334 003a 0132     		add	r2, r2, #1
 1335 003c 1A70     		strb	r2, [r3]
1247:.\Generated_Source\PSoC4/BLUE.c ****             }while(buf_index < byteCount);
 1336              		.loc 1 1247 0 discriminator 1
 1337 003e 3A1C     		mov	r2, r7
 1338 0040 0F32     		add	r2, r2, #15
 1339 0042 FB1C     		add	r3, r7, #3
 1340 0044 1278     		ldrb	r2, [r2]
 1341 0046 1B78     		ldrb	r3, [r3]
 1342 0048 9A42     		cmp	r2, r3
 1343 004a E8D3     		bcc	.L84
 1344              	.L82:
1248:.\Generated_Source\PSoC4/BLUE.c ****         }
1249:.\Generated_Source\PSoC4/BLUE.c ****     }
 1345              		.loc 1 1249 0
 1346 004c BD46     		mov	sp, r7
 1347 004e 04B0     		add	sp, sp, #16
 1348              		@ sp needed for prologue
 1349 0050 80BD     		pop	{r7, pc}
 1350              	.L86:
 1351 0052 C046     		.align	2
 1352              	.L85:
 1353 0054 00000000 		.word	BLUE_initVar
 1354              		.cfi_endproc
 1355              	.LFE23:
 1356              		.size	BLUE_PutArray, .-BLUE_PutArray
 1357              		.section	.text.BLUE_PutCRLF,"ax",%progbits
 1358              		.align	2
 1359              		.global	BLUE_PutCRLF
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	BLUE_PutCRLF, %function
 1363              	BLUE_PutCRLF:
 1364              	.LFB24:
1250:.\Generated_Source\PSoC4/BLUE.c **** 
1251:.\Generated_Source\PSoC4/BLUE.c **** 
1252:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_PutCRLF
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 47


1254:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC4/BLUE.c ****     *
1256:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1257:.\Generated_Source\PSoC4/BLUE.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC4/BLUE.c ****     *
1259:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1260:.\Generated_Source\PSoC4/BLUE.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC4/BLUE.c ****     *
1262:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1263:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1264:.\Generated_Source\PSoC4/BLUE.c ****     *
1265:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
1266:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC4/BLUE.c ****     *     initialized.
1268:.\Generated_Source\PSoC4/BLUE.c ****     *
1269:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
1270:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1271:.\Generated_Source\PSoC4/BLUE.c ****     *
1272:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_PutCRLF(uint8 txDataByte) 
1274:.\Generated_Source\PSoC4/BLUE.c ****     {
 1365              		.loc 1 1274 0
 1366              		.cfi_startproc
 1367 0000 80B5     		push	{r7, lr}
 1368              	.LCFI65:
 1369              		.cfi_def_cfa_offset 8
 1370              		.cfi_offset 7, -8
 1371              		.cfi_offset 14, -4
 1372 0002 82B0     		sub	sp, sp, #8
 1373              	.LCFI66:
 1374              		.cfi_def_cfa_offset 16
 1375 0004 00AF     		add	r7, sp, #0
 1376              	.LCFI67:
 1377              		.cfi_def_cfa_register 7
 1378 0006 021C     		mov	r2, r0
 1379 0008 FB1D     		add	r3, r7, #7
 1380 000a 1A70     		strb	r2, [r3]
1275:.\Generated_Source\PSoC4/BLUE.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC4/BLUE.c ****         if(BLUE_initVar != 0u)
 1381              		.loc 1 1276 0
 1382 000c 084B     		ldr	r3, .L89
 1383 000e 1B78     		ldrb	r3, [r3]
 1384 0010 002B     		cmp	r3, #0
 1385 0012 0AD0     		beq	.L87
1277:.\Generated_Source\PSoC4/BLUE.c ****         {
1278:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_PutChar(txDataByte);
 1386              		.loc 1 1278 0
 1387 0014 FB1D     		add	r3, r7, #7
 1388 0016 1B78     		ldrb	r3, [r3]
 1389 0018 181C     		mov	r0, r3
 1390 001a FFF7FEFF 		bl	BLUE_PutChar
1279:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_PutChar(0x0Du);
 1391              		.loc 1 1279 0
 1392 001e 0D20     		mov	r0, #13
 1393 0020 FFF7FEFF 		bl	BLUE_PutChar
1280:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_PutChar(0x0Au);
 1394              		.loc 1 1280 0
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 48


 1395 0024 0A20     		mov	r0, #10
 1396 0026 FFF7FEFF 		bl	BLUE_PutChar
 1397              	.L87:
1281:.\Generated_Source\PSoC4/BLUE.c ****         }
1282:.\Generated_Source\PSoC4/BLUE.c ****     }
 1398              		.loc 1 1282 0
 1399 002a BD46     		mov	sp, r7
 1400 002c 02B0     		add	sp, sp, #8
 1401              		@ sp needed for prologue
 1402 002e 80BD     		pop	{r7, pc}
 1403              	.L90:
 1404              		.align	2
 1405              	.L89:
 1406 0030 00000000 		.word	BLUE_initVar
 1407              		.cfi_endproc
 1408              	.LFE24:
 1409              		.size	BLUE_PutCRLF, .-BLUE_PutCRLF
 1410              		.section	.text.BLUE_GetTxBufferSize,"ax",%progbits
 1411              		.align	2
 1412              		.global	BLUE_GetTxBufferSize
 1413              		.code	16
 1414              		.thumb_func
 1415              		.type	BLUE_GetTxBufferSize, %function
 1416              	BLUE_GetTxBufferSize:
 1417              	.LFB25:
1283:.\Generated_Source\PSoC4/BLUE.c **** 
1284:.\Generated_Source\PSoC4/BLUE.c **** 
1285:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_GetTxBufferSize
1287:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC4/BLUE.c ****     *
1289:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1290:.\Generated_Source\PSoC4/BLUE.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC4/BLUE.c ****     *  bytes
1292:.\Generated_Source\PSoC4/BLUE.c ****     *
1293:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1294:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1295:.\Generated_Source\PSoC4/BLUE.c ****     *
1296:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1297:.\Generated_Source\PSoC4/BLUE.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC4/BLUE.c ****     *
1299:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
1300:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC4/BLUE.c ****     *
1303:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
1304:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1305:.\Generated_Source\PSoC4/BLUE.c ****     *
1306:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
1307:.\Generated_Source\PSoC4/BLUE.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC4/BLUE.c ****     *
1309:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC4/BLUE.c ****     uint8 BLUE_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC4/BLUE.c ****                                                             
1312:.\Generated_Source\PSoC4/BLUE.c ****     {
 1418              		.loc 1 1312 0
 1419              		.cfi_startproc
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 49


 1420 0000 80B5     		push	{r7, lr}
 1421              	.LCFI68:
 1422              		.cfi_def_cfa_offset 8
 1423              		.cfi_offset 7, -8
 1424              		.cfi_offset 14, -4
 1425 0002 82B0     		sub	sp, sp, #8
 1426              	.LCFI69:
 1427              		.cfi_def_cfa_offset 16
 1428 0004 00AF     		add	r7, sp, #0
 1429              	.LCFI70:
 1430              		.cfi_def_cfa_register 7
1313:.\Generated_Source\PSoC4/BLUE.c ****         uint8 size;
1314:.\Generated_Source\PSoC4/BLUE.c **** 
1315:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH)
1316:.\Generated_Source\PSoC4/BLUE.c **** 
1317:.\Generated_Source\PSoC4/BLUE.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC4/BLUE.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_DisableTxInt();
 1431              		.loc 1 1320 0
 1432 0006 FFF7FEFF 		bl	BLUE_DisableTxInt
1321:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC4/BLUE.c **** 
1323:.\Generated_Source\PSoC4/BLUE.c ****             if(BLUE_txBufferRead == BLUE_txBufferWrite)
 1433              		.loc 1 1323 0
 1434 000a 164B     		ldr	r3, .L96
 1435 000c 1B78     		ldrb	r3, [r3]
 1436 000e DAB2     		uxtb	r2, r3
 1437 0010 154B     		ldr	r3, .L96+4
 1438 0012 1B78     		ldrb	r3, [r3]
 1439 0014 9A42     		cmp	r2, r3
 1440 0016 03D1     		bne	.L92
1324:.\Generated_Source\PSoC4/BLUE.c ****             {
1325:.\Generated_Source\PSoC4/BLUE.c ****                 size = 0u;
 1441              		.loc 1 1325 0
 1442 0018 FB1D     		add	r3, r7, #7
 1443 001a 0022     		mov	r2, #0
 1444 001c 1A70     		strb	r2, [r3]
 1445 001e 19E0     		b	.L93
 1446              	.L92:
1326:.\Generated_Source\PSoC4/BLUE.c ****             }
1327:.\Generated_Source\PSoC4/BLUE.c ****             else if(BLUE_txBufferRead < BLUE_txBufferWrite)
 1447              		.loc 1 1327 0
 1448 0020 104B     		ldr	r3, .L96
 1449 0022 1B78     		ldrb	r3, [r3]
 1450 0024 DAB2     		uxtb	r2, r3
 1451 0026 104B     		ldr	r3, .L96+4
 1452 0028 1B78     		ldrb	r3, [r3]
 1453 002a 9A42     		cmp	r2, r3
 1454 002c 08D2     		bcs	.L94
1328:.\Generated_Source\PSoC4/BLUE.c ****             {
1329:.\Generated_Source\PSoC4/BLUE.c ****                 size = (BLUE_txBufferWrite - BLUE_txBufferRead);
 1455              		.loc 1 1329 0
 1456 002e 0E4B     		ldr	r3, .L96+4
 1457 0030 1978     		ldrb	r1, [r3]
 1458 0032 0C4B     		ldr	r3, .L96
 1459 0034 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 50


 1460 0036 DAB2     		uxtb	r2, r3
 1461 0038 FB1D     		add	r3, r7, #7
 1462 003a 8A1A     		sub	r2, r1, r2
 1463 003c 1A70     		strb	r2, [r3]
 1464 003e 09E0     		b	.L93
 1465              	.L94:
1330:.\Generated_Source\PSoC4/BLUE.c ****             }
1331:.\Generated_Source\PSoC4/BLUE.c ****             else
1332:.\Generated_Source\PSoC4/BLUE.c ****             {
1333:.\Generated_Source\PSoC4/BLUE.c ****                 size = (BLUE_TXBUFFERSIZE - BLUE_txBufferRead) + BLUE_txBufferWrite;
 1466              		.loc 1 1333 0
 1467 0040 094B     		ldr	r3, .L96+4
 1468 0042 1A78     		ldrb	r2, [r3]
 1469 0044 074B     		ldr	r3, .L96
 1470 0046 1B78     		ldrb	r3, [r3]
 1471 0048 DBB2     		uxtb	r3, r3
 1472 004a D31A     		sub	r3, r2, r3
 1473 004c DAB2     		uxtb	r2, r3
 1474 004e FB1D     		add	r3, r7, #7
 1475 0050 3232     		add	r2, r2, #50
 1476 0052 1A70     		strb	r2, [r3]
 1477              	.L93:
1334:.\Generated_Source\PSoC4/BLUE.c ****             }
1335:.\Generated_Source\PSoC4/BLUE.c **** 
1336:.\Generated_Source\PSoC4/BLUE.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_EnableTxInt();
 1478              		.loc 1 1338 0
 1479 0054 FFF7FEFF 		bl	BLUE_EnableTxInt
1339:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC4/BLUE.c **** 
1341:.\Generated_Source\PSoC4/BLUE.c ****         #else /* BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH */
1342:.\Generated_Source\PSoC4/BLUE.c **** 
1343:.\Generated_Source\PSoC4/BLUE.c ****             size = BLUE_TXSTATUS_REG;
1344:.\Generated_Source\PSoC4/BLUE.c **** 
1345:.\Generated_Source\PSoC4/BLUE.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC4/BLUE.c ****             if((size & BLUE_TX_STS_FIFO_FULL) != 0u)
1347:.\Generated_Source\PSoC4/BLUE.c ****             {
1348:.\Generated_Source\PSoC4/BLUE.c ****                 size = BLUE_FIFO_LENGTH;
1349:.\Generated_Source\PSoC4/BLUE.c ****             }
1350:.\Generated_Source\PSoC4/BLUE.c ****             else if((size & BLUE_TX_STS_FIFO_EMPTY) != 0u)
1351:.\Generated_Source\PSoC4/BLUE.c ****             {
1352:.\Generated_Source\PSoC4/BLUE.c ****                 size = 0u;
1353:.\Generated_Source\PSoC4/BLUE.c ****             }
1354:.\Generated_Source\PSoC4/BLUE.c ****             else
1355:.\Generated_Source\PSoC4/BLUE.c ****             {
1356:.\Generated_Source\PSoC4/BLUE.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC4/BLUE.c ****                 size = 1u;
1358:.\Generated_Source\PSoC4/BLUE.c ****             }
1359:.\Generated_Source\PSoC4/BLUE.c **** 
1360:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH */
1361:.\Generated_Source\PSoC4/BLUE.c **** 
1362:.\Generated_Source\PSoC4/BLUE.c ****         return(size);
 1480              		.loc 1 1362 0
 1481 0058 FB1D     		add	r3, r7, #7
 1482 005a 1B78     		ldrb	r3, [r3]
1363:.\Generated_Source\PSoC4/BLUE.c ****     }
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 51


 1483              		.loc 1 1363 0
 1484 005c 181C     		mov	r0, r3
 1485 005e BD46     		mov	sp, r7
 1486 0060 02B0     		add	sp, sp, #8
 1487              		@ sp needed for prologue
 1488 0062 80BD     		pop	{r7, pc}
 1489              	.L97:
 1490              		.align	2
 1491              	.L96:
 1492 0064 00000000 		.word	BLUE_txBufferRead
 1493 0068 00000000 		.word	BLUE_txBufferWrite
 1494              		.cfi_endproc
 1495              	.LFE25:
 1496              		.size	BLUE_GetTxBufferSize, .-BLUE_GetTxBufferSize
 1497              		.section	.text.BLUE_ClearTxBuffer,"ax",%progbits
 1498              		.align	2
 1499              		.global	BLUE_ClearTxBuffer
 1500              		.code	16
 1501              		.thumb_func
 1502              		.type	BLUE_ClearTxBuffer, %function
 1503              	BLUE_ClearTxBuffer:
 1504              	.LFB26:
1364:.\Generated_Source\PSoC4/BLUE.c **** 
1365:.\Generated_Source\PSoC4/BLUE.c **** 
1366:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_ClearTxBuffer
1368:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC4/BLUE.c ****     *
1370:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1371:.\Generated_Source\PSoC4/BLUE.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC4/BLUE.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC4/BLUE.c ****     *
1374:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1375:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1376:.\Generated_Source\PSoC4/BLUE.c ****     *
1377:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1378:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1379:.\Generated_Source\PSoC4/BLUE.c ****     *
1380:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
1381:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC4/BLUE.c ****     *
1384:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
1385:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1386:.\Generated_Source\PSoC4/BLUE.c ****     *
1387:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
1388:.\Generated_Source\PSoC4/BLUE.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC4/BLUE.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC4/BLUE.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC4/BLUE.c ****     *
1392:.\Generated_Source\PSoC4/BLUE.c ****     * Side Effects:
1393:.\Generated_Source\PSoC4/BLUE.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC4/BLUE.c ****     *
1395:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC4/BLUE.c ****     {
 1505              		.loc 1 1397 0
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 52


 1506              		.cfi_startproc
 1507 0000 90B5     		push	{r4, r7, lr}
 1508              	.LCFI71:
 1509              		.cfi_def_cfa_offset 12
 1510              		.cfi_offset 4, -12
 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
 1513 0002 83B0     		sub	sp, sp, #12
 1514              	.LCFI72:
 1515              		.cfi_def_cfa_offset 24
 1516 0004 00AF     		add	r7, sp, #0
 1517              	.LCFI73:
 1518              		.cfi_def_cfa_register 7
1398:.\Generated_Source\PSoC4/BLUE.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC4/BLUE.c **** 
1400:.\Generated_Source\PSoC4/BLUE.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC4/BLUE.c ****         enableInterrupts = CyEnterCriticalSection();
 1519              		.loc 1 1401 0
 1520 0006 FC1D     		add	r4, r7, #7
 1521 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1522 000c 031C     		mov	r3, r0
 1523 000e 2370     		strb	r3, [r4]
1402:.\Generated_Source\PSoC4/BLUE.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_TXDATA_AUX_CTL_REG |=  BLUE_TX_FIFO_CLR;
 1524              		.loc 1 1403 0
 1525 0010 104B     		ldr	r3, .L99
 1526 0012 104A     		ldr	r2, .L99
 1527 0014 1278     		ldrb	r2, [r2]
 1528 0016 D2B2     		uxtb	r2, r2
 1529 0018 0121     		mov	r1, #1
 1530 001a 0A43     		orr	r2, r1
 1531 001c D2B2     		uxtb	r2, r2
 1532 001e 1A70     		strb	r2, [r3]
1404:.\Generated_Source\PSoC4/BLUE.c ****         BLUE_TXDATA_AUX_CTL_REG &= (uint8)~BLUE_TX_FIFO_CLR;
 1533              		.loc 1 1404 0
 1534 0020 0C4B     		ldr	r3, .L99
 1535 0022 0C4A     		ldr	r2, .L99
 1536 0024 1278     		ldrb	r2, [r2]
 1537 0026 D2B2     		uxtb	r2, r2
 1538 0028 0121     		mov	r1, #1
 1539 002a 8A43     		bic	r2, r1
 1540 002c D2B2     		uxtb	r2, r2
 1541 002e 1A70     		strb	r2, [r3]
1405:.\Generated_Source\PSoC4/BLUE.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC4/BLUE.c ****         CyExitCriticalSection(enableInterrupts);
 1542              		.loc 1 1406 0
 1543 0030 FB1D     		add	r3, r7, #7
 1544 0032 1B78     		ldrb	r3, [r3]
 1545 0034 181C     		mov	r0, r3
 1546 0036 FFF7FEFF 		bl	CyExitCriticalSection
1407:.\Generated_Source\PSoC4/BLUE.c **** 
1408:.\Generated_Source\PSoC4/BLUE.c ****         #if(BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH)
1409:.\Generated_Source\PSoC4/BLUE.c **** 
1410:.\Generated_Source\PSoC4/BLUE.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC4/BLUE.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_DisableTxInt();
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 53


 1547              		.loc 1 1413 0
 1548 003a FFF7FEFF 		bl	BLUE_DisableTxInt
1414:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC4/BLUE.c **** 
1416:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_txBufferRead = 0u;
 1549              		.loc 1 1416 0
 1550 003e 064B     		ldr	r3, .L99+4
 1551 0040 0022     		mov	r2, #0
 1552 0042 1A70     		strb	r2, [r3]
1417:.\Generated_Source\PSoC4/BLUE.c ****             BLUE_txBufferWrite = 0u;
 1553              		.loc 1 1417 0
 1554 0044 054B     		ldr	r3, .L99+8
 1555 0046 0022     		mov	r2, #0
 1556 0048 1A70     		strb	r2, [r3]
1418:.\Generated_Source\PSoC4/BLUE.c **** 
1419:.\Generated_Source\PSoC4/BLUE.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_EnableTxInt();
 1557              		.loc 1 1421 0
 1558 004a FFF7FEFF 		bl	BLUE_EnableTxInt
1422:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC4/BLUE.c **** 
1424:.\Generated_Source\PSoC4/BLUE.c ****         #endif /* End BLUE_TXBUFFERSIZE > BLUE_FIFO_LENGTH */
1425:.\Generated_Source\PSoC4/BLUE.c ****     }
 1559              		.loc 1 1425 0
 1560 004e BD46     		mov	sp, r7
 1561 0050 03B0     		add	sp, sp, #12
 1562              		@ sp needed for prologue
 1563 0052 90BD     		pop	{r4, r7, pc}
 1564              	.L100:
 1565              		.align	2
 1566              	.L99:
 1567 0054 92000F40 		.word	1074725010
 1568 0058 00000000 		.word	BLUE_txBufferRead
 1569 005c 00000000 		.word	BLUE_txBufferWrite
 1570              		.cfi_endproc
 1571              	.LFE26:
 1572              		.size	BLUE_ClearTxBuffer, .-BLUE_ClearTxBuffer
 1573              		.section	.text.BLUE_SendBreak,"ax",%progbits
 1574              		.align	2
 1575              		.global	BLUE_SendBreak
 1576              		.code	16
 1577              		.thumb_func
 1578              		.type	BLUE_SendBreak, %function
 1579              	BLUE_SendBreak:
 1580              	.LFB27:
1426:.\Generated_Source\PSoC4/BLUE.c **** 
1427:.\Generated_Source\PSoC4/BLUE.c **** 
1428:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_SendBreak
1430:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC4/BLUE.c ****     *
1432:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1433:.\Generated_Source\PSoC4/BLUE.c ****     *  Write a Break command to the UART
1434:.\Generated_Source\PSoC4/BLUE.c ****     *
1435:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1436:.\Generated_Source\PSoC4/BLUE.c ****     *  uint8 retMode:  Wait mode,
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 54


1437:.\Generated_Source\PSoC4/BLUE.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC4/BLUE.c ****     *       imediately.
1439:.\Generated_Source\PSoC4/BLUE.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC4/BLUE.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC4/BLUE.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC4/BLUE.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC4/BLUE.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC4/BLUE.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC4/BLUE.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC4/BLUE.c ****     *
1447:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1448:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1449:.\Generated_Source\PSoC4/BLUE.c ****     *
1450:.\Generated_Source\PSoC4/BLUE.c ****     * Global Variables:
1451:.\Generated_Source\PSoC4/BLUE.c ****     *  BLUE_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC4/BLUE.c ****     *     initialized.
1453:.\Generated_Source\PSoC4/BLUE.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC4/BLUE.c ****     *
1455:.\Generated_Source\PSoC4/BLUE.c ****     * Reentrant:
1456:.\Generated_Source\PSoC4/BLUE.c ****     *  No.
1457:.\Generated_Source\PSoC4/BLUE.c ****     *
1458:.\Generated_Source\PSoC4/BLUE.c ****     * Theory:
1459:.\Generated_Source\PSoC4/BLUE.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC4/BLUE.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC4/BLUE.c ****     *  operation.
1462:.\Generated_Source\PSoC4/BLUE.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC4/BLUE.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC4/BLUE.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC4/BLUE.c ****     *     complete.
1466:.\Generated_Source\PSoC4/BLUE.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC4/BLUE.c ****     *     operation
1468:.\Generated_Source\PSoC4/BLUE.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC4/BLUE.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC4/BLUE.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC4/BLUE.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC4/BLUE.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC4/BLUE.c ****     *     break operation.
1474:.\Generated_Source\PSoC4/BLUE.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC4/BLUE.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC4/BLUE.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC4/BLUE.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC4/BLUE.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC4/BLUE.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC4/BLUE.c ****     *
1481:.\Generated_Source\PSoC4/BLUE.c ****     * Side Effects:
1482:.\Generated_Source\PSoC4/BLUE.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC4/BLUE.c ****     *
1484:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC4/BLUE.c ****     {
 1581              		.loc 1 1486 0
 1582              		.cfi_startproc
 1583 0000 80B5     		push	{r7, lr}
 1584              	.LCFI74:
 1585              		.cfi_def_cfa_offset 8
 1586              		.cfi_offset 7, -8
 1587              		.cfi_offset 14, -4
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 55


 1588 0002 84B0     		sub	sp, sp, #16
 1589              	.LCFI75:
 1590              		.cfi_def_cfa_offset 24
 1591 0004 00AF     		add	r7, sp, #0
 1592              	.LCFI76:
 1593              		.cfi_def_cfa_register 7
 1594 0006 021C     		mov	r2, r0
 1595 0008 FB1D     		add	r3, r7, #7
 1596 000a 1A70     		strb	r2, [r3]
1487:.\Generated_Source\PSoC4/BLUE.c **** 
1488:.\Generated_Source\PSoC4/BLUE.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC4/BLUE.c ****         if(BLUE_initVar != 0u)
 1597              		.loc 1 1489 0
 1598 000c 254B     		ldr	r3, .L109
 1599 000e 1B78     		ldrb	r3, [r3]
 1600 0010 002B     		cmp	r3, #0
 1601 0012 43D0     		beq	.L101
 1602              	.LBB2:
1490:.\Generated_Source\PSoC4/BLUE.c ****         {
1491:.\Generated_Source\PSoC4/BLUE.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC4/BLUE.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC4/BLUE.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC4/BLUE.c **** 
1495:.\Generated_Source\PSoC4/BLUE.c ****             #if(BLUE_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC4/BLUE.c **** 
1497:.\Generated_Source\PSoC4/BLUE.c ****                 if( (retMode == BLUE_SEND_BREAK) ||
1498:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC4/BLUE.c ****                 {
1500:.\Generated_Source\PSoC4/BLUE.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_WriteControlRegister(BLUE_ReadControlRegister() |
1502:.\Generated_Source\PSoC4/BLUE.c ****                                                           BLUE_CTRL_HD_SEND_BREAK);
1503:.\Generated_Source\PSoC4/BLUE.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC4/BLUE.c **** 
1506:.\Generated_Source\PSoC4/BLUE.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC4/BLUE.c ****                     {
1508:.\Generated_Source\PSoC4/BLUE.c ****                         tmpStat = BLUE_TXSTATUS_REG;
1509:.\Generated_Source\PSoC4/BLUE.c ****                     }while((tmpStat & BLUE_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC4/BLUE.c ****                 }
1511:.\Generated_Source\PSoC4/BLUE.c **** 
1512:.\Generated_Source\PSoC4/BLUE.c ****                 if( (retMode == BLUE_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC4/BLUE.c ****                 {
1515:.\Generated_Source\PSoC4/BLUE.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC4/BLUE.c ****                     {
1517:.\Generated_Source\PSoC4/BLUE.c ****                         tmpStat = BLUE_TXSTATUS_REG;
1518:.\Generated_Source\PSoC4/BLUE.c ****                     }while(((uint8)~tmpStat & BLUE_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC4/BLUE.c ****                 }
1520:.\Generated_Source\PSoC4/BLUE.c **** 
1521:.\Generated_Source\PSoC4/BLUE.c ****                 if( (retMode == BLUE_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_REINIT) ||
1523:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC4/BLUE.c ****                 {
1525:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_WriteControlRegister(BLUE_ReadControlRegister() &
1526:.\Generated_Source\PSoC4/BLUE.c ****                                                   (uint8)~BLUE_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC4/BLUE.c ****                 }
1528:.\Generated_Source\PSoC4/BLUE.c **** 
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 56


1529:.\Generated_Source\PSoC4/BLUE.c ****             #else /* BLUE_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC4/BLUE.c **** 
1531:.\Generated_Source\PSoC4/BLUE.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC4/BLUE.c **** 
1533:.\Generated_Source\PSoC4/BLUE.c ****                 if( (retMode == BLUE_SEND_BREAK) ||
 1603              		.loc 1 1533 0
 1604 0014 FB1D     		add	r3, r7, #7
 1605 0016 1B78     		ldrb	r3, [r3]
 1606 0018 002B     		cmp	r3, #0
 1607 001a 03D0     		beq	.L103
 1608              		.loc 1 1533 0 is_stmt 0 discriminator 1
 1609 001c FB1D     		add	r3, r7, #7
 1610 001e 1B78     		ldrb	r3, [r3]
 1611 0020 032B     		cmp	r3, #3
 1612 0022 15D1     		bne	.L104
 1613              	.L103:
1534:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC4/BLUE.c ****                 {
1536:.\Generated_Source\PSoC4/BLUE.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC4/BLUE.c ****                     #if( (BLUE_PARITY_TYPE != BLUE__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC4/BLUE.c ****                                         (BLUE_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_WriteControlRegister(BLUE_ReadControlRegister() |
1540:.\Generated_Source\PSoC4/BLUE.c ****                                                               BLUE_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End BLUE_PARITY_TYPE != BLUE__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC4/BLUE.c **** 
1543:.\Generated_Source\PSoC4/BLUE.c ****                     #if(BLUE_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC4/BLUE.c ****                         tx_period = BLUE_TXBITCLKTX_COMPLETE_REG;
 1614              		.loc 1 1544 0 is_stmt 1
 1615 0024 204B     		ldr	r3, .L109+4
 1616 0026 1B78     		ldrb	r3, [r3]
 1617 0028 DAB2     		uxtb	r2, r3
 1618 002a 204B     		ldr	r3, .L109+8
 1619 002c 1A70     		strb	r2, [r3]
1545:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_TXBITCLKTX_COMPLETE_REG = BLUE_TXBITCTR_BREAKBITS;
 1620              		.loc 1 1545 0
 1621 002e 1E4B     		ldr	r3, .L109+4
 1622 0030 6722     		mov	r2, #103
 1623 0032 1A70     		strb	r2, [r3]
1546:.\Generated_Source\PSoC4/BLUE.c ****                     #else
1547:.\Generated_Source\PSoC4/BLUE.c ****                         tx_period = BLUE_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_TXBITCTR_PERIOD_REG = BLUE_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End BLUE_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC4/BLUE.c **** 
1551:.\Generated_Source\PSoC4/BLUE.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC4/BLUE.c ****                     BLUE_TXDATA_REG = 0u;
 1624              		.loc 1 1552 0
 1625 0034 1E4B     		ldr	r3, .L109+12
 1626 0036 0022     		mov	r2, #0
 1627 0038 1A70     		strb	r2, [r3]
 1628              	.L105:
1553:.\Generated_Source\PSoC4/BLUE.c **** 
1554:.\Generated_Source\PSoC4/BLUE.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC4/BLUE.c ****                     {
1556:.\Generated_Source\PSoC4/BLUE.c ****                         tmpStat = BLUE_TXSTATUS_REG;
 1629              		.loc 1 1556 0 discriminator 1
 1630 003a 1E4A     		ldr	r2, .L109+16
 1631 003c 3B1C     		mov	r3, r7
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 57


 1632 003e 0F33     		add	r3, r3, #15
 1633 0040 1278     		ldrb	r2, [r2]
 1634 0042 1A70     		strb	r2, [r3]
1557:.\Generated_Source\PSoC4/BLUE.c ****                     }while((tmpStat & BLUE_TX_STS_FIFO_EMPTY) != 0u);
 1635              		.loc 1 1557 0 discriminator 1
 1636 0044 3B1C     		mov	r3, r7
 1637 0046 0F33     		add	r3, r3, #15
 1638 0048 1A78     		ldrb	r2, [r3]
 1639 004a 0223     		mov	r3, #2
 1640 004c 1340     		and	r3, r2
 1641 004e F4D1     		bne	.L105
 1642              	.L104:
1558:.\Generated_Source\PSoC4/BLUE.c ****                 }
1559:.\Generated_Source\PSoC4/BLUE.c **** 
1560:.\Generated_Source\PSoC4/BLUE.c ****                 if( (retMode == BLUE_WAIT_FOR_COMPLETE_REINIT) ||
 1643              		.loc 1 1560 0
 1644 0050 FB1D     		add	r3, r7, #7
 1645 0052 1B78     		ldrb	r3, [r3]
 1646 0054 012B     		cmp	r3, #1
 1647 0056 03D0     		beq	.L106
 1648              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1649 0058 FB1D     		add	r3, r7, #7
 1650 005a 1B78     		ldrb	r3, [r3]
 1651 005c 032B     		cmp	r3, #3
 1652 005e 0DD1     		bne	.L107
 1653              	.L106:
1561:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC4/BLUE.c ****                 {
1563:.\Generated_Source\PSoC4/BLUE.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC4/BLUE.c ****                     {
1565:.\Generated_Source\PSoC4/BLUE.c ****                         tmpStat = BLUE_TXSTATUS_REG;
 1654              		.loc 1 1565 0 is_stmt 1 discriminator 1
 1655 0060 144A     		ldr	r2, .L109+16
 1656 0062 3B1C     		mov	r3, r7
 1657 0064 0F33     		add	r3, r3, #15
 1658 0066 1278     		ldrb	r2, [r2]
 1659 0068 1A70     		strb	r2, [r3]
1566:.\Generated_Source\PSoC4/BLUE.c ****                     }while(((uint8)~tmpStat & BLUE_TX_STS_COMPLETE) != 0u);
 1660              		.loc 1 1566 0 discriminator 1
 1661 006a 3B1C     		mov	r3, r7
 1662 006c 0F33     		add	r3, r3, #15
 1663 006e 1B78     		ldrb	r3, [r3]
 1664 0070 DB43     		mvn	r3, r3
 1665 0072 DBB2     		uxtb	r3, r3
 1666 0074 1A1C     		mov	r2, r3
 1667 0076 0123     		mov	r3, #1
 1668 0078 1340     		and	r3, r2
 1669 007a F1D1     		bne	.L106
 1670              	.L107:
1567:.\Generated_Source\PSoC4/BLUE.c ****                 }
1568:.\Generated_Source\PSoC4/BLUE.c **** 
1569:.\Generated_Source\PSoC4/BLUE.c ****                 if( (retMode == BLUE_WAIT_FOR_COMPLETE_REINIT) ||
 1671              		.loc 1 1569 0
 1672 007c FB1D     		add	r3, r7, #7
 1673 007e 1B78     		ldrb	r3, [r3]
 1674 0080 012B     		cmp	r3, #1
 1675 0082 07D0     		beq	.L108
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 58


 1676              		.loc 1 1569 0 is_stmt 0 discriminator 1
 1677 0084 FB1D     		add	r3, r7, #7
 1678 0086 1B78     		ldrb	r3, [r3]
 1679 0088 022B     		cmp	r3, #2
 1680 008a 03D0     		beq	.L108
1570:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_REINIT) ||
 1681              		.loc 1 1570 0 is_stmt 1
 1682 008c FB1D     		add	r3, r7, #7
 1683 008e 1B78     		ldrb	r3, [r3]
 1684 0090 032B     		cmp	r3, #3
 1685 0092 03D1     		bne	.L101
 1686              	.L108:
1571:.\Generated_Source\PSoC4/BLUE.c ****                     (retMode == BLUE_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC4/BLUE.c ****                 {
1573:.\Generated_Source\PSoC4/BLUE.c **** 
1574:.\Generated_Source\PSoC4/BLUE.c ****                     #if(BLUE_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_TXBITCLKTX_COMPLETE_REG = tx_period;
 1687              		.loc 1 1575 0
 1688 0094 044B     		ldr	r3, .L109+4
 1689 0096 054A     		ldr	r2, .L109+8
 1690 0098 1278     		ldrb	r2, [r2]
 1691 009a 1A70     		strb	r2, [r3]
 1692              	.L101:
 1693              	.LBE2:
1576:.\Generated_Source\PSoC4/BLUE.c ****                     #else
1577:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End BLUE_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC4/BLUE.c **** 
1580:.\Generated_Source\PSoC4/BLUE.c ****                     #if( (BLUE_PARITY_TYPE != BLUE__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC4/BLUE.c ****                          (BLUE_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC4/BLUE.c ****                         BLUE_WriteControlRegister(BLUE_ReadControlRegister() &
1583:.\Generated_Source\PSoC4/BLUE.c ****                                                       (uint8)~BLUE_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC4/BLUE.c ****                     #endif /* End BLUE_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC4/BLUE.c ****                 }
1586:.\Generated_Source\PSoC4/BLUE.c ****             #endif    /* End BLUE_HD_ENABLED */
1587:.\Generated_Source\PSoC4/BLUE.c ****         }
1588:.\Generated_Source\PSoC4/BLUE.c ****     }
 1694              		.loc 1 1588 0
 1695 009c BD46     		mov	sp, r7
 1696 009e 04B0     		add	sp, sp, #16
 1697              		@ sp needed for prologue
 1698 00a0 80BD     		pop	{r7, pc}
 1699              	.L110:
 1700 00a2 C046     		.align	2
 1701              	.L109:
 1702 00a4 00000000 		.word	BLUE_initVar
 1703 00a8 33000F40 		.word	1074724915
 1704 00ac 03000000 		.word	tx_period.4778
 1705 00b0 42000F40 		.word	1074724930
 1706 00b4 62000F40 		.word	1074724962
 1707              		.cfi_endproc
 1708              	.LFE27:
 1709              		.size	BLUE_SendBreak, .-BLUE_SendBreak
 1710              		.section	.text.BLUE_SetTxAddressMode,"ax",%progbits
 1711              		.align	2
 1712              		.global	BLUE_SetTxAddressMode
 1713              		.code	16
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 59


 1714              		.thumb_func
 1715              		.type	BLUE_SetTxAddressMode, %function
 1716              	BLUE_SetTxAddressMode:
 1717              	.LFB28:
1589:.\Generated_Source\PSoC4/BLUE.c **** 
1590:.\Generated_Source\PSoC4/BLUE.c **** 
1591:.\Generated_Source\PSoC4/BLUE.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC4/BLUE.c ****     * Function Name: BLUE_SetTxAddressMode
1593:.\Generated_Source\PSoC4/BLUE.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC4/BLUE.c ****     *
1595:.\Generated_Source\PSoC4/BLUE.c ****     * Summary:
1596:.\Generated_Source\PSoC4/BLUE.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC4/BLUE.c ****     *
1598:.\Generated_Source\PSoC4/BLUE.c ****     * Parameters:
1599:.\Generated_Source\PSoC4/BLUE.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC4/BLUE.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC4/BLUE.c ****     *
1602:.\Generated_Source\PSoC4/BLUE.c ****     * Return:
1603:.\Generated_Source\PSoC4/BLUE.c ****     *  None.
1604:.\Generated_Source\PSoC4/BLUE.c ****     *
1605:.\Generated_Source\PSoC4/BLUE.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC4/BLUE.c ****     void BLUE_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC4/BLUE.c ****     {
 1718              		.loc 1 1607 0
 1719              		.cfi_startproc
 1720 0000 80B5     		push	{r7, lr}
 1721              	.LCFI77:
 1722              		.cfi_def_cfa_offset 8
 1723              		.cfi_offset 7, -8
 1724              		.cfi_offset 14, -4
 1725 0002 82B0     		sub	sp, sp, #8
 1726              	.LCFI78:
 1727              		.cfi_def_cfa_offset 16
 1728 0004 00AF     		add	r7, sp, #0
 1729              	.LCFI79:
 1730              		.cfi_def_cfa_register 7
 1731 0006 021C     		mov	r2, r0
 1732 0008 FB1D     		add	r3, r7, #7
 1733 000a 1A70     		strb	r2, [r3]
1608:.\Generated_Source\PSoC4/BLUE.c ****         /* Mark/Space sending enable*/
1609:.\Generated_Source\PSoC4/BLUE.c ****         if(addressMode != 0u)
1610:.\Generated_Source\PSoC4/BLUE.c ****         {
1611:.\Generated_Source\PSoC4/BLUE.c ****             #if( BLUE_CONTROL_REG_REMOVED == 0u )
1612:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_WriteControlRegister(BLUE_ReadControlRegister() |
1613:.\Generated_Source\PSoC4/BLUE.c ****                                                       BLUE_CTRL_MARK);
1614:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_CONTROL_REG_REMOVED == 0u */
1615:.\Generated_Source\PSoC4/BLUE.c ****         }
1616:.\Generated_Source\PSoC4/BLUE.c ****         else
1617:.\Generated_Source\PSoC4/BLUE.c ****         {
1618:.\Generated_Source\PSoC4/BLUE.c ****             #if( BLUE_CONTROL_REG_REMOVED == 0u )
1619:.\Generated_Source\PSoC4/BLUE.c ****                 BLUE_WriteControlRegister(BLUE_ReadControlRegister() &
1620:.\Generated_Source\PSoC4/BLUE.c ****                                                     (uint8)~BLUE_CTRL_MARK);
1621:.\Generated_Source\PSoC4/BLUE.c ****             #endif /* End BLUE_CONTROL_REG_REMOVED == 0u */
1622:.\Generated_Source\PSoC4/BLUE.c ****         }
1623:.\Generated_Source\PSoC4/BLUE.c ****     }
 1734              		.loc 1 1623 0
 1735 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 60


 1736 000e 02B0     		add	sp, sp, #8
 1737              		@ sp needed for prologue
 1738 0010 80BD     		pop	{r7, pc}
 1739              		.cfi_endproc
 1740              	.LFE28:
 1741              		.size	BLUE_SetTxAddressMode, .-BLUE_SetTxAddressMode
 1742 0012 C046     		.bss
 1743              	tx_period.4778:
 1744 0003 00       		.space	1
 1745              		.text
 1746              	.Letext0:
 1747              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1748              		.section	.debug_info,"",%progbits
 1749              	.Ldebug_info0:
 1750 0000 1E060000 		.4byte	0x61e
 1751 0004 0200     		.2byte	0x2
 1752 0006 00000000 		.4byte	.Ldebug_abbrev0
 1753 000a 04       		.byte	0x4
 1754 000b 01       		.uleb128 0x1
 1755 000c 82020000 		.4byte	.LASF68
 1756 0010 01       		.byte	0x1
 1757 0011 04020000 		.4byte	.LASF69
 1758 0015 4B020000 		.4byte	.LASF70
 1759 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1760 001d 00000000 		.4byte	0
 1761 0021 00000000 		.4byte	0
 1762 0025 00000000 		.4byte	.Ldebug_line0
 1763 0029 02       		.uleb128 0x2
 1764 002a 01       		.byte	0x1
 1765 002b 06       		.byte	0x6
 1766 002c 6F000000 		.4byte	.LASF0
 1767 0030 02       		.uleb128 0x2
 1768 0031 01       		.byte	0x1
 1769 0032 08       		.byte	0x8
 1770 0033 D0020000 		.4byte	.LASF1
 1771 0037 02       		.uleb128 0x2
 1772 0038 02       		.byte	0x2
 1773 0039 05       		.byte	0x5
 1774 003a DE020000 		.4byte	.LASF2
 1775 003e 02       		.uleb128 0x2
 1776 003f 02       		.byte	0x2
 1777 0040 07       		.byte	0x7
 1778 0041 51010000 		.4byte	.LASF3
 1779 0045 02       		.uleb128 0x2
 1780 0046 04       		.byte	0x4
 1781 0047 05       		.byte	0x5
 1782 0048 A4000000 		.4byte	.LASF4
 1783 004c 02       		.uleb128 0x2
 1784 004d 04       		.byte	0x4
 1785 004e 07       		.byte	0x7
 1786 004f 29010000 		.4byte	.LASF5
 1787 0053 02       		.uleb128 0x2
 1788 0054 08       		.byte	0x8
 1789 0055 05       		.byte	0x5
 1790 0056 61000000 		.4byte	.LASF6
 1791 005a 02       		.uleb128 0x2
 1792 005b 08       		.byte	0x8
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 61


 1793 005c 07       		.byte	0x7
 1794 005d 4A000000 		.4byte	.LASF7
 1795 0061 03       		.uleb128 0x3
 1796 0062 04       		.byte	0x4
 1797 0063 05       		.byte	0x5
 1798 0064 696E7400 		.ascii	"int\000"
 1799 0068 02       		.uleb128 0x2
 1800 0069 04       		.byte	0x4
 1801 006a 07       		.byte	0x7
 1802 006b 11010000 		.4byte	.LASF8
 1803 006f 04       		.uleb128 0x4
 1804 0070 BA000000 		.4byte	.LASF9
 1805 0074 02       		.byte	0x2
 1806 0075 5B       		.byte	0x5b
 1807 0076 30000000 		.4byte	0x30
 1808 007a 04       		.uleb128 0x4
 1809 007b 00000000 		.4byte	.LASF10
 1810 007f 02       		.byte	0x2
 1811 0080 5C       		.byte	0x5c
 1812 0081 3E000000 		.4byte	0x3e
 1813 0085 02       		.uleb128 0x2
 1814 0086 04       		.byte	0x4
 1815 0087 04       		.byte	0x4
 1816 0088 FE010000 		.4byte	.LASF11
 1817 008c 02       		.uleb128 0x2
 1818 008d 08       		.byte	0x8
 1819 008e 04       		.byte	0x4
 1820 008f C0000000 		.4byte	.LASF12
 1821 0093 04       		.uleb128 0x4
 1822 0094 77030000 		.4byte	.LASF13
 1823 0098 02       		.byte	0x2
 1824 0099 6C       		.byte	0x6c
 1825 009a 9E000000 		.4byte	0x9e
 1826 009e 02       		.uleb128 0x2
 1827 009f 01       		.byte	0x1
 1828 00a0 08       		.byte	0x8
 1829 00a1 64030000 		.4byte	.LASF14
 1830 00a5 04       		.uleb128 0x4
 1831 00a6 CB020000 		.4byte	.LASF15
 1832 00aa 02       		.byte	0x2
 1833 00ab F0       		.byte	0xf0
 1834 00ac B0000000 		.4byte	0xb0
 1835 00b0 05       		.uleb128 0x5
 1836 00b1 6F000000 		.4byte	0x6f
 1837 00b5 02       		.uleb128 0x2
 1838 00b6 04       		.byte	0x4
 1839 00b7 07       		.byte	0x7
 1840 00b8 B6010000 		.4byte	.LASF16
 1841 00bc 06       		.uleb128 0x6
 1842 00bd 01       		.byte	0x1
 1843 00be 1E010000 		.4byte	.LASF17
 1844 00c2 01       		.byte	0x1
 1845 00c3 49       		.byte	0x49
 1846 00c4 01       		.byte	0x1
 1847 00c5 00000000 		.4byte	.LFB0
 1848 00c9 24000000 		.4byte	.LFE0
 1849 00cd 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 62


 1850 00d1 01       		.byte	0x1
 1851 00d2 06       		.uleb128 0x6
 1852 00d3 01       		.byte	0x1
 1853 00d4 E9030000 		.4byte	.LASF18
 1854 00d8 01       		.byte	0x1
 1855 00d9 65       		.byte	0x65
 1856 00da 01       		.byte	0x1
 1857 00db 00000000 		.4byte	.LFB1
 1858 00df 50000000 		.4byte	.LFE1
 1859 00e3 2C000000 		.4byte	.LLST1
 1860 00e7 01       		.byte	0x1
 1861 00e8 07       		.uleb128 0x7
 1862 00e9 01       		.byte	0x1
 1863 00ea E9010000 		.4byte	.LASF19
 1864 00ee 01       		.byte	0x1
 1865 00ef AE       		.byte	0xae
 1866 00f0 01       		.byte	0x1
 1867 00f1 00000000 		.4byte	.LFB2
 1868 00f5 68000000 		.4byte	.LFE2
 1869 00f9 58000000 		.4byte	.LLST2
 1870 00fd 01       		.byte	0x1
 1871 00fe 11010000 		.4byte	0x111
 1872 0102 08       		.uleb128 0x8
 1873 0103 BE030000 		.4byte	.LASF21
 1874 0107 01       		.byte	0x1
 1875 0108 B0       		.byte	0xb0
 1876 0109 6F000000 		.4byte	0x6f
 1877 010d 02       		.byte	0x2
 1878 010e 91       		.byte	0x91
 1879 010f 6F       		.sleb128 -17
 1880 0110 00       		.byte	0
 1881 0111 07       		.uleb128 0x7
 1882 0112 01       		.byte	0x1
 1883 0113 33000000 		.4byte	.LASF20
 1884 0117 01       		.byte	0x1
 1885 0118 E3       		.byte	0xe3
 1886 0119 01       		.byte	0x1
 1887 011a 00000000 		.4byte	.LFB3
 1888 011e 64000000 		.4byte	.LFE3
 1889 0122 90000000 		.4byte	.LLST3
 1890 0126 01       		.byte	0x1
 1891 0127 3A010000 		.4byte	0x13a
 1892 012b 08       		.uleb128 0x8
 1893 012c BE030000 		.4byte	.LASF21
 1894 0130 01       		.byte	0x1
 1895 0131 E5       		.byte	0xe5
 1896 0132 6F000000 		.4byte	0x6f
 1897 0136 02       		.byte	0x2
 1898 0137 91       		.byte	0x91
 1899 0138 6F       		.sleb128 -17
 1900 0139 00       		.byte	0
 1901 013a 09       		.uleb128 0x9
 1902 013b 01       		.byte	0x1
 1903 013c 0E030000 		.4byte	.LASF32
 1904 0140 01       		.byte	0x1
 1905 0141 1901     		.2byte	0x119
 1906 0143 01       		.byte	0x1
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 63


 1907 0144 6F000000 		.4byte	0x6f
 1908 0148 00000000 		.4byte	.LFB4
 1909 014c 0C000000 		.4byte	.LFE4
 1910 0150 C8000000 		.4byte	.LLST4
 1911 0154 01       		.byte	0x1
 1912 0155 0A       		.uleb128 0xa
 1913 0156 01       		.byte	0x1
 1914 0157 19000000 		.4byte	.LASF22
 1915 015b 01       		.byte	0x1
 1916 015c 3101     		.2byte	0x131
 1917 015e 01       		.byte	0x1
 1918 015f 00000000 		.4byte	.LFB5
 1919 0163 12000000 		.4byte	.LFE5
 1920 0167 F4000000 		.4byte	.LLST5
 1921 016b 01       		.byte	0x1
 1922 016c 80010000 		.4byte	0x180
 1923 0170 0B       		.uleb128 0xb
 1924 0171 E9000000 		.4byte	.LASF24
 1925 0175 01       		.byte	0x1
 1926 0176 3101     		.2byte	0x131
 1927 0178 6F000000 		.4byte	0x6f
 1928 017c 02       		.byte	0x2
 1929 017d 91       		.byte	0x91
 1930 017e 77       		.sleb128 -9
 1931 017f 00       		.byte	0
 1932 0180 0A       		.uleb128 0xa
 1933 0181 01       		.byte	0x1
 1934 0182 F1000000 		.4byte	.LASF23
 1935 0186 01       		.byte	0x1
 1936 0187 8101     		.2byte	0x181
 1937 0189 01       		.byte	0x1
 1938 018a 00000000 		.4byte	.LFB6
 1939 018e 20000000 		.4byte	.LFE6
 1940 0192 2C010000 		.4byte	.LLST6
 1941 0196 01       		.byte	0x1
 1942 0197 AB010000 		.4byte	0x1ab
 1943 019b 0B       		.uleb128 0xb
 1944 019c 76010000 		.4byte	.LASF25
 1945 01a0 01       		.byte	0x1
 1946 01a1 8101     		.2byte	0x181
 1947 01a3 6F000000 		.4byte	0x6f
 1948 01a7 02       		.byte	0x2
 1949 01a8 91       		.byte	0x91
 1950 01a9 77       		.sleb128 -9
 1951 01aa 00       		.byte	0
 1952 01ab 0C       		.uleb128 0xc
 1953 01ac 01       		.byte	0x1
 1954 01ad D9010000 		.4byte	.LASF27
 1955 01b1 01       		.byte	0x1
 1956 01b2 A201     		.2byte	0x1a2
 1957 01b4 01       		.byte	0x1
 1958 01b5 6F000000 		.4byte	0x6f
 1959 01b9 00000000 		.4byte	.LFB7
 1960 01bd 20000000 		.4byte	.LFE7
 1961 01c1 64010000 		.4byte	.LLST7
 1962 01c5 01       		.byte	0x1
 1963 01c6 DA010000 		.4byte	0x1da
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 64


 1964 01ca 0D       		.uleb128 0xd
 1965 01cb 50030000 		.4byte	.LASF26
 1966 01cf 01       		.byte	0x1
 1967 01d0 A401     		.2byte	0x1a4
 1968 01d2 6F000000 		.4byte	0x6f
 1969 01d6 02       		.byte	0x2
 1970 01d7 91       		.byte	0x91
 1971 01d8 77       		.sleb128 -9
 1972 01d9 00       		.byte	0
 1973 01da 0C       		.uleb128 0xc
 1974 01db 01       		.byte	0x1
 1975 01dc 64010000 		.4byte	.LASF28
 1976 01e0 01       		.byte	0x1
 1977 01e1 FD01     		.2byte	0x1fd
 1978 01e3 01       		.byte	0x1
 1979 01e4 6F000000 		.4byte	0x6f
 1980 01e8 00000000 		.4byte	.LFB8
 1981 01ec 24000000 		.4byte	.LFE8
 1982 01f0 9C010000 		.4byte	.LLST8
 1983 01f4 01       		.byte	0x1
 1984 01f5 09020000 		.4byte	0x209
 1985 01f9 0D       		.uleb128 0xd
 1986 01fa CF030000 		.4byte	.LASF29
 1987 01fe 01       		.byte	0x1
 1988 01ff FF01     		.2byte	0x1ff
 1989 0201 6F000000 		.4byte	0x6f
 1990 0205 02       		.byte	0x2
 1991 0206 91       		.byte	0x91
 1992 0207 77       		.sleb128 -9
 1993 0208 00       		.byte	0
 1994 0209 0C       		.uleb128 0xc
 1995 020a 01       		.byte	0x1
 1996 020b 0E040000 		.4byte	.LASF30
 1997 020f 01       		.byte	0x1
 1998 0210 2C02     		.2byte	0x22c
 1999 0212 01       		.byte	0x1
 2000 0213 6F000000 		.4byte	0x6f
 2001 0217 00000000 		.4byte	.LFB9
 2002 021b 4C000000 		.4byte	.LFE9
 2003 021f D4010000 		.4byte	.LLST9
 2004 0223 01       		.byte	0x1
 2005 0224 47020000 		.4byte	0x247
 2006 0228 0D       		.uleb128 0xd
 2007 0229 50030000 		.4byte	.LASF26
 2008 022d 01       		.byte	0x1
 2009 022e 2E02     		.2byte	0x22e
 2010 0230 6F000000 		.4byte	0x6f
 2011 0234 02       		.byte	0x2
 2012 0235 91       		.byte	0x91
 2013 0236 77       		.sleb128 -9
 2014 0237 0D       		.uleb128 0xd
 2015 0238 F5010000 		.4byte	.LASF31
 2016 023c 01       		.byte	0x1
 2017 023d 2F02     		.2byte	0x22f
 2018 023f 6F000000 		.4byte	0x6f
 2019 0243 02       		.byte	0x2
 2020 0244 91       		.byte	0x91
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 65


 2021 0245 76       		.sleb128 -10
 2022 0246 00       		.byte	0
 2023 0247 0E       		.uleb128 0xe
 2024 0248 01       		.byte	0x1
 2025 0249 A9010000 		.4byte	.LASF33
 2026 024d 01       		.byte	0x1
 2027 024e 9202     		.2byte	0x292
 2028 0250 01       		.byte	0x1
 2029 0251 7A000000 		.4byte	0x7a
 2030 0255 00000000 		.4byte	.LFB10
 2031 0259 22000000 		.4byte	.LFE10
 2032 025d 0C020000 		.4byte	.LLST10
 2033 0261 01       		.byte	0x1
 2034 0262 0C       		.uleb128 0xc
 2035 0263 01       		.byte	0x1
 2036 0264 1B040000 		.4byte	.LASF34
 2037 0268 01       		.byte	0x1
 2038 0269 B302     		.2byte	0x2b3
 2039 026b 01       		.byte	0x1
 2040 026c 6F000000 		.4byte	0x6f
 2041 0270 00000000 		.4byte	.LFB11
 2042 0274 30000000 		.4byte	.LFE11
 2043 0278 38020000 		.4byte	.LLST11
 2044 027c 01       		.byte	0x1
 2045 027d 91020000 		.4byte	0x291
 2046 0281 0D       		.uleb128 0xd
 2047 0282 4C010000 		.4byte	.LASF35
 2048 0286 01       		.byte	0x1
 2049 0287 B602     		.2byte	0x2b6
 2050 0289 6F000000 		.4byte	0x6f
 2051 028d 02       		.byte	0x2
 2052 028e 91       		.byte	0x91
 2053 028f 77       		.sleb128 -9
 2054 0290 00       		.byte	0
 2055 0291 0F       		.uleb128 0xf
 2056 0292 01       		.byte	0x1
 2057 0293 8E010000 		.4byte	.LASF36
 2058 0297 01       		.byte	0x1
 2059 0298 0303     		.2byte	0x303
 2060 029a 01       		.byte	0x1
 2061 029b 00000000 		.4byte	.LFB12
 2062 029f 44000000 		.4byte	.LFE12
 2063 02a3 70020000 		.4byte	.LLST12
 2064 02a7 01       		.byte	0x1
 2065 02a8 BC020000 		.4byte	0x2bc
 2066 02ac 0D       		.uleb128 0xd
 2067 02ad BE030000 		.4byte	.LASF21
 2068 02b1 01       		.byte	0x1
 2069 02b2 0503     		.2byte	0x305
 2070 02b4 6F000000 		.4byte	0x6f
 2071 02b8 02       		.byte	0x2
 2072 02b9 91       		.byte	0x91
 2073 02ba 6F       		.sleb128 -17
 2074 02bb 00       		.byte	0
 2075 02bc 0A       		.uleb128 0xa
 2076 02bd 01       		.byte	0x1
 2077 02be D3000000 		.4byte	.LASF37
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 66


 2078 02c2 01       		.byte	0x1
 2079 02c3 4003     		.2byte	0x340
 2080 02c5 01       		.byte	0x1
 2081 02c6 00000000 		.4byte	.LFB13
 2082 02ca 12000000 		.4byte	.LFE13
 2083 02ce A8020000 		.4byte	.LLST13
 2084 02d2 01       		.byte	0x1
 2085 02d3 E7020000 		.4byte	0x2e7
 2086 02d7 0B       		.uleb128 0xb
 2087 02d8 C7000000 		.4byte	.LASF38
 2088 02dc 01       		.byte	0x1
 2089 02dd 4003     		.2byte	0x340
 2090 02df 6F000000 		.4byte	0x6f
 2091 02e3 02       		.byte	0x2
 2092 02e4 91       		.byte	0x91
 2093 02e5 77       		.sleb128 -9
 2094 02e6 00       		.byte	0
 2095 02e7 0A       		.uleb128 0xa
 2096 02e8 01       		.byte	0x1
 2097 02e9 E8020000 		.4byte	.LASF39
 2098 02ed 01       		.byte	0x1
 2099 02ee 6503     		.2byte	0x365
 2100 02f0 01       		.byte	0x1
 2101 02f1 00000000 		.4byte	.LFB14
 2102 02f5 20000000 		.4byte	.LFE14
 2103 02f9 E0020000 		.4byte	.LLST14
 2104 02fd 01       		.byte	0x1
 2105 02fe 12030000 		.4byte	0x312
 2106 0302 0B       		.uleb128 0xb
 2107 0303 D1010000 		.4byte	.LASF40
 2108 0307 01       		.byte	0x1
 2109 0308 6503     		.2byte	0x365
 2110 030a 6F000000 		.4byte	0x6f
 2111 030e 02       		.byte	0x2
 2112 030f 91       		.byte	0x91
 2113 0310 77       		.sleb128 -9
 2114 0311 00       		.byte	0
 2115 0312 0A       		.uleb128 0xa
 2116 0313 01       		.byte	0x1
 2117 0314 FB020000 		.4byte	.LASF41
 2118 0318 01       		.byte	0x1
 2119 0319 7A03     		.2byte	0x37a
 2120 031b 01       		.byte	0x1
 2121 031c 00000000 		.4byte	.LFB15
 2122 0320 20000000 		.4byte	.LFE15
 2123 0324 18030000 		.4byte	.LLST15
 2124 0328 01       		.byte	0x1
 2125 0329 3D030000 		.4byte	0x33d
 2126 032d 0B       		.uleb128 0xb
 2127 032e D1010000 		.4byte	.LASF40
 2128 0332 01       		.byte	0x1
 2129 0333 7A03     		.2byte	0x37a
 2130 0335 6F000000 		.4byte	0x6f
 2131 0339 02       		.byte	0x2
 2132 033a 91       		.byte	0x91
 2133 033b 77       		.sleb128 -9
 2134 033c 00       		.byte	0
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 67


 2135 033d 10       		.uleb128 0x10
 2136 033e 01       		.byte	0x1
 2137 033f 7D010000 		.4byte	.LASF42
 2138 0343 01       		.byte	0x1
 2139 0344 9703     		.2byte	0x397
 2140 0346 01       		.byte	0x1
 2141 0347 00000000 		.4byte	.LFB16
 2142 034b 0E000000 		.4byte	.LFE16
 2143 034f 50030000 		.4byte	.LLST16
 2144 0353 01       		.byte	0x1
 2145 0354 10       		.uleb128 0x10
 2146 0355 01       		.byte	0x1
 2147 0356 8F030000 		.4byte	.LASF43
 2148 035a 01       		.byte	0x1
 2149 035b AE03     		.2byte	0x3ae
 2150 035d 01       		.byte	0x1
 2151 035e 00000000 		.4byte	.LFB17
 2152 0362 0E000000 		.4byte	.LFE17
 2153 0366 7C030000 		.4byte	.LLST17
 2154 036a 01       		.byte	0x1
 2155 036b 0A       		.uleb128 0xa
 2156 036c 01       		.byte	0x1
 2157 036d 33020000 		.4byte	.LASF44
 2158 0371 01       		.byte	0x1
 2159 0372 C803     		.2byte	0x3c8
 2160 0374 01       		.byte	0x1
 2161 0375 00000000 		.4byte	.LFB18
 2162 0379 20000000 		.4byte	.LFE18
 2163 037d A8030000 		.4byte	.LLST18
 2164 0381 01       		.byte	0x1
 2165 0382 96030000 		.4byte	0x396
 2166 0386 0B       		.uleb128 0xb
 2167 0387 76010000 		.4byte	.LASF25
 2168 038b 01       		.byte	0x1
 2169 038c C803     		.2byte	0x3c8
 2170 038e 6F000000 		.4byte	0x6f
 2171 0392 02       		.byte	0x2
 2172 0393 91       		.byte	0x91
 2173 0394 77       		.sleb128 -9
 2174 0395 00       		.byte	0
 2175 0396 0F       		.uleb128 0xf
 2176 0397 01       		.byte	0x1
 2177 0398 FD030000 		.4byte	.LASF45
 2178 039c 01       		.byte	0x1
 2179 039d EA03     		.2byte	0x3ea
 2180 039f 01       		.byte	0x1
 2181 03a0 00000000 		.4byte	.LFB19
 2182 03a4 88000000 		.4byte	.LFE19
 2183 03a8 E0030000 		.4byte	.LLST19
 2184 03ac 01       		.byte	0x1
 2185 03ad C1030000 		.4byte	0x3c1
 2186 03b1 0B       		.uleb128 0xb
 2187 03b2 07000000 		.4byte	.LASF46
 2188 03b6 01       		.byte	0x1
 2189 03b7 EA03     		.2byte	0x3ea
 2190 03b9 6F000000 		.4byte	0x6f
 2191 03bd 02       		.byte	0x2
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 68


 2192 03be 91       		.byte	0x91
 2193 03bf 77       		.sleb128 -9
 2194 03c0 00       		.byte	0
 2195 03c1 09       		.uleb128 0x9
 2196 03c2 01       		.byte	0x1
 2197 03c3 7D030000 		.4byte	.LASF47
 2198 03c7 01       		.byte	0x1
 2199 03c8 2E04     		.2byte	0x42e
 2200 03ca 01       		.byte	0x1
 2201 03cb 6F000000 		.4byte	0x6f
 2202 03cf 00000000 		.4byte	.LFB20
 2203 03d3 14000000 		.4byte	.LFE20
 2204 03d7 18040000 		.4byte	.LLST20
 2205 03db 01       		.byte	0x1
 2206 03dc 0A       		.uleb128 0xa
 2207 03dd 01       		.byte	0x1
 2208 03de 3D000000 		.4byte	.LASF48
 2209 03e2 01       		.byte	0x1
 2210 03e3 5204     		.2byte	0x452
 2211 03e5 01       		.byte	0x1
 2212 03e6 00000000 		.4byte	.LFB21
 2213 03ea DC000000 		.4byte	.LFE21
 2214 03ee 44040000 		.4byte	.LLST21
 2215 03f2 01       		.byte	0x1
 2216 03f3 25040000 		.4byte	0x425
 2217 03f7 0B       		.uleb128 0xb
 2218 03f8 07000000 		.4byte	.LASF46
 2219 03fc 01       		.byte	0x1
 2220 03fd 5204     		.2byte	0x452
 2221 03ff 6F000000 		.4byte	0x6f
 2222 0403 02       		.byte	0x2
 2223 0404 91       		.byte	0x91
 2224 0405 6F       		.sleb128 -17
 2225 0406 0D       		.uleb128 0xd
 2226 0407 BF010000 		.4byte	.LASF49
 2227 040b 01       		.byte	0x1
 2228 040c 5904     		.2byte	0x459
 2229 040e 6F000000 		.4byte	0x6f
 2230 0412 02       		.byte	0x2
 2231 0413 91       		.byte	0x91
 2232 0414 77       		.sleb128 -9
 2233 0415 0D       		.uleb128 0xd
 2234 0416 3B010000 		.4byte	.LASF50
 2235 041a 01       		.byte	0x1
 2236 041b 5A04     		.2byte	0x45a
 2237 041d 6F000000 		.4byte	0x6f
 2238 0421 02       		.byte	0x2
 2239 0422 91       		.byte	0x91
 2240 0423 76       		.sleb128 -10
 2241 0424 00       		.byte	0
 2242 0425 0F       		.uleb128 0xf
 2243 0426 01       		.byte	0x1
 2244 0427 A1030000 		.4byte	.LASF51
 2245 042b 01       		.byte	0x1
 2246 042c AE04     		.2byte	0x4ae
 2247 042e 01       		.byte	0x1
 2248 042f 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 69


 2249 0433 54000000 		.4byte	.LFE22
 2250 0437 7C040000 		.4byte	.LLST22
 2251 043b 01       		.byte	0x1
 2252 043c 5F040000 		.4byte	0x45f
 2253 0440 0B       		.uleb128 0xb
 2254 0441 12000000 		.4byte	.LASF52
 2255 0445 01       		.byte	0x1
 2256 0446 AE04     		.2byte	0x4ae
 2257 0448 5F040000 		.4byte	0x45f
 2258 044c 02       		.byte	0x2
 2259 044d 91       		.byte	0x91
 2260 044e 6C       		.sleb128 -20
 2261 044f 0D       		.uleb128 0xd
 2262 0450 F3030000 		.4byte	.LASF53
 2263 0454 01       		.byte	0x1
 2264 0455 B004     		.2byte	0x4b0
 2265 0457 7A000000 		.4byte	0x7a
 2266 045b 02       		.byte	0x2
 2267 045c 91       		.byte	0x91
 2268 045d 76       		.sleb128 -10
 2269 045e 00       		.byte	0
 2270 045f 11       		.uleb128 0x11
 2271 0460 04       		.byte	0x4
 2272 0461 65040000 		.4byte	0x465
 2273 0465 12       		.uleb128 0x12
 2274 0466 93000000 		.4byte	0x93
 2275 046a 0F       		.uleb128 0xf
 2276 046b 01       		.byte	0x1
 2277 046c B0030000 		.4byte	.LASF54
 2278 0470 01       		.byte	0x1
 2279 0471 D404     		.2byte	0x4d4
 2280 0473 01       		.byte	0x1
 2281 0474 00000000 		.4byte	.LFB23
 2282 0478 58000000 		.4byte	.LFE23
 2283 047c B4040000 		.4byte	.LLST23
 2284 0480 01       		.byte	0x1
 2285 0481 B3040000 		.4byte	0x4b3
 2286 0485 0B       		.uleb128 0xb
 2287 0486 12000000 		.4byte	.LASF52
 2288 048a 01       		.byte	0x1
 2289 048b D404     		.2byte	0x4d4
 2290 048d B3040000 		.4byte	0x4b3
 2291 0491 02       		.byte	0x2
 2292 0492 91       		.byte	0x91
 2293 0493 6C       		.sleb128 -20
 2294 0494 0B       		.uleb128 0xb
 2295 0495 31030000 		.4byte	.LASF55
 2296 0499 01       		.byte	0x1
 2297 049a D404     		.2byte	0x4d4
 2298 049c 6F000000 		.4byte	0x6f
 2299 04a0 02       		.byte	0x2
 2300 04a1 91       		.byte	0x91
 2301 04a2 6B       		.sleb128 -21
 2302 04a3 0D       		.uleb128 0xd
 2303 04a4 F3030000 		.4byte	.LASF53
 2304 04a8 01       		.byte	0x1
 2305 04a9 D704     		.2byte	0x4d7
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 70


 2306 04ab 6F000000 		.4byte	0x6f
 2307 04af 02       		.byte	0x2
 2308 04b0 91       		.byte	0x91
 2309 04b1 77       		.sleb128 -9
 2310 04b2 00       		.byte	0
 2311 04b3 11       		.uleb128 0x11
 2312 04b4 04       		.byte	0x4
 2313 04b5 B9040000 		.4byte	0x4b9
 2314 04b9 12       		.uleb128 0x12
 2315 04ba 6F000000 		.4byte	0x6f
 2316 04be 0F       		.uleb128 0xf
 2317 04bf 01       		.byte	0x1
 2318 04c0 AD000000 		.4byte	.LASF56
 2319 04c4 01       		.byte	0x1
 2320 04c5 F904     		.2byte	0x4f9
 2321 04c7 01       		.byte	0x1
 2322 04c8 00000000 		.4byte	.LFB24
 2323 04cc 34000000 		.4byte	.LFE24
 2324 04d0 EC040000 		.4byte	.LLST24
 2325 04d4 01       		.byte	0x1
 2326 04d5 E9040000 		.4byte	0x4e9
 2327 04d9 0B       		.uleb128 0xb
 2328 04da 07000000 		.4byte	.LASF46
 2329 04de 01       		.byte	0x1
 2330 04df F904     		.2byte	0x4f9
 2331 04e1 6F000000 		.4byte	0x6f
 2332 04e5 02       		.byte	0x2
 2333 04e6 91       		.byte	0x91
 2334 04e7 77       		.sleb128 -9
 2335 04e8 00       		.byte	0
 2336 04e9 13       		.uleb128 0x13
 2337 04ea 01       		.byte	0x1
 2338 04eb 3B030000 		.4byte	.LASF57
 2339 04ef 01       		.byte	0x1
 2340 04f0 1E05     		.2byte	0x51e
 2341 04f2 01       		.byte	0x1
 2342 04f3 6F000000 		.4byte	0x6f
 2343 04f7 00000000 		.4byte	.LFB25
 2344 04fb 6C000000 		.4byte	.LFE25
 2345 04ff 24050000 		.4byte	.LLST25
 2346 0503 01       		.byte	0x1
 2347 0504 18050000 		.4byte	0x518
 2348 0508 0D       		.uleb128 0xd
 2349 0509 4C010000 		.4byte	.LASF35
 2350 050d 01       		.byte	0x1
 2351 050e 2105     		.2byte	0x521
 2352 0510 6F000000 		.4byte	0x6f
 2353 0514 02       		.byte	0x2
 2354 0515 91       		.byte	0x91
 2355 0516 77       		.sleb128 -9
 2356 0517 00       		.byte	0
 2357 0518 0F       		.uleb128 0xf
 2358 0519 01       		.byte	0x1
 2359 051a 91000000 		.4byte	.LASF58
 2360 051e 01       		.byte	0x1
 2361 051f 7405     		.2byte	0x574
 2362 0521 01       		.byte	0x1
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 71


 2363 0522 00000000 		.4byte	.LFB26
 2364 0526 60000000 		.4byte	.LFE26
 2365 052a 5C050000 		.4byte	.LLST26
 2366 052e 01       		.byte	0x1
 2367 052f 43050000 		.4byte	0x543
 2368 0533 0D       		.uleb128 0xd
 2369 0534 BE030000 		.4byte	.LASF21
 2370 0538 01       		.byte	0x1
 2371 0539 7605     		.2byte	0x576
 2372 053b 6F000000 		.4byte	0x6f
 2373 053f 02       		.byte	0x2
 2374 0540 91       		.byte	0x91
 2375 0541 6F       		.sleb128 -17
 2376 0542 00       		.byte	0
 2377 0543 0A       		.uleb128 0xa
 2378 0544 01       		.byte	0x1
 2379 0545 24020000 		.4byte	.LASF59
 2380 0549 01       		.byte	0x1
 2381 054a CD05     		.2byte	0x5cd
 2382 054c 01       		.byte	0x1
 2383 054d 00000000 		.4byte	.LFB27
 2384 0551 B8000000 		.4byte	.LFE27
 2385 0555 94050000 		.4byte	.LLST27
 2386 0559 01       		.byte	0x1
 2387 055a 99050000 		.4byte	0x599
 2388 055e 0B       		.uleb128 0xb
 2389 055f 09010000 		.4byte	.LASF60
 2390 0563 01       		.byte	0x1
 2391 0564 CD05     		.2byte	0x5cd
 2392 0566 6F000000 		.4byte	0x6f
 2393 056a 02       		.byte	0x2
 2394 056b 91       		.byte	0x91
 2395 056c 6F       		.sleb128 -17
 2396 056d 14       		.uleb128 0x14
 2397 056e 14000000 		.4byte	.LBB2
 2398 0572 9C000000 		.4byte	.LBE2
 2399 0576 0D       		.uleb128 0xd
 2400 0577 A1010000 		.4byte	.LASF61
 2401 057b 01       		.byte	0x1
 2402 057c D505     		.2byte	0x5d5
 2403 057e 6F000000 		.4byte	0x6f
 2404 0582 02       		.byte	0x2
 2405 0583 91       		.byte	0x91
 2406 0584 77       		.sleb128 -9
 2407 0585 0D       		.uleb128 0xd
 2408 0586 27030000 		.4byte	.LASF62
 2409 058a 01       		.byte	0x1
 2410 058b FB05     		.2byte	0x5fb
 2411 058d 6F000000 		.4byte	0x6f
 2412 0591 05       		.byte	0x5
 2413 0592 03       		.byte	0x3
 2414 0593 03000000 		.4byte	tx_period.4778
 2415 0597 00       		.byte	0
 2416 0598 00       		.byte	0
 2417 0599 0A       		.uleb128 0xa
 2418 059a 01       		.byte	0x1
 2419 059b 7B000000 		.4byte	.LASF63
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 72


 2420 059f 01       		.byte	0x1
 2421 05a0 4606     		.2byte	0x646
 2422 05a2 01       		.byte	0x1
 2423 05a3 00000000 		.4byte	.LFB28
 2424 05a7 12000000 		.4byte	.LFE28
 2425 05ab CC050000 		.4byte	.LLST28
 2426 05af 01       		.byte	0x1
 2427 05b0 C4050000 		.4byte	0x5c4
 2428 05b4 0B       		.uleb128 0xb
 2429 05b5 C7000000 		.4byte	.LASF38
 2430 05b9 01       		.byte	0x1
 2431 05ba 4606     		.2byte	0x646
 2432 05bc 6F000000 		.4byte	0x6f
 2433 05c0 02       		.byte	0x2
 2434 05c1 91       		.byte	0x91
 2435 05c2 77       		.sleb128 -9
 2436 05c3 00       		.byte	0
 2437 05c4 15       		.uleb128 0x15
 2438 05c5 57030000 		.4byte	.LASF64
 2439 05c9 01       		.byte	0x1
 2440 05ca 1C       		.byte	0x1c
 2441 05cb 6F000000 		.4byte	0x6f
 2442 05cf 01       		.byte	0x1
 2443 05d0 05       		.byte	0x5
 2444 05d1 03       		.byte	0x3
 2445 05d2 00000000 		.4byte	BLUE_initVar
 2446 05d6 16       		.uleb128 0x16
 2447 05d7 6F000000 		.4byte	0x6f
 2448 05db E6050000 		.4byte	0x5e6
 2449 05df 17       		.uleb128 0x17
 2450 05e0 B5000000 		.4byte	0xb5
 2451 05e4 31       		.byte	0x31
 2452 05e5 00       		.byte	0
 2453 05e6 15       		.uleb128 0x15
 2454 05e7 69030000 		.4byte	.LASF65
 2455 05eb 01       		.byte	0x1
 2456 05ec 1E       		.byte	0x1e
 2457 05ed F8050000 		.4byte	0x5f8
 2458 05f1 01       		.byte	0x1
 2459 05f2 05       		.byte	0x5
 2460 05f3 03       		.byte	0x3
 2461 05f4 00000000 		.4byte	BLUE_txBuffer
 2462 05f8 05       		.uleb128 0x5
 2463 05f9 D6050000 		.4byte	0x5d6
 2464 05fd 15       		.uleb128 0x15
 2465 05fe 30040000 		.4byte	.LASF66
 2466 0602 01       		.byte	0x1
 2467 0603 1F       		.byte	0x1f
 2468 0604 B0000000 		.4byte	0xb0
 2469 0608 01       		.byte	0x1
 2470 0609 05       		.byte	0x5
 2471 060a 03       		.byte	0x3
 2472 060b 00000000 		.4byte	BLUE_txBufferRead
 2473 060f 15       		.uleb128 0x15
 2474 0610 D6030000 		.4byte	.LASF67
 2475 0614 01       		.byte	0x1
 2476 0615 20       		.byte	0x20
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 73


 2477 0616 6F000000 		.4byte	0x6f
 2478 061a 01       		.byte	0x1
 2479 061b 05       		.byte	0x5
 2480 061c 03       		.byte	0x3
 2481 061d 00000000 		.4byte	BLUE_txBufferWrite
 2482 0621 00       		.byte	0
 2483              		.section	.debug_abbrev,"",%progbits
 2484              	.Ldebug_abbrev0:
 2485 0000 01       		.uleb128 0x1
 2486 0001 11       		.uleb128 0x11
 2487 0002 01       		.byte	0x1
 2488 0003 25       		.uleb128 0x25
 2489 0004 0E       		.uleb128 0xe
 2490 0005 13       		.uleb128 0x13
 2491 0006 0B       		.uleb128 0xb
 2492 0007 03       		.uleb128 0x3
 2493 0008 0E       		.uleb128 0xe
 2494 0009 1B       		.uleb128 0x1b
 2495 000a 0E       		.uleb128 0xe
 2496 000b 55       		.uleb128 0x55
 2497 000c 06       		.uleb128 0x6
 2498 000d 11       		.uleb128 0x11
 2499 000e 01       		.uleb128 0x1
 2500 000f 52       		.uleb128 0x52
 2501 0010 01       		.uleb128 0x1
 2502 0011 10       		.uleb128 0x10
 2503 0012 06       		.uleb128 0x6
 2504 0013 00       		.byte	0
 2505 0014 00       		.byte	0
 2506 0015 02       		.uleb128 0x2
 2507 0016 24       		.uleb128 0x24
 2508 0017 00       		.byte	0
 2509 0018 0B       		.uleb128 0xb
 2510 0019 0B       		.uleb128 0xb
 2511 001a 3E       		.uleb128 0x3e
 2512 001b 0B       		.uleb128 0xb
 2513 001c 03       		.uleb128 0x3
 2514 001d 0E       		.uleb128 0xe
 2515 001e 00       		.byte	0
 2516 001f 00       		.byte	0
 2517 0020 03       		.uleb128 0x3
 2518 0021 24       		.uleb128 0x24
 2519 0022 00       		.byte	0
 2520 0023 0B       		.uleb128 0xb
 2521 0024 0B       		.uleb128 0xb
 2522 0025 3E       		.uleb128 0x3e
 2523 0026 0B       		.uleb128 0xb
 2524 0027 03       		.uleb128 0x3
 2525 0028 08       		.uleb128 0x8
 2526 0029 00       		.byte	0
 2527 002a 00       		.byte	0
 2528 002b 04       		.uleb128 0x4
 2529 002c 16       		.uleb128 0x16
 2530 002d 00       		.byte	0
 2531 002e 03       		.uleb128 0x3
 2532 002f 0E       		.uleb128 0xe
 2533 0030 3A       		.uleb128 0x3a
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 74


 2534 0031 0B       		.uleb128 0xb
 2535 0032 3B       		.uleb128 0x3b
 2536 0033 0B       		.uleb128 0xb
 2537 0034 49       		.uleb128 0x49
 2538 0035 13       		.uleb128 0x13
 2539 0036 00       		.byte	0
 2540 0037 00       		.byte	0
 2541 0038 05       		.uleb128 0x5
 2542 0039 35       		.uleb128 0x35
 2543 003a 00       		.byte	0
 2544 003b 49       		.uleb128 0x49
 2545 003c 13       		.uleb128 0x13
 2546 003d 00       		.byte	0
 2547 003e 00       		.byte	0
 2548 003f 06       		.uleb128 0x6
 2549 0040 2E       		.uleb128 0x2e
 2550 0041 00       		.byte	0
 2551 0042 3F       		.uleb128 0x3f
 2552 0043 0C       		.uleb128 0xc
 2553 0044 03       		.uleb128 0x3
 2554 0045 0E       		.uleb128 0xe
 2555 0046 3A       		.uleb128 0x3a
 2556 0047 0B       		.uleb128 0xb
 2557 0048 3B       		.uleb128 0x3b
 2558 0049 0B       		.uleb128 0xb
 2559 004a 27       		.uleb128 0x27
 2560 004b 0C       		.uleb128 0xc
 2561 004c 11       		.uleb128 0x11
 2562 004d 01       		.uleb128 0x1
 2563 004e 12       		.uleb128 0x12
 2564 004f 01       		.uleb128 0x1
 2565 0050 40       		.uleb128 0x40
 2566 0051 06       		.uleb128 0x6
 2567 0052 9642     		.uleb128 0x2116
 2568 0054 0C       		.uleb128 0xc
 2569 0055 00       		.byte	0
 2570 0056 00       		.byte	0
 2571 0057 07       		.uleb128 0x7
 2572 0058 2E       		.uleb128 0x2e
 2573 0059 01       		.byte	0x1
 2574 005a 3F       		.uleb128 0x3f
 2575 005b 0C       		.uleb128 0xc
 2576 005c 03       		.uleb128 0x3
 2577 005d 0E       		.uleb128 0xe
 2578 005e 3A       		.uleb128 0x3a
 2579 005f 0B       		.uleb128 0xb
 2580 0060 3B       		.uleb128 0x3b
 2581 0061 0B       		.uleb128 0xb
 2582 0062 27       		.uleb128 0x27
 2583 0063 0C       		.uleb128 0xc
 2584 0064 11       		.uleb128 0x11
 2585 0065 01       		.uleb128 0x1
 2586 0066 12       		.uleb128 0x12
 2587 0067 01       		.uleb128 0x1
 2588 0068 40       		.uleb128 0x40
 2589 0069 06       		.uleb128 0x6
 2590 006a 9642     		.uleb128 0x2116
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 75


 2591 006c 0C       		.uleb128 0xc
 2592 006d 01       		.uleb128 0x1
 2593 006e 13       		.uleb128 0x13
 2594 006f 00       		.byte	0
 2595 0070 00       		.byte	0
 2596 0071 08       		.uleb128 0x8
 2597 0072 34       		.uleb128 0x34
 2598 0073 00       		.byte	0
 2599 0074 03       		.uleb128 0x3
 2600 0075 0E       		.uleb128 0xe
 2601 0076 3A       		.uleb128 0x3a
 2602 0077 0B       		.uleb128 0xb
 2603 0078 3B       		.uleb128 0x3b
 2604 0079 0B       		.uleb128 0xb
 2605 007a 49       		.uleb128 0x49
 2606 007b 13       		.uleb128 0x13
 2607 007c 02       		.uleb128 0x2
 2608 007d 0A       		.uleb128 0xa
 2609 007e 00       		.byte	0
 2610 007f 00       		.byte	0
 2611 0080 09       		.uleb128 0x9
 2612 0081 2E       		.uleb128 0x2e
 2613 0082 00       		.byte	0
 2614 0083 3F       		.uleb128 0x3f
 2615 0084 0C       		.uleb128 0xc
 2616 0085 03       		.uleb128 0x3
 2617 0086 0E       		.uleb128 0xe
 2618 0087 3A       		.uleb128 0x3a
 2619 0088 0B       		.uleb128 0xb
 2620 0089 3B       		.uleb128 0x3b
 2621 008a 05       		.uleb128 0x5
 2622 008b 27       		.uleb128 0x27
 2623 008c 0C       		.uleb128 0xc
 2624 008d 49       		.uleb128 0x49
 2625 008e 13       		.uleb128 0x13
 2626 008f 11       		.uleb128 0x11
 2627 0090 01       		.uleb128 0x1
 2628 0091 12       		.uleb128 0x12
 2629 0092 01       		.uleb128 0x1
 2630 0093 40       		.uleb128 0x40
 2631 0094 06       		.uleb128 0x6
 2632 0095 9742     		.uleb128 0x2117
 2633 0097 0C       		.uleb128 0xc
 2634 0098 00       		.byte	0
 2635 0099 00       		.byte	0
 2636 009a 0A       		.uleb128 0xa
 2637 009b 2E       		.uleb128 0x2e
 2638 009c 01       		.byte	0x1
 2639 009d 3F       		.uleb128 0x3f
 2640 009e 0C       		.uleb128 0xc
 2641 009f 03       		.uleb128 0x3
 2642 00a0 0E       		.uleb128 0xe
 2643 00a1 3A       		.uleb128 0x3a
 2644 00a2 0B       		.uleb128 0xb
 2645 00a3 3B       		.uleb128 0x3b
 2646 00a4 05       		.uleb128 0x5
 2647 00a5 27       		.uleb128 0x27
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 76


 2648 00a6 0C       		.uleb128 0xc
 2649 00a7 11       		.uleb128 0x11
 2650 00a8 01       		.uleb128 0x1
 2651 00a9 12       		.uleb128 0x12
 2652 00aa 01       		.uleb128 0x1
 2653 00ab 40       		.uleb128 0x40
 2654 00ac 06       		.uleb128 0x6
 2655 00ad 9742     		.uleb128 0x2117
 2656 00af 0C       		.uleb128 0xc
 2657 00b0 01       		.uleb128 0x1
 2658 00b1 13       		.uleb128 0x13
 2659 00b2 00       		.byte	0
 2660 00b3 00       		.byte	0
 2661 00b4 0B       		.uleb128 0xb
 2662 00b5 05       		.uleb128 0x5
 2663 00b6 00       		.byte	0
 2664 00b7 03       		.uleb128 0x3
 2665 00b8 0E       		.uleb128 0xe
 2666 00b9 3A       		.uleb128 0x3a
 2667 00ba 0B       		.uleb128 0xb
 2668 00bb 3B       		.uleb128 0x3b
 2669 00bc 05       		.uleb128 0x5
 2670 00bd 49       		.uleb128 0x49
 2671 00be 13       		.uleb128 0x13
 2672 00bf 02       		.uleb128 0x2
 2673 00c0 0A       		.uleb128 0xa
 2674 00c1 00       		.byte	0
 2675 00c2 00       		.byte	0
 2676 00c3 0C       		.uleb128 0xc
 2677 00c4 2E       		.uleb128 0x2e
 2678 00c5 01       		.byte	0x1
 2679 00c6 3F       		.uleb128 0x3f
 2680 00c7 0C       		.uleb128 0xc
 2681 00c8 03       		.uleb128 0x3
 2682 00c9 0E       		.uleb128 0xe
 2683 00ca 3A       		.uleb128 0x3a
 2684 00cb 0B       		.uleb128 0xb
 2685 00cc 3B       		.uleb128 0x3b
 2686 00cd 05       		.uleb128 0x5
 2687 00ce 27       		.uleb128 0x27
 2688 00cf 0C       		.uleb128 0xc
 2689 00d0 49       		.uleb128 0x49
 2690 00d1 13       		.uleb128 0x13
 2691 00d2 11       		.uleb128 0x11
 2692 00d3 01       		.uleb128 0x1
 2693 00d4 12       		.uleb128 0x12
 2694 00d5 01       		.uleb128 0x1
 2695 00d6 40       		.uleb128 0x40
 2696 00d7 06       		.uleb128 0x6
 2697 00d8 9742     		.uleb128 0x2117
 2698 00da 0C       		.uleb128 0xc
 2699 00db 01       		.uleb128 0x1
 2700 00dc 13       		.uleb128 0x13
 2701 00dd 00       		.byte	0
 2702 00de 00       		.byte	0
 2703 00df 0D       		.uleb128 0xd
 2704 00e0 34       		.uleb128 0x34
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 77


 2705 00e1 00       		.byte	0
 2706 00e2 03       		.uleb128 0x3
 2707 00e3 0E       		.uleb128 0xe
 2708 00e4 3A       		.uleb128 0x3a
 2709 00e5 0B       		.uleb128 0xb
 2710 00e6 3B       		.uleb128 0x3b
 2711 00e7 05       		.uleb128 0x5
 2712 00e8 49       		.uleb128 0x49
 2713 00e9 13       		.uleb128 0x13
 2714 00ea 02       		.uleb128 0x2
 2715 00eb 0A       		.uleb128 0xa
 2716 00ec 00       		.byte	0
 2717 00ed 00       		.byte	0
 2718 00ee 0E       		.uleb128 0xe
 2719 00ef 2E       		.uleb128 0x2e
 2720 00f0 00       		.byte	0
 2721 00f1 3F       		.uleb128 0x3f
 2722 00f2 0C       		.uleb128 0xc
 2723 00f3 03       		.uleb128 0x3
 2724 00f4 0E       		.uleb128 0xe
 2725 00f5 3A       		.uleb128 0x3a
 2726 00f6 0B       		.uleb128 0xb
 2727 00f7 3B       		.uleb128 0x3b
 2728 00f8 05       		.uleb128 0x5
 2729 00f9 27       		.uleb128 0x27
 2730 00fa 0C       		.uleb128 0xc
 2731 00fb 49       		.uleb128 0x49
 2732 00fc 13       		.uleb128 0x13
 2733 00fd 11       		.uleb128 0x11
 2734 00fe 01       		.uleb128 0x1
 2735 00ff 12       		.uleb128 0x12
 2736 0100 01       		.uleb128 0x1
 2737 0101 40       		.uleb128 0x40
 2738 0102 06       		.uleb128 0x6
 2739 0103 9642     		.uleb128 0x2116
 2740 0105 0C       		.uleb128 0xc
 2741 0106 00       		.byte	0
 2742 0107 00       		.byte	0
 2743 0108 0F       		.uleb128 0xf
 2744 0109 2E       		.uleb128 0x2e
 2745 010a 01       		.byte	0x1
 2746 010b 3F       		.uleb128 0x3f
 2747 010c 0C       		.uleb128 0xc
 2748 010d 03       		.uleb128 0x3
 2749 010e 0E       		.uleb128 0xe
 2750 010f 3A       		.uleb128 0x3a
 2751 0110 0B       		.uleb128 0xb
 2752 0111 3B       		.uleb128 0x3b
 2753 0112 05       		.uleb128 0x5
 2754 0113 27       		.uleb128 0x27
 2755 0114 0C       		.uleb128 0xc
 2756 0115 11       		.uleb128 0x11
 2757 0116 01       		.uleb128 0x1
 2758 0117 12       		.uleb128 0x12
 2759 0118 01       		.uleb128 0x1
 2760 0119 40       		.uleb128 0x40
 2761 011a 06       		.uleb128 0x6
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 78


 2762 011b 9642     		.uleb128 0x2116
 2763 011d 0C       		.uleb128 0xc
 2764 011e 01       		.uleb128 0x1
 2765 011f 13       		.uleb128 0x13
 2766 0120 00       		.byte	0
 2767 0121 00       		.byte	0
 2768 0122 10       		.uleb128 0x10
 2769 0123 2E       		.uleb128 0x2e
 2770 0124 00       		.byte	0
 2771 0125 3F       		.uleb128 0x3f
 2772 0126 0C       		.uleb128 0xc
 2773 0127 03       		.uleb128 0x3
 2774 0128 0E       		.uleb128 0xe
 2775 0129 3A       		.uleb128 0x3a
 2776 012a 0B       		.uleb128 0xb
 2777 012b 3B       		.uleb128 0x3b
 2778 012c 05       		.uleb128 0x5
 2779 012d 27       		.uleb128 0x27
 2780 012e 0C       		.uleb128 0xc
 2781 012f 11       		.uleb128 0x11
 2782 0130 01       		.uleb128 0x1
 2783 0131 12       		.uleb128 0x12
 2784 0132 01       		.uleb128 0x1
 2785 0133 40       		.uleb128 0x40
 2786 0134 06       		.uleb128 0x6
 2787 0135 9642     		.uleb128 0x2116
 2788 0137 0C       		.uleb128 0xc
 2789 0138 00       		.byte	0
 2790 0139 00       		.byte	0
 2791 013a 11       		.uleb128 0x11
 2792 013b 0F       		.uleb128 0xf
 2793 013c 00       		.byte	0
 2794 013d 0B       		.uleb128 0xb
 2795 013e 0B       		.uleb128 0xb
 2796 013f 49       		.uleb128 0x49
 2797 0140 13       		.uleb128 0x13
 2798 0141 00       		.byte	0
 2799 0142 00       		.byte	0
 2800 0143 12       		.uleb128 0x12
 2801 0144 26       		.uleb128 0x26
 2802 0145 00       		.byte	0
 2803 0146 49       		.uleb128 0x49
 2804 0147 13       		.uleb128 0x13
 2805 0148 00       		.byte	0
 2806 0149 00       		.byte	0
 2807 014a 13       		.uleb128 0x13
 2808 014b 2E       		.uleb128 0x2e
 2809 014c 01       		.byte	0x1
 2810 014d 3F       		.uleb128 0x3f
 2811 014e 0C       		.uleb128 0xc
 2812 014f 03       		.uleb128 0x3
 2813 0150 0E       		.uleb128 0xe
 2814 0151 3A       		.uleb128 0x3a
 2815 0152 0B       		.uleb128 0xb
 2816 0153 3B       		.uleb128 0x3b
 2817 0154 05       		.uleb128 0x5
 2818 0155 27       		.uleb128 0x27
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 79


 2819 0156 0C       		.uleb128 0xc
 2820 0157 49       		.uleb128 0x49
 2821 0158 13       		.uleb128 0x13
 2822 0159 11       		.uleb128 0x11
 2823 015a 01       		.uleb128 0x1
 2824 015b 12       		.uleb128 0x12
 2825 015c 01       		.uleb128 0x1
 2826 015d 40       		.uleb128 0x40
 2827 015e 06       		.uleb128 0x6
 2828 015f 9642     		.uleb128 0x2116
 2829 0161 0C       		.uleb128 0xc
 2830 0162 01       		.uleb128 0x1
 2831 0163 13       		.uleb128 0x13
 2832 0164 00       		.byte	0
 2833 0165 00       		.byte	0
 2834 0166 14       		.uleb128 0x14
 2835 0167 0B       		.uleb128 0xb
 2836 0168 01       		.byte	0x1
 2837 0169 11       		.uleb128 0x11
 2838 016a 01       		.uleb128 0x1
 2839 016b 12       		.uleb128 0x12
 2840 016c 01       		.uleb128 0x1
 2841 016d 00       		.byte	0
 2842 016e 00       		.byte	0
 2843 016f 15       		.uleb128 0x15
 2844 0170 34       		.uleb128 0x34
 2845 0171 00       		.byte	0
 2846 0172 03       		.uleb128 0x3
 2847 0173 0E       		.uleb128 0xe
 2848 0174 3A       		.uleb128 0x3a
 2849 0175 0B       		.uleb128 0xb
 2850 0176 3B       		.uleb128 0x3b
 2851 0177 0B       		.uleb128 0xb
 2852 0178 49       		.uleb128 0x49
 2853 0179 13       		.uleb128 0x13
 2854 017a 3F       		.uleb128 0x3f
 2855 017b 0C       		.uleb128 0xc
 2856 017c 02       		.uleb128 0x2
 2857 017d 0A       		.uleb128 0xa
 2858 017e 00       		.byte	0
 2859 017f 00       		.byte	0
 2860 0180 16       		.uleb128 0x16
 2861 0181 01       		.uleb128 0x1
 2862 0182 01       		.byte	0x1
 2863 0183 49       		.uleb128 0x49
 2864 0184 13       		.uleb128 0x13
 2865 0185 01       		.uleb128 0x1
 2866 0186 13       		.uleb128 0x13
 2867 0187 00       		.byte	0
 2868 0188 00       		.byte	0
 2869 0189 17       		.uleb128 0x17
 2870 018a 21       		.uleb128 0x21
 2871 018b 00       		.byte	0
 2872 018c 49       		.uleb128 0x49
 2873 018d 13       		.uleb128 0x13
 2874 018e 2F       		.uleb128 0x2f
 2875 018f 0B       		.uleb128 0xb
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 80


 2876 0190 00       		.byte	0
 2877 0191 00       		.byte	0
 2878 0192 00       		.byte	0
 2879              		.section	.debug_loc,"",%progbits
 2880              	.Ldebug_loc0:
 2881              	.LLST0:
 2882 0000 00000000 		.4byte	.LFB0
 2883 0004 02000000 		.4byte	.LCFI0
 2884 0008 0200     		.2byte	0x2
 2885 000a 7D       		.byte	0x7d
 2886 000b 00       		.sleb128 0
 2887 000c 02000000 		.4byte	.LCFI0
 2888 0010 04000000 		.4byte	.LCFI1
 2889 0014 0200     		.2byte	0x2
 2890 0016 7D       		.byte	0x7d
 2891 0017 08       		.sleb128 8
 2892 0018 04000000 		.4byte	.LCFI1
 2893 001c 24000000 		.4byte	.LFE0
 2894 0020 0200     		.2byte	0x2
 2895 0022 77       		.byte	0x77
 2896 0023 08       		.sleb128 8
 2897 0024 00000000 		.4byte	0
 2898 0028 00000000 		.4byte	0
 2899              	.LLST1:
 2900 002c 00000000 		.4byte	.LFB1
 2901 0030 02000000 		.4byte	.LCFI2
 2902 0034 0200     		.2byte	0x2
 2903 0036 7D       		.byte	0x7d
 2904 0037 00       		.sleb128 0
 2905 0038 02000000 		.4byte	.LCFI2
 2906 003c 04000000 		.4byte	.LCFI3
 2907 0040 0200     		.2byte	0x2
 2908 0042 7D       		.byte	0x7d
 2909 0043 08       		.sleb128 8
 2910 0044 04000000 		.4byte	.LCFI3
 2911 0048 50000000 		.4byte	.LFE1
 2912 004c 0200     		.2byte	0x2
 2913 004e 77       		.byte	0x77
 2914 004f 08       		.sleb128 8
 2915 0050 00000000 		.4byte	0
 2916 0054 00000000 		.4byte	0
 2917              	.LLST2:
 2918 0058 00000000 		.4byte	.LFB2
 2919 005c 02000000 		.4byte	.LCFI4
 2920 0060 0200     		.2byte	0x2
 2921 0062 7D       		.byte	0x7d
 2922 0063 00       		.sleb128 0
 2923 0064 02000000 		.4byte	.LCFI4
 2924 0068 04000000 		.4byte	.LCFI5
 2925 006c 0200     		.2byte	0x2
 2926 006e 7D       		.byte	0x7d
 2927 006f 0C       		.sleb128 12
 2928 0070 04000000 		.4byte	.LCFI5
 2929 0074 06000000 		.4byte	.LCFI6
 2930 0078 0200     		.2byte	0x2
 2931 007a 7D       		.byte	0x7d
 2932 007b 18       		.sleb128 24
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 81


 2933 007c 06000000 		.4byte	.LCFI6
 2934 0080 68000000 		.4byte	.LFE2
 2935 0084 0200     		.2byte	0x2
 2936 0086 77       		.byte	0x77
 2937 0087 18       		.sleb128 24
 2938 0088 00000000 		.4byte	0
 2939 008c 00000000 		.4byte	0
 2940              	.LLST3:
 2941 0090 00000000 		.4byte	.LFB3
 2942 0094 02000000 		.4byte	.LCFI7
 2943 0098 0200     		.2byte	0x2
 2944 009a 7D       		.byte	0x7d
 2945 009b 00       		.sleb128 0
 2946 009c 02000000 		.4byte	.LCFI7
 2947 00a0 04000000 		.4byte	.LCFI8
 2948 00a4 0200     		.2byte	0x2
 2949 00a6 7D       		.byte	0x7d
 2950 00a7 0C       		.sleb128 12
 2951 00a8 04000000 		.4byte	.LCFI8
 2952 00ac 06000000 		.4byte	.LCFI9
 2953 00b0 0200     		.2byte	0x2
 2954 00b2 7D       		.byte	0x7d
 2955 00b3 18       		.sleb128 24
 2956 00b4 06000000 		.4byte	.LCFI9
 2957 00b8 64000000 		.4byte	.LFE3
 2958 00bc 0200     		.2byte	0x2
 2959 00be 77       		.byte	0x77
 2960 00bf 18       		.sleb128 24
 2961 00c0 00000000 		.4byte	0
 2962 00c4 00000000 		.4byte	0
 2963              	.LLST4:
 2964 00c8 00000000 		.4byte	.LFB4
 2965 00cc 02000000 		.4byte	.LCFI10
 2966 00d0 0200     		.2byte	0x2
 2967 00d2 7D       		.byte	0x7d
 2968 00d3 00       		.sleb128 0
 2969 00d4 02000000 		.4byte	.LCFI10
 2970 00d8 04000000 		.4byte	.LCFI11
 2971 00dc 0200     		.2byte	0x2
 2972 00de 7D       		.byte	0x7d
 2973 00df 08       		.sleb128 8
 2974 00e0 04000000 		.4byte	.LCFI11
 2975 00e4 0C000000 		.4byte	.LFE4
 2976 00e8 0200     		.2byte	0x2
 2977 00ea 77       		.byte	0x77
 2978 00eb 08       		.sleb128 8
 2979 00ec 00000000 		.4byte	0
 2980 00f0 00000000 		.4byte	0
 2981              	.LLST5:
 2982 00f4 00000000 		.4byte	.LFB5
 2983 00f8 02000000 		.4byte	.LCFI12
 2984 00fc 0200     		.2byte	0x2
 2985 00fe 7D       		.byte	0x7d
 2986 00ff 00       		.sleb128 0
 2987 0100 02000000 		.4byte	.LCFI12
 2988 0104 04000000 		.4byte	.LCFI13
 2989 0108 0200     		.2byte	0x2
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 82


 2990 010a 7D       		.byte	0x7d
 2991 010b 08       		.sleb128 8
 2992 010c 04000000 		.4byte	.LCFI13
 2993 0110 06000000 		.4byte	.LCFI14
 2994 0114 0200     		.2byte	0x2
 2995 0116 7D       		.byte	0x7d
 2996 0117 10       		.sleb128 16
 2997 0118 06000000 		.4byte	.LCFI14
 2998 011c 12000000 		.4byte	.LFE5
 2999 0120 0200     		.2byte	0x2
 3000 0122 77       		.byte	0x77
 3001 0123 10       		.sleb128 16
 3002 0124 00000000 		.4byte	0
 3003 0128 00000000 		.4byte	0
 3004              	.LLST6:
 3005 012c 00000000 		.4byte	.LFB6
 3006 0130 02000000 		.4byte	.LCFI15
 3007 0134 0200     		.2byte	0x2
 3008 0136 7D       		.byte	0x7d
 3009 0137 00       		.sleb128 0
 3010 0138 02000000 		.4byte	.LCFI15
 3011 013c 04000000 		.4byte	.LCFI16
 3012 0140 0200     		.2byte	0x2
 3013 0142 7D       		.byte	0x7d
 3014 0143 08       		.sleb128 8
 3015 0144 04000000 		.4byte	.LCFI16
 3016 0148 06000000 		.4byte	.LCFI17
 3017 014c 0200     		.2byte	0x2
 3018 014e 7D       		.byte	0x7d
 3019 014f 10       		.sleb128 16
 3020 0150 06000000 		.4byte	.LCFI17
 3021 0154 20000000 		.4byte	.LFE6
 3022 0158 0200     		.2byte	0x2
 3023 015a 77       		.byte	0x77
 3024 015b 10       		.sleb128 16
 3025 015c 00000000 		.4byte	0
 3026 0160 00000000 		.4byte	0
 3027              	.LLST7:
 3028 0164 00000000 		.4byte	.LFB7
 3029 0168 02000000 		.4byte	.LCFI18
 3030 016c 0200     		.2byte	0x2
 3031 016e 7D       		.byte	0x7d
 3032 016f 00       		.sleb128 0
 3033 0170 02000000 		.4byte	.LCFI18
 3034 0174 04000000 		.4byte	.LCFI19
 3035 0178 0200     		.2byte	0x2
 3036 017a 7D       		.byte	0x7d
 3037 017b 08       		.sleb128 8
 3038 017c 04000000 		.4byte	.LCFI19
 3039 0180 06000000 		.4byte	.LCFI20
 3040 0184 0200     		.2byte	0x2
 3041 0186 7D       		.byte	0x7d
 3042 0187 10       		.sleb128 16
 3043 0188 06000000 		.4byte	.LCFI20
 3044 018c 20000000 		.4byte	.LFE7
 3045 0190 0200     		.2byte	0x2
 3046 0192 77       		.byte	0x77
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 83


 3047 0193 10       		.sleb128 16
 3048 0194 00000000 		.4byte	0
 3049 0198 00000000 		.4byte	0
 3050              	.LLST8:
 3051 019c 00000000 		.4byte	.LFB8
 3052 01a0 02000000 		.4byte	.LCFI21
 3053 01a4 0200     		.2byte	0x2
 3054 01a6 7D       		.byte	0x7d
 3055 01a7 00       		.sleb128 0
 3056 01a8 02000000 		.4byte	.LCFI21
 3057 01ac 04000000 		.4byte	.LCFI22
 3058 01b0 0200     		.2byte	0x2
 3059 01b2 7D       		.byte	0x7d
 3060 01b3 08       		.sleb128 8
 3061 01b4 04000000 		.4byte	.LCFI22
 3062 01b8 06000000 		.4byte	.LCFI23
 3063 01bc 0200     		.2byte	0x2
 3064 01be 7D       		.byte	0x7d
 3065 01bf 10       		.sleb128 16
 3066 01c0 06000000 		.4byte	.LCFI23
 3067 01c4 24000000 		.4byte	.LFE8
 3068 01c8 0200     		.2byte	0x2
 3069 01ca 77       		.byte	0x77
 3070 01cb 10       		.sleb128 16
 3071 01cc 00000000 		.4byte	0
 3072 01d0 00000000 		.4byte	0
 3073              	.LLST9:
 3074 01d4 00000000 		.4byte	.LFB9
 3075 01d8 02000000 		.4byte	.LCFI24
 3076 01dc 0200     		.2byte	0x2
 3077 01de 7D       		.byte	0x7d
 3078 01df 00       		.sleb128 0
 3079 01e0 02000000 		.4byte	.LCFI24
 3080 01e4 04000000 		.4byte	.LCFI25
 3081 01e8 0200     		.2byte	0x2
 3082 01ea 7D       		.byte	0x7d
 3083 01eb 08       		.sleb128 8
 3084 01ec 04000000 		.4byte	.LCFI25
 3085 01f0 06000000 		.4byte	.LCFI26
 3086 01f4 0200     		.2byte	0x2
 3087 01f6 7D       		.byte	0x7d
 3088 01f7 10       		.sleb128 16
 3089 01f8 06000000 		.4byte	.LCFI26
 3090 01fc 4C000000 		.4byte	.LFE9
 3091 0200 0200     		.2byte	0x2
 3092 0202 77       		.byte	0x77
 3093 0203 10       		.sleb128 16
 3094 0204 00000000 		.4byte	0
 3095 0208 00000000 		.4byte	0
 3096              	.LLST10:
 3097 020c 00000000 		.4byte	.LFB10
 3098 0210 02000000 		.4byte	.LCFI27
 3099 0214 0200     		.2byte	0x2
 3100 0216 7D       		.byte	0x7d
 3101 0217 00       		.sleb128 0
 3102 0218 02000000 		.4byte	.LCFI27
 3103 021c 04000000 		.4byte	.LCFI28
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 84


 3104 0220 0200     		.2byte	0x2
 3105 0222 7D       		.byte	0x7d
 3106 0223 10       		.sleb128 16
 3107 0224 04000000 		.4byte	.LCFI28
 3108 0228 22000000 		.4byte	.LFE10
 3109 022c 0200     		.2byte	0x2
 3110 022e 77       		.byte	0x77
 3111 022f 10       		.sleb128 16
 3112 0230 00000000 		.4byte	0
 3113 0234 00000000 		.4byte	0
 3114              	.LLST11:
 3115 0238 00000000 		.4byte	.LFB11
 3116 023c 02000000 		.4byte	.LCFI29
 3117 0240 0200     		.2byte	0x2
 3118 0242 7D       		.byte	0x7d
 3119 0243 00       		.sleb128 0
 3120 0244 02000000 		.4byte	.LCFI29
 3121 0248 04000000 		.4byte	.LCFI30
 3122 024c 0200     		.2byte	0x2
 3123 024e 7D       		.byte	0x7d
 3124 024f 08       		.sleb128 8
 3125 0250 04000000 		.4byte	.LCFI30
 3126 0254 06000000 		.4byte	.LCFI31
 3127 0258 0200     		.2byte	0x2
 3128 025a 7D       		.byte	0x7d
 3129 025b 10       		.sleb128 16
 3130 025c 06000000 		.4byte	.LCFI31
 3131 0260 30000000 		.4byte	.LFE11
 3132 0264 0200     		.2byte	0x2
 3133 0266 77       		.byte	0x77
 3134 0267 10       		.sleb128 16
 3135 0268 00000000 		.4byte	0
 3136 026c 00000000 		.4byte	0
 3137              	.LLST12:
 3138 0270 00000000 		.4byte	.LFB12
 3139 0274 02000000 		.4byte	.LCFI32
 3140 0278 0200     		.2byte	0x2
 3141 027a 7D       		.byte	0x7d
 3142 027b 00       		.sleb128 0
 3143 027c 02000000 		.4byte	.LCFI32
 3144 0280 04000000 		.4byte	.LCFI33
 3145 0284 0200     		.2byte	0x2
 3146 0286 7D       		.byte	0x7d
 3147 0287 0C       		.sleb128 12
 3148 0288 04000000 		.4byte	.LCFI33
 3149 028c 06000000 		.4byte	.LCFI34
 3150 0290 0200     		.2byte	0x2
 3151 0292 7D       		.byte	0x7d
 3152 0293 18       		.sleb128 24
 3153 0294 06000000 		.4byte	.LCFI34
 3154 0298 44000000 		.4byte	.LFE12
 3155 029c 0200     		.2byte	0x2
 3156 029e 77       		.byte	0x77
 3157 029f 18       		.sleb128 24
 3158 02a0 00000000 		.4byte	0
 3159 02a4 00000000 		.4byte	0
 3160              	.LLST13:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 85


 3161 02a8 00000000 		.4byte	.LFB13
 3162 02ac 02000000 		.4byte	.LCFI35
 3163 02b0 0200     		.2byte	0x2
 3164 02b2 7D       		.byte	0x7d
 3165 02b3 00       		.sleb128 0
 3166 02b4 02000000 		.4byte	.LCFI35
 3167 02b8 04000000 		.4byte	.LCFI36
 3168 02bc 0200     		.2byte	0x2
 3169 02be 7D       		.byte	0x7d
 3170 02bf 08       		.sleb128 8
 3171 02c0 04000000 		.4byte	.LCFI36
 3172 02c4 06000000 		.4byte	.LCFI37
 3173 02c8 0200     		.2byte	0x2
 3174 02ca 7D       		.byte	0x7d
 3175 02cb 10       		.sleb128 16
 3176 02cc 06000000 		.4byte	.LCFI37
 3177 02d0 12000000 		.4byte	.LFE13
 3178 02d4 0200     		.2byte	0x2
 3179 02d6 77       		.byte	0x77
 3180 02d7 10       		.sleb128 16
 3181 02d8 00000000 		.4byte	0
 3182 02dc 00000000 		.4byte	0
 3183              	.LLST14:
 3184 02e0 00000000 		.4byte	.LFB14
 3185 02e4 02000000 		.4byte	.LCFI38
 3186 02e8 0200     		.2byte	0x2
 3187 02ea 7D       		.byte	0x7d
 3188 02eb 00       		.sleb128 0
 3189 02ec 02000000 		.4byte	.LCFI38
 3190 02f0 04000000 		.4byte	.LCFI39
 3191 02f4 0200     		.2byte	0x2
 3192 02f6 7D       		.byte	0x7d
 3193 02f7 08       		.sleb128 8
 3194 02f8 04000000 		.4byte	.LCFI39
 3195 02fc 06000000 		.4byte	.LCFI40
 3196 0300 0200     		.2byte	0x2
 3197 0302 7D       		.byte	0x7d
 3198 0303 10       		.sleb128 16
 3199 0304 06000000 		.4byte	.LCFI40
 3200 0308 20000000 		.4byte	.LFE14
 3201 030c 0200     		.2byte	0x2
 3202 030e 77       		.byte	0x77
 3203 030f 10       		.sleb128 16
 3204 0310 00000000 		.4byte	0
 3205 0314 00000000 		.4byte	0
 3206              	.LLST15:
 3207 0318 00000000 		.4byte	.LFB15
 3208 031c 02000000 		.4byte	.LCFI41
 3209 0320 0200     		.2byte	0x2
 3210 0322 7D       		.byte	0x7d
 3211 0323 00       		.sleb128 0
 3212 0324 02000000 		.4byte	.LCFI41
 3213 0328 04000000 		.4byte	.LCFI42
 3214 032c 0200     		.2byte	0x2
 3215 032e 7D       		.byte	0x7d
 3216 032f 08       		.sleb128 8
 3217 0330 04000000 		.4byte	.LCFI42
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 86


 3218 0334 06000000 		.4byte	.LCFI43
 3219 0338 0200     		.2byte	0x2
 3220 033a 7D       		.byte	0x7d
 3221 033b 10       		.sleb128 16
 3222 033c 06000000 		.4byte	.LCFI43
 3223 0340 20000000 		.4byte	.LFE15
 3224 0344 0200     		.2byte	0x2
 3225 0346 77       		.byte	0x77
 3226 0347 10       		.sleb128 16
 3227 0348 00000000 		.4byte	0
 3228 034c 00000000 		.4byte	0
 3229              	.LLST16:
 3230 0350 00000000 		.4byte	.LFB16
 3231 0354 02000000 		.4byte	.LCFI44
 3232 0358 0200     		.2byte	0x2
 3233 035a 7D       		.byte	0x7d
 3234 035b 00       		.sleb128 0
 3235 035c 02000000 		.4byte	.LCFI44
 3236 0360 04000000 		.4byte	.LCFI45
 3237 0364 0200     		.2byte	0x2
 3238 0366 7D       		.byte	0x7d
 3239 0367 08       		.sleb128 8
 3240 0368 04000000 		.4byte	.LCFI45
 3241 036c 0E000000 		.4byte	.LFE16
 3242 0370 0200     		.2byte	0x2
 3243 0372 77       		.byte	0x77
 3244 0373 08       		.sleb128 8
 3245 0374 00000000 		.4byte	0
 3246 0378 00000000 		.4byte	0
 3247              	.LLST17:
 3248 037c 00000000 		.4byte	.LFB17
 3249 0380 02000000 		.4byte	.LCFI46
 3250 0384 0200     		.2byte	0x2
 3251 0386 7D       		.byte	0x7d
 3252 0387 00       		.sleb128 0
 3253 0388 02000000 		.4byte	.LCFI46
 3254 038c 04000000 		.4byte	.LCFI47
 3255 0390 0200     		.2byte	0x2
 3256 0392 7D       		.byte	0x7d
 3257 0393 08       		.sleb128 8
 3258 0394 04000000 		.4byte	.LCFI47
 3259 0398 0E000000 		.4byte	.LFE17
 3260 039c 0200     		.2byte	0x2
 3261 039e 77       		.byte	0x77
 3262 039f 08       		.sleb128 8
 3263 03a0 00000000 		.4byte	0
 3264 03a4 00000000 		.4byte	0
 3265              	.LLST18:
 3266 03a8 00000000 		.4byte	.LFB18
 3267 03ac 02000000 		.4byte	.LCFI48
 3268 03b0 0200     		.2byte	0x2
 3269 03b2 7D       		.byte	0x7d
 3270 03b3 00       		.sleb128 0
 3271 03b4 02000000 		.4byte	.LCFI48
 3272 03b8 04000000 		.4byte	.LCFI49
 3273 03bc 0200     		.2byte	0x2
 3274 03be 7D       		.byte	0x7d
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 87


 3275 03bf 08       		.sleb128 8
 3276 03c0 04000000 		.4byte	.LCFI49
 3277 03c4 06000000 		.4byte	.LCFI50
 3278 03c8 0200     		.2byte	0x2
 3279 03ca 7D       		.byte	0x7d
 3280 03cb 10       		.sleb128 16
 3281 03cc 06000000 		.4byte	.LCFI50
 3282 03d0 20000000 		.4byte	.LFE18
 3283 03d4 0200     		.2byte	0x2
 3284 03d6 77       		.byte	0x77
 3285 03d7 10       		.sleb128 16
 3286 03d8 00000000 		.4byte	0
 3287 03dc 00000000 		.4byte	0
 3288              	.LLST19:
 3289 03e0 00000000 		.4byte	.LFB19
 3290 03e4 02000000 		.4byte	.LCFI51
 3291 03e8 0200     		.2byte	0x2
 3292 03ea 7D       		.byte	0x7d
 3293 03eb 00       		.sleb128 0
 3294 03ec 02000000 		.4byte	.LCFI51
 3295 03f0 04000000 		.4byte	.LCFI52
 3296 03f4 0200     		.2byte	0x2
 3297 03f6 7D       		.byte	0x7d
 3298 03f7 08       		.sleb128 8
 3299 03f8 04000000 		.4byte	.LCFI52
 3300 03fc 06000000 		.4byte	.LCFI53
 3301 0400 0200     		.2byte	0x2
 3302 0402 7D       		.byte	0x7d
 3303 0403 10       		.sleb128 16
 3304 0404 06000000 		.4byte	.LCFI53
 3305 0408 88000000 		.4byte	.LFE19
 3306 040c 0200     		.2byte	0x2
 3307 040e 77       		.byte	0x77
 3308 040f 10       		.sleb128 16
 3309 0410 00000000 		.4byte	0
 3310 0414 00000000 		.4byte	0
 3311              	.LLST20:
 3312 0418 00000000 		.4byte	.LFB20
 3313 041c 02000000 		.4byte	.LCFI54
 3314 0420 0200     		.2byte	0x2
 3315 0422 7D       		.byte	0x7d
 3316 0423 00       		.sleb128 0
 3317 0424 02000000 		.4byte	.LCFI54
 3318 0428 04000000 		.4byte	.LCFI55
 3319 042c 0200     		.2byte	0x2
 3320 042e 7D       		.byte	0x7d
 3321 042f 08       		.sleb128 8
 3322 0430 04000000 		.4byte	.LCFI55
 3323 0434 14000000 		.4byte	.LFE20
 3324 0438 0200     		.2byte	0x2
 3325 043a 77       		.byte	0x77
 3326 043b 08       		.sleb128 8
 3327 043c 00000000 		.4byte	0
 3328 0440 00000000 		.4byte	0
 3329              	.LLST21:
 3330 0444 00000000 		.4byte	.LFB21
 3331 0448 02000000 		.4byte	.LCFI56
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 88


 3332 044c 0200     		.2byte	0x2
 3333 044e 7D       		.byte	0x7d
 3334 044f 00       		.sleb128 0
 3335 0450 02000000 		.4byte	.LCFI56
 3336 0454 04000000 		.4byte	.LCFI57
 3337 0458 0200     		.2byte	0x2
 3338 045a 7D       		.byte	0x7d
 3339 045b 08       		.sleb128 8
 3340 045c 04000000 		.4byte	.LCFI57
 3341 0460 06000000 		.4byte	.LCFI58
 3342 0464 0200     		.2byte	0x2
 3343 0466 7D       		.byte	0x7d
 3344 0467 18       		.sleb128 24
 3345 0468 06000000 		.4byte	.LCFI58
 3346 046c DC000000 		.4byte	.LFE21
 3347 0470 0200     		.2byte	0x2
 3348 0472 77       		.byte	0x77
 3349 0473 18       		.sleb128 24
 3350 0474 00000000 		.4byte	0
 3351 0478 00000000 		.4byte	0
 3352              	.LLST22:
 3353 047c 00000000 		.4byte	.LFB22
 3354 0480 02000000 		.4byte	.LCFI59
 3355 0484 0200     		.2byte	0x2
 3356 0486 7D       		.byte	0x7d
 3357 0487 00       		.sleb128 0
 3358 0488 02000000 		.4byte	.LCFI59
 3359 048c 04000000 		.4byte	.LCFI60
 3360 0490 0200     		.2byte	0x2
 3361 0492 7D       		.byte	0x7d
 3362 0493 08       		.sleb128 8
 3363 0494 04000000 		.4byte	.LCFI60
 3364 0498 06000000 		.4byte	.LCFI61
 3365 049c 0200     		.2byte	0x2
 3366 049e 7D       		.byte	0x7d
 3367 049f 18       		.sleb128 24
 3368 04a0 06000000 		.4byte	.LCFI61
 3369 04a4 54000000 		.4byte	.LFE22
 3370 04a8 0200     		.2byte	0x2
 3371 04aa 77       		.byte	0x77
 3372 04ab 18       		.sleb128 24
 3373 04ac 00000000 		.4byte	0
 3374 04b0 00000000 		.4byte	0
 3375              	.LLST23:
 3376 04b4 00000000 		.4byte	.LFB23
 3377 04b8 02000000 		.4byte	.LCFI62
 3378 04bc 0200     		.2byte	0x2
 3379 04be 7D       		.byte	0x7d
 3380 04bf 00       		.sleb128 0
 3381 04c0 02000000 		.4byte	.LCFI62
 3382 04c4 04000000 		.4byte	.LCFI63
 3383 04c8 0200     		.2byte	0x2
 3384 04ca 7D       		.byte	0x7d
 3385 04cb 08       		.sleb128 8
 3386 04cc 04000000 		.4byte	.LCFI63
 3387 04d0 06000000 		.4byte	.LCFI64
 3388 04d4 0200     		.2byte	0x2
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 89


 3389 04d6 7D       		.byte	0x7d
 3390 04d7 18       		.sleb128 24
 3391 04d8 06000000 		.4byte	.LCFI64
 3392 04dc 58000000 		.4byte	.LFE23
 3393 04e0 0200     		.2byte	0x2
 3394 04e2 77       		.byte	0x77
 3395 04e3 18       		.sleb128 24
 3396 04e4 00000000 		.4byte	0
 3397 04e8 00000000 		.4byte	0
 3398              	.LLST24:
 3399 04ec 00000000 		.4byte	.LFB24
 3400 04f0 02000000 		.4byte	.LCFI65
 3401 04f4 0200     		.2byte	0x2
 3402 04f6 7D       		.byte	0x7d
 3403 04f7 00       		.sleb128 0
 3404 04f8 02000000 		.4byte	.LCFI65
 3405 04fc 04000000 		.4byte	.LCFI66
 3406 0500 0200     		.2byte	0x2
 3407 0502 7D       		.byte	0x7d
 3408 0503 08       		.sleb128 8
 3409 0504 04000000 		.4byte	.LCFI66
 3410 0508 06000000 		.4byte	.LCFI67
 3411 050c 0200     		.2byte	0x2
 3412 050e 7D       		.byte	0x7d
 3413 050f 10       		.sleb128 16
 3414 0510 06000000 		.4byte	.LCFI67
 3415 0514 34000000 		.4byte	.LFE24
 3416 0518 0200     		.2byte	0x2
 3417 051a 77       		.byte	0x77
 3418 051b 10       		.sleb128 16
 3419 051c 00000000 		.4byte	0
 3420 0520 00000000 		.4byte	0
 3421              	.LLST25:
 3422 0524 00000000 		.4byte	.LFB25
 3423 0528 02000000 		.4byte	.LCFI68
 3424 052c 0200     		.2byte	0x2
 3425 052e 7D       		.byte	0x7d
 3426 052f 00       		.sleb128 0
 3427 0530 02000000 		.4byte	.LCFI68
 3428 0534 04000000 		.4byte	.LCFI69
 3429 0538 0200     		.2byte	0x2
 3430 053a 7D       		.byte	0x7d
 3431 053b 08       		.sleb128 8
 3432 053c 04000000 		.4byte	.LCFI69
 3433 0540 06000000 		.4byte	.LCFI70
 3434 0544 0200     		.2byte	0x2
 3435 0546 7D       		.byte	0x7d
 3436 0547 10       		.sleb128 16
 3437 0548 06000000 		.4byte	.LCFI70
 3438 054c 6C000000 		.4byte	.LFE25
 3439 0550 0200     		.2byte	0x2
 3440 0552 77       		.byte	0x77
 3441 0553 10       		.sleb128 16
 3442 0554 00000000 		.4byte	0
 3443 0558 00000000 		.4byte	0
 3444              	.LLST26:
 3445 055c 00000000 		.4byte	.LFB26
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 90


 3446 0560 02000000 		.4byte	.LCFI71
 3447 0564 0200     		.2byte	0x2
 3448 0566 7D       		.byte	0x7d
 3449 0567 00       		.sleb128 0
 3450 0568 02000000 		.4byte	.LCFI71
 3451 056c 04000000 		.4byte	.LCFI72
 3452 0570 0200     		.2byte	0x2
 3453 0572 7D       		.byte	0x7d
 3454 0573 0C       		.sleb128 12
 3455 0574 04000000 		.4byte	.LCFI72
 3456 0578 06000000 		.4byte	.LCFI73
 3457 057c 0200     		.2byte	0x2
 3458 057e 7D       		.byte	0x7d
 3459 057f 18       		.sleb128 24
 3460 0580 06000000 		.4byte	.LCFI73
 3461 0584 60000000 		.4byte	.LFE26
 3462 0588 0200     		.2byte	0x2
 3463 058a 77       		.byte	0x77
 3464 058b 18       		.sleb128 24
 3465 058c 00000000 		.4byte	0
 3466 0590 00000000 		.4byte	0
 3467              	.LLST27:
 3468 0594 00000000 		.4byte	.LFB27
 3469 0598 02000000 		.4byte	.LCFI74
 3470 059c 0200     		.2byte	0x2
 3471 059e 7D       		.byte	0x7d
 3472 059f 00       		.sleb128 0
 3473 05a0 02000000 		.4byte	.LCFI74
 3474 05a4 04000000 		.4byte	.LCFI75
 3475 05a8 0200     		.2byte	0x2
 3476 05aa 7D       		.byte	0x7d
 3477 05ab 08       		.sleb128 8
 3478 05ac 04000000 		.4byte	.LCFI75
 3479 05b0 06000000 		.4byte	.LCFI76
 3480 05b4 0200     		.2byte	0x2
 3481 05b6 7D       		.byte	0x7d
 3482 05b7 18       		.sleb128 24
 3483 05b8 06000000 		.4byte	.LCFI76
 3484 05bc B8000000 		.4byte	.LFE27
 3485 05c0 0200     		.2byte	0x2
 3486 05c2 77       		.byte	0x77
 3487 05c3 18       		.sleb128 24
 3488 05c4 00000000 		.4byte	0
 3489 05c8 00000000 		.4byte	0
 3490              	.LLST28:
 3491 05cc 00000000 		.4byte	.LFB28
 3492 05d0 02000000 		.4byte	.LCFI77
 3493 05d4 0200     		.2byte	0x2
 3494 05d6 7D       		.byte	0x7d
 3495 05d7 00       		.sleb128 0
 3496 05d8 02000000 		.4byte	.LCFI77
 3497 05dc 04000000 		.4byte	.LCFI78
 3498 05e0 0200     		.2byte	0x2
 3499 05e2 7D       		.byte	0x7d
 3500 05e3 08       		.sleb128 8
 3501 05e4 04000000 		.4byte	.LCFI78
 3502 05e8 06000000 		.4byte	.LCFI79
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 91


 3503 05ec 0200     		.2byte	0x2
 3504 05ee 7D       		.byte	0x7d
 3505 05ef 10       		.sleb128 16
 3506 05f0 06000000 		.4byte	.LCFI79
 3507 05f4 12000000 		.4byte	.LFE28
 3508 05f8 0200     		.2byte	0x2
 3509 05fa 77       		.byte	0x77
 3510 05fb 10       		.sleb128 16
 3511 05fc 00000000 		.4byte	0
 3512 0600 00000000 		.4byte	0
 3513              		.section	.debug_aranges,"",%progbits
 3514 0000 FC000000 		.4byte	0xfc
 3515 0004 0200     		.2byte	0x2
 3516 0006 00000000 		.4byte	.Ldebug_info0
 3517 000a 04       		.byte	0x4
 3518 000b 00       		.byte	0
 3519 000c 0000     		.2byte	0
 3520 000e 0000     		.2byte	0
 3521 0010 00000000 		.4byte	.LFB0
 3522 0014 24000000 		.4byte	.LFE0-.LFB0
 3523 0018 00000000 		.4byte	.LFB1
 3524 001c 50000000 		.4byte	.LFE1-.LFB1
 3525 0020 00000000 		.4byte	.LFB2
 3526 0024 68000000 		.4byte	.LFE2-.LFB2
 3527 0028 00000000 		.4byte	.LFB3
 3528 002c 64000000 		.4byte	.LFE3-.LFB3
 3529 0030 00000000 		.4byte	.LFB4
 3530 0034 0C000000 		.4byte	.LFE4-.LFB4
 3531 0038 00000000 		.4byte	.LFB5
 3532 003c 12000000 		.4byte	.LFE5-.LFB5
 3533 0040 00000000 		.4byte	.LFB6
 3534 0044 20000000 		.4byte	.LFE6-.LFB6
 3535 0048 00000000 		.4byte	.LFB7
 3536 004c 20000000 		.4byte	.LFE7-.LFB7
 3537 0050 00000000 		.4byte	.LFB8
 3538 0054 24000000 		.4byte	.LFE8-.LFB8
 3539 0058 00000000 		.4byte	.LFB9
 3540 005c 4C000000 		.4byte	.LFE9-.LFB9
 3541 0060 00000000 		.4byte	.LFB10
 3542 0064 22000000 		.4byte	.LFE10-.LFB10
 3543 0068 00000000 		.4byte	.LFB11
 3544 006c 30000000 		.4byte	.LFE11-.LFB11
 3545 0070 00000000 		.4byte	.LFB12
 3546 0074 44000000 		.4byte	.LFE12-.LFB12
 3547 0078 00000000 		.4byte	.LFB13
 3548 007c 12000000 		.4byte	.LFE13-.LFB13
 3549 0080 00000000 		.4byte	.LFB14
 3550 0084 20000000 		.4byte	.LFE14-.LFB14
 3551 0088 00000000 		.4byte	.LFB15
 3552 008c 20000000 		.4byte	.LFE15-.LFB15
 3553 0090 00000000 		.4byte	.LFB16
 3554 0094 0E000000 		.4byte	.LFE16-.LFB16
 3555 0098 00000000 		.4byte	.LFB17
 3556 009c 0E000000 		.4byte	.LFE17-.LFB17
 3557 00a0 00000000 		.4byte	.LFB18
 3558 00a4 20000000 		.4byte	.LFE18-.LFB18
 3559 00a8 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 92


 3560 00ac 88000000 		.4byte	.LFE19-.LFB19
 3561 00b0 00000000 		.4byte	.LFB20
 3562 00b4 14000000 		.4byte	.LFE20-.LFB20
 3563 00b8 00000000 		.4byte	.LFB21
 3564 00bc DC000000 		.4byte	.LFE21-.LFB21
 3565 00c0 00000000 		.4byte	.LFB22
 3566 00c4 54000000 		.4byte	.LFE22-.LFB22
 3567 00c8 00000000 		.4byte	.LFB23
 3568 00cc 58000000 		.4byte	.LFE23-.LFB23
 3569 00d0 00000000 		.4byte	.LFB24
 3570 00d4 34000000 		.4byte	.LFE24-.LFB24
 3571 00d8 00000000 		.4byte	.LFB25
 3572 00dc 6C000000 		.4byte	.LFE25-.LFB25
 3573 00e0 00000000 		.4byte	.LFB26
 3574 00e4 60000000 		.4byte	.LFE26-.LFB26
 3575 00e8 00000000 		.4byte	.LFB27
 3576 00ec B8000000 		.4byte	.LFE27-.LFB27
 3577 00f0 00000000 		.4byte	.LFB28
 3578 00f4 12000000 		.4byte	.LFE28-.LFB28
 3579 00f8 00000000 		.4byte	0
 3580 00fc 00000000 		.4byte	0
 3581              		.section	.debug_ranges,"",%progbits
 3582              	.Ldebug_ranges0:
 3583 0000 00000000 		.4byte	.LFB0
 3584 0004 24000000 		.4byte	.LFE0
 3585 0008 00000000 		.4byte	.LFB1
 3586 000c 50000000 		.4byte	.LFE1
 3587 0010 00000000 		.4byte	.LFB2
 3588 0014 68000000 		.4byte	.LFE2
 3589 0018 00000000 		.4byte	.LFB3
 3590 001c 64000000 		.4byte	.LFE3
 3591 0020 00000000 		.4byte	.LFB4
 3592 0024 0C000000 		.4byte	.LFE4
 3593 0028 00000000 		.4byte	.LFB5
 3594 002c 12000000 		.4byte	.LFE5
 3595 0030 00000000 		.4byte	.LFB6
 3596 0034 20000000 		.4byte	.LFE6
 3597 0038 00000000 		.4byte	.LFB7
 3598 003c 20000000 		.4byte	.LFE7
 3599 0040 00000000 		.4byte	.LFB8
 3600 0044 24000000 		.4byte	.LFE8
 3601 0048 00000000 		.4byte	.LFB9
 3602 004c 4C000000 		.4byte	.LFE9
 3603 0050 00000000 		.4byte	.LFB10
 3604 0054 22000000 		.4byte	.LFE10
 3605 0058 00000000 		.4byte	.LFB11
 3606 005c 30000000 		.4byte	.LFE11
 3607 0060 00000000 		.4byte	.LFB12
 3608 0064 44000000 		.4byte	.LFE12
 3609 0068 00000000 		.4byte	.LFB13
 3610 006c 12000000 		.4byte	.LFE13
 3611 0070 00000000 		.4byte	.LFB14
 3612 0074 20000000 		.4byte	.LFE14
 3613 0078 00000000 		.4byte	.LFB15
 3614 007c 20000000 		.4byte	.LFE15
 3615 0080 00000000 		.4byte	.LFB16
 3616 0084 0E000000 		.4byte	.LFE16
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 93


 3617 0088 00000000 		.4byte	.LFB17
 3618 008c 0E000000 		.4byte	.LFE17
 3619 0090 00000000 		.4byte	.LFB18
 3620 0094 20000000 		.4byte	.LFE18
 3621 0098 00000000 		.4byte	.LFB19
 3622 009c 88000000 		.4byte	.LFE19
 3623 00a0 00000000 		.4byte	.LFB20
 3624 00a4 14000000 		.4byte	.LFE20
 3625 00a8 00000000 		.4byte	.LFB21
 3626 00ac DC000000 		.4byte	.LFE21
 3627 00b0 00000000 		.4byte	.LFB22
 3628 00b4 54000000 		.4byte	.LFE22
 3629 00b8 00000000 		.4byte	.LFB23
 3630 00bc 58000000 		.4byte	.LFE23
 3631 00c0 00000000 		.4byte	.LFB24
 3632 00c4 34000000 		.4byte	.LFE24
 3633 00c8 00000000 		.4byte	.LFB25
 3634 00cc 6C000000 		.4byte	.LFE25
 3635 00d0 00000000 		.4byte	.LFB26
 3636 00d4 60000000 		.4byte	.LFE26
 3637 00d8 00000000 		.4byte	.LFB27
 3638 00dc B8000000 		.4byte	.LFE27
 3639 00e0 00000000 		.4byte	.LFB28
 3640 00e4 12000000 		.4byte	.LFE28
 3641 00e8 00000000 		.4byte	0
 3642 00ec 00000000 		.4byte	0
 3643              		.section	.debug_line,"",%progbits
 3644              	.Ldebug_line0:
 3645 0000 44030000 		.section	.debug_str,"MS",%progbits,1
 3645      02004300 
 3645      00000201 
 3645      FB0E0D00 
 3645      01010101 
 3646              	.LASF10:
 3647 0000 75696E74 		.ascii	"uint16\000"
 3647      313600
 3648              	.LASF46:
 3649 0007 74784461 		.ascii	"txDataByte\000"
 3649      74614279 
 3649      746500
 3650              	.LASF52:
 3651 0012 73747269 		.ascii	"string\000"
 3651      6E6700
 3652              	.LASF22:
 3653 0019 424C5545 		.ascii	"BLUE_WriteControlRegister\000"
 3653      5F577269 
 3653      7465436F 
 3653      6E74726F 
 3653      6C526567 
 3654              	.LASF20:
 3655 0033 424C5545 		.ascii	"BLUE_Stop\000"
 3655      5F53746F 
 3655      7000
 3656              	.LASF48:
 3657 003d 424C5545 		.ascii	"BLUE_PutChar\000"
 3657      5F507574 
 3657      43686172 
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 94


 3657      00
 3658              	.LASF7:
 3659 004a 6C6F6E67 		.ascii	"long long unsigned int\000"
 3659      206C6F6E 
 3659      6720756E 
 3659      7369676E 
 3659      65642069 
 3660              	.LASF6:
 3661 0061 6C6F6E67 		.ascii	"long long int\000"
 3661      206C6F6E 
 3661      6720696E 
 3661      7400
 3662              	.LASF0:
 3663 006f 7369676E 		.ascii	"signed char\000"
 3663      65642063 
 3663      68617200 
 3664              	.LASF63:
 3665 007b 424C5545 		.ascii	"BLUE_SetTxAddressMode\000"
 3665      5F536574 
 3665      54784164 
 3665      64726573 
 3665      734D6F64 
 3666              	.LASF58:
 3667 0091 424C5545 		.ascii	"BLUE_ClearTxBuffer\000"
 3667      5F436C65 
 3667      61725478 
 3667      42756666 
 3667      657200
 3668              	.LASF4:
 3669 00a4 6C6F6E67 		.ascii	"long int\000"
 3669      20696E74 
 3669      00
 3670              	.LASF56:
 3671 00ad 424C5545 		.ascii	"BLUE_PutCRLF\000"
 3671      5F507574 
 3671      43524C46 
 3671      00
 3672              	.LASF9:
 3673 00ba 75696E74 		.ascii	"uint8\000"
 3673      3800
 3674              	.LASF12:
 3675 00c0 646F7562 		.ascii	"double\000"
 3675      6C6500
 3676              	.LASF38:
 3677 00c7 61646472 		.ascii	"addressMode\000"
 3677      6573734D 
 3677      6F646500 
 3678              	.LASF37:
 3679 00d3 424C5545 		.ascii	"BLUE_SetRxAddressMode\000"
 3679      5F536574 
 3679      52784164 
 3679      64726573 
 3679      734D6F64 
 3680              	.LASF24:
 3681 00e9 636F6E74 		.ascii	"control\000"
 3681      726F6C00 
 3682              	.LASF23:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 95


 3683 00f1 424C5545 		.ascii	"BLUE_SetRxInterruptMode\000"
 3683      5F536574 
 3683      5278496E 
 3683      74657272 
 3683      7570744D 
 3684              	.LASF60:
 3685 0109 7265744D 		.ascii	"retMode\000"
 3685      6F646500 
 3686              	.LASF8:
 3687 0111 756E7369 		.ascii	"unsigned int\000"
 3687      676E6564 
 3687      20696E74 
 3687      00
 3688              	.LASF17:
 3689 011e 424C5545 		.ascii	"BLUE_Start\000"
 3689      5F537461 
 3689      727400
 3690              	.LASF5:
 3691 0129 6C6F6E67 		.ascii	"long unsigned int\000"
 3691      20756E73 
 3691      69676E65 
 3691      6420696E 
 3691      7400
 3692              	.LASF50:
 3693 013b 6C6F635F 		.ascii	"loc_txBufferRead\000"
 3693      74784275 
 3693      66666572 
 3693      52656164 
 3693      00
 3694              	.LASF35:
 3695 014c 73697A65 		.ascii	"size\000"
 3695      00
 3696              	.LASF3:
 3697 0151 73686F72 		.ascii	"short unsigned int\000"
 3697      7420756E 
 3697      7369676E 
 3697      65642069 
 3697      6E7400
 3698              	.LASF28:
 3699 0164 424C5545 		.ascii	"BLUE_ReadRxStatus\000"
 3699      5F526561 
 3699      64527853 
 3699      74617475 
 3699      7300
 3700              	.LASF25:
 3701 0176 696E7453 		.ascii	"intSrc\000"
 3701      726300
 3702              	.LASF42:
 3703 017d 424C5545 		.ascii	"BLUE_EnableTxInt\000"
 3703      5F456E61 
 3703      626C6554 
 3703      78496E74 
 3703      00
 3704              	.LASF36:
 3705 018e 424C5545 		.ascii	"BLUE_ClearRxBuffer\000"
 3705      5F436C65 
 3705      61725278 
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 96


 3705      42756666 
 3705      657200
 3706              	.LASF61:
 3707 01a1 746D7053 		.ascii	"tmpStat\000"
 3707      74617400 
 3708              	.LASF33:
 3709 01a9 424C5545 		.ascii	"BLUE_GetByte\000"
 3709      5F476574 
 3709      42797465 
 3709      00
 3710              	.LASF16:
 3711 01b6 73697A65 		.ascii	"sizetype\000"
 3711      74797065 
 3711      00
 3712              	.LASF49:
 3713 01bf 6C6F635F 		.ascii	"loc_txBufferWrite\000"
 3713      74784275 
 3713      66666572 
 3713      57726974 
 3713      6500
 3714              	.LASF40:
 3715 01d1 61646472 		.ascii	"address\000"
 3715      65737300 
 3716              	.LASF27:
 3717 01d9 424C5545 		.ascii	"BLUE_ReadRxData\000"
 3717      5F526561 
 3717      64527844 
 3717      61746100 
 3718              	.LASF19:
 3719 01e9 424C5545 		.ascii	"BLUE_Enable\000"
 3719      5F456E61 
 3719      626C6500 
 3720              	.LASF31:
 3721 01f5 72785374 		.ascii	"rxStatus\000"
 3721      61747573 
 3721      00
 3722              	.LASF11:
 3723 01fe 666C6F61 		.ascii	"float\000"
 3723      7400
 3724              	.LASF69:
 3725 0204 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\BLUE.c\000"
 3725      6E657261 
 3725      7465645F 
 3725      536F7572 
 3725      63655C50 
 3726              	.LASF59:
 3727 0224 424C5545 		.ascii	"BLUE_SendBreak\000"
 3727      5F53656E 
 3727      64427265 
 3727      616B00
 3728              	.LASF44:
 3729 0233 424C5545 		.ascii	"BLUE_SetTxInterruptMode\000"
 3729      5F536574 
 3729      5478496E 
 3729      74657272 
 3729      7570744D 
 3730              	.LASF70:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 97


 3731 024b 433A5C50 		.ascii	"C:\\Projects\\PSoC\\Bootloading_PSoC5_LP\\PSoc4_Mai"
 3731      726F6A65 
 3731      6374735C 
 3731      50536F43 
 3731      5C426F6F 
 3732 027a 6E2E6379 		.ascii	"n.cydsn\000"
 3732      64736E00 
 3733              	.LASF68:
 3734 0282 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 3734      4320342E 
 3734      372E3320 
 3734      32303133 
 3734      30333132 
 3735 02b5 616E6368 		.ascii	"anch revision 196615]\000"
 3735      20726576 
 3735      6973696F 
 3735      6E203139 
 3735      36363135 
 3736              	.LASF15:
 3737 02cb 72656738 		.ascii	"reg8\000"
 3737      00
 3738              	.LASF1:
 3739 02d0 756E7369 		.ascii	"unsigned char\000"
 3739      676E6564 
 3739      20636861 
 3739      7200
 3740              	.LASF2:
 3741 02de 73686F72 		.ascii	"short int\000"
 3741      7420696E 
 3741      7400
 3742              	.LASF39:
 3743 02e8 424C5545 		.ascii	"BLUE_SetRxAddress1\000"
 3743      5F536574 
 3743      52784164 
 3743      64726573 
 3743      733100
 3744              	.LASF41:
 3745 02fb 424C5545 		.ascii	"BLUE_SetRxAddress2\000"
 3745      5F536574 
 3745      52784164 
 3745      64726573 
 3745      733200
 3746              	.LASF32:
 3747 030e 424C5545 		.ascii	"BLUE_ReadControlRegister\000"
 3747      5F526561 
 3747      64436F6E 
 3747      74726F6C 
 3747      52656769 
 3748              	.LASF62:
 3749 0327 74785F70 		.ascii	"tx_period\000"
 3749      6572696F 
 3749      6400
 3750              	.LASF55:
 3751 0331 62797465 		.ascii	"byteCount\000"
 3751      436F756E 
 3751      7400
 3752              	.LASF57:
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 98


 3753 033b 424C5545 		.ascii	"BLUE_GetTxBufferSize\000"
 3753      5F476574 
 3753      54784275 
 3753      66666572 
 3753      53697A65 
 3754              	.LASF26:
 3755 0350 72784461 		.ascii	"rxData\000"
 3755      746100
 3756              	.LASF64:
 3757 0357 424C5545 		.ascii	"BLUE_initVar\000"
 3757      5F696E69 
 3757      74566172 
 3757      00
 3758              	.LASF14:
 3759 0364 63686172 		.ascii	"char\000"
 3759      00
 3760              	.LASF65:
 3761 0369 424C5545 		.ascii	"BLUE_txBuffer\000"
 3761      5F747842 
 3761      75666665 
 3761      7200
 3762              	.LASF13:
 3763 0377 63686172 		.ascii	"char8\000"
 3763      3800
 3764              	.LASF47:
 3765 037d 424C5545 		.ascii	"BLUE_ReadTxStatus\000"
 3765      5F526561 
 3765      64547853 
 3765      74617475 
 3765      7300
 3766              	.LASF43:
 3767 038f 424C5545 		.ascii	"BLUE_DisableTxInt\000"
 3767      5F446973 
 3767      61626C65 
 3767      5478496E 
 3767      7400
 3768              	.LASF51:
 3769 03a1 424C5545 		.ascii	"BLUE_PutString\000"
 3769      5F507574 
 3769      53747269 
 3769      6E6700
 3770              	.LASF54:
 3771 03b0 424C5545 		.ascii	"BLUE_PutArray\000"
 3771      5F507574 
 3771      41727261 
 3771      7900
 3772              	.LASF21:
 3773 03be 656E6162 		.ascii	"enableInterrupts\000"
 3773      6C65496E 
 3773      74657272 
 3773      75707473 
 3773      00
 3774              	.LASF29:
 3775 03cf 73746174 		.ascii	"status\000"
 3775      757300
 3776              	.LASF67:
 3777 03d6 424C5545 		.ascii	"BLUE_txBufferWrite\000"
ARM GAS  C:\Users\javier\AppData\Local\Temp\ccfyNxQa.s 			page 99


 3777      5F747842 
 3777      75666665 
 3777      72577269 
 3777      746500
 3778              	.LASF18:
 3779 03e9 424C5545 		.ascii	"BLUE_Init\000"
 3779      5F496E69 
 3779      7400
 3780              	.LASF53:
 3781 03f3 6275665F 		.ascii	"buf_index\000"
 3781      696E6465 
 3781      7800
 3782              	.LASF45:
 3783 03fd 424C5545 		.ascii	"BLUE_WriteTxData\000"
 3783      5F577269 
 3783      74655478 
 3783      44617461 
 3783      00
 3784              	.LASF30:
 3785 040e 424C5545 		.ascii	"BLUE_GetChar\000"
 3785      5F476574 
 3785      43686172 
 3785      00
 3786              	.LASF34:
 3787 041b 424C5545 		.ascii	"BLUE_GetRxBufferSize\000"
 3787      5F476574 
 3787      52784275 
 3787      66666572 
 3787      53697A65 
 3788              	.LASF66:
 3789 0430 424C5545 		.ascii	"BLUE_txBufferRead\000"
 3789      5F747842 
 3789      75666665 
 3789      72526561 
 3789      6400
 3790              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
